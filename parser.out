Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal
Rule 2     var1 -> var
Rule 3     var1 -> empty
Rule 4     func1 -> funcion func1
Rule 5     func1 -> empty
Rule 6     principal -> PRINCIPAL pnPrincipal2 LPAREN RPAREN bloque
Rule 7     var -> VAR var2
Rule 8     var2 -> type TWO_DOTS lista_ids pnDF2 var3
Rule 9     var3 -> var2
Rule 10    var3 -> empty
Rule 11    type -> tipo_simple
Rule 12    type -> tipo_compuesto
Rule 13    funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7
Rule 14    tipo_fun -> VOID pn_1_setCurrentType
Rule 15    tipo_fun -> tipo_simple
Rule 16    parametros -> param
Rule 17    parametros -> empty
Rule 18    param -> tipo_simple ID pnFunDec_2_3 param1
Rule 19    param1 -> COMMA param
Rule 20    param1 -> empty
Rule 21    tipo_simple -> INT pn_1_setCurrentType
Rule 22    tipo_simple -> FLOAT pn_1_setCurrentType
Rule 23    tipo_simple -> CHAR pn_1_setCurrentType
Rule 24    tipo_compuesto -> DATAFRAME pn_1_setCurrentType pnDF
Rule 25    tipo_compuesto -> STRING pn_1_setCurrentType
Rule 26    lista_ids -> lista SEMICOLON
Rule 27    lista -> ID pn_2_addVariable dd lista1
Rule 28    dd -> dim_dec pnDimDec8
Rule 29    dd -> empty
Rule 30    lista1 -> COMMA lista
Rule 31    lista1 -> empty
Rule 32    dim_dec -> LBRACK pnDimDec2_3 CTE_INT pnDimDec5 RBRACK pn_7_decRenglones dim_dec1
Rule 33    dim_dec1 -> LBRACK CTE_INT pnDimDec6 RBRACK pn_8_decColumnas
Rule 34    dim_dec1 -> empty
Rule 35    dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1
Rule 36    dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc
Rule 37    dim_index1 -> empty
Rule 38    bloque -> LBRACE est RBRACE
Rule 39    est -> estatutos est
Rule 40    est -> empty
Rule 41    estatutos -> asignacion
Rule 42    estatutos -> llamada
Rule 43    estatutos -> retorno
Rule 44    estatutos -> lectura
Rule 45    estatutos -> escritura
Rule 46    estatutos -> carga_datos
Rule 47    estatutos -> decision
Rule 48    estatutos -> condicional
Rule 49    estatutos -> no_condicional
Rule 50    estatutos -> funciones_especiales_void
Rule 51    asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2
Rule 52    variable -> ID pnExp1 di
Rule 53    di -> dim_index
Rule 54    di -> empty
Rule 55    llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
Rule 56    llamada1 -> exp pnFunCall_3 llamada2
Rule 57    llamada1 -> empty
Rule 58    llamada2 -> COMMA llamada1
Rule 59    llamada2 -> empty
Rule 60    retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON
Rule 61    lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5
Rule 62    escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5
Rule 63    esc -> esc1 esc2
Rule 64    esc1 -> exp pnSec4
Rule 65    esc2 -> COMMA esc
Rule 66    esc2 -> empty
Rule 67    carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga
Rule 68    ca -> ID pnExp1
Rule 69    ca -> CTE_INT pnCteInt
Rule 70    decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2
Rule 71    sino -> SINO pnCond3 bloque
Rule 72    sino -> empty
Rule 73    condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3
Rule 74    no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
Rule 75    funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON
Rule 76    funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
Rule 77    funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
Rule 78    funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
Rule 79    fe -> MEDIA pnFunEsp1
Rule 80    fe -> MEDIANA pnFunEsp1
Rule 81    fe -> MODA pnFunEsp1
Rule 82    fe -> VARIANZA pnFunEsp1
Rule 83    fe -> CORRELACIONA pnFunEsp1
Rule 84    var_cte -> CTE_CH pnCteChar
Rule 85    var_cte -> CTE_STR pnCteStr
Rule 86    var_cte -> SUB pnNeg var_num
Rule 87    var_cte -> var_num
Rule 88    var_num -> CTE_INT pnCteInt
Rule 89    var_num -> CTE_FLOAT pnCteFloat
Rule 90    expresion -> mega_exp expresion1
Rule 91    expresion1 -> ASSIGN expresion
Rule 92    expresion1 -> empty
Rule 93    mega_exp -> super_exp meg
Rule 94    meg -> op_l pnExp10 mega_exp pnExp11
Rule 95    meg -> empty
Rule 96    op_l -> AND
Rule 97    op_l -> OR
Rule 98    super_exp -> exp sp
Rule 99    sp -> op_r exp pnExp9
Rule 100   sp -> empty
Rule 101   op_r -> LT pnExp8
Rule 102   op_r -> GT pnExp8
Rule 103   op_r -> LE pnExp8
Rule 104   op_r -> GE pnExp8
Rule 105   op_r -> NOT_EQUAL pnExp8
Rule 106   op_r -> EQUAL pnExp8
Rule 107   exp -> termino pnExp4 exp1
Rule 108   exp1 -> op_a exp
Rule 109   exp1 -> empty
Rule 110   op_a -> ADD pnExp2
Rule 111   op_a -> SUB pnExp2
Rule 112   termino -> factor pnExp5 term
Rule 113   term -> op_a1 termino
Rule 114   term -> empty
Rule 115   op_a1 -> MUL pnExp3
Rule 116   op_a1 -> DIV pnExp3
Rule 117   factor -> var_cte
Rule 118   factor -> LPAREN pnExp6 exp RPAREN pnExp7
Rule 119   factor -> variable
Rule 120   factor -> llamada
Rule 121   factor -> funciones_especiales
Rule 122   empty -> <empty>
Rule 123   pnGOTOprincipal -> <empty>
Rule 124   pnPrincipal2 -> <empty>
Rule 125   pnDF -> <empty>
Rule 126   pnDF2 -> <empty>
Rule 127   pn_1_setCurrentType -> <empty>
Rule 128   pn_2_addVariable -> <empty>
Rule 129   pn_7_decRenglones -> <empty>
Rule 130   pn_8_decColumnas -> <empty>
Rule 131   pnFunDec1 -> <empty>
Rule 132   pnFunDec_2_3 -> <empty>
Rule 133   pnFunDec4 -> <empty>
Rule 134   pnFunDec7 -> <empty>
Rule 135   pnFunCall_1_2 -> <empty>
Rule 136   pnFunCall_3 -> <empty>
Rule 137   pnFunCall_5_6_llamada -> <empty>
Rule 138   pnFunEsp1 -> <empty>
Rule 139   pnFunEsp2 -> <empty>
Rule 140   pnFunEspVoid1 -> <empty>
Rule 141   pnNeg -> <empty>
Rule 142   pnCteInt -> <empty>
Rule 143   pnCteFloat -> <empty>
Rule 144   pnCteChar -> <empty>
Rule 145   pnCteStr -> <empty>
Rule 146   pnExp1 -> <empty>
Rule 147   pnExp2 -> <empty>
Rule 148   pnExp3 -> <empty>
Rule 149   pnExp4 -> <empty>
Rule 150   pnExp5 -> <empty>
Rule 151   pnExp6 -> <empty>
Rule 152   pnExp7 -> <empty>
Rule 153   pnExp8 -> <empty>
Rule 154   pnExp9 -> <empty>
Rule 155   pnExp10 -> <empty>
Rule 156   pnExp11 -> <empty>
Rule 157   pnSec1 -> <empty>
Rule 158   pnSec2 -> <empty>
Rule 159   pnSec3 -> <empty>
Rule 160   pnSec4 -> <empty>
Rule 161   pnSec5 -> <empty>
Rule 162   pnCond1 -> <empty>
Rule 163   pnCond2 -> <empty>
Rule 164   pnCond3 -> <empty>
Rule 165   pnCiclos1 -> <empty>
Rule 166   pnCiclos2 -> <empty>
Rule 167   pnCiclos3 -> <empty>
Rule 168   pnCiclos4 -> <empty>
Rule 169   pnCiclos5 -> <empty>
Rule 170   pnCiclos6 -> <empty>
Rule 171   pnCiclos7 -> <empty>
Rule 172   pnCiclos8 -> <empty>
Rule 173   pnRetorno -> <empty>
Rule 174   pnDimDec2_3 -> <empty>
Rule 175   pnDimDec5 -> <empty>
Rule 176   pnDimDec6 -> <empty>
Rule 177   pnDimDec8 -> <empty>
Rule 178   pnDimAccess2 -> <empty>
Rule 179   pnArregloAcc -> <empty>
Rule 180   pnMatrizAcc -> <empty>
Rule 181   pnActivaArray -> <empty>
Rule 182   pnCarga -> <empty>

Terminals, with rules where they appear

ADD                  : 110
AND                  : 96
ASSIGN               : 51 74 91
CARGA                : 67
CHAR                 : 23
COMMA                : 19 30 58 65 67 67 67 75 75 76 76 77 77 78 78
COMMENT              : 
CORRELACIONA         : 83
CTE_CH               : 84
CTE_FLOAT            : 89
CTE_INT              : 32 33 69 76 76 77 78 78 88
CTE_STR              : 67 85
DATAFRAME            : 24
DESDE                : 74
DIV                  : 116
ENTONCES             : 70
EQUAL                : 106
ESCRIBE              : 62
FLOAT                : 22
FUNCION              : 13
GE                   : 104
GT                   : 102
HACER                : 74
HASTA                : 74
HAZ                  : 73
HISTOGRAMA           : 76
ID                   : 1 13 18 27 52 55 67 68 75 75 75 76 78
INT                  : 21
LBRACE               : 38
LBRACK               : 32 33 35 36
LE                   : 103
LEE                  : 61
LPAREN               : 6 13 55 60 61 62 67 70 73 75 76 77 78 118
LT                   : 101
MEDIA                : 79
MEDIANA              : 80
MIENTRAS             : 73
MODA                 : 81
MUL                  : 115
NOT_EQUAL            : 105
OR                   : 97
PLOTLINE             : 77
PRINCIPAL            : 6
PROGRAMA             : 1
RBRACE               : 38
RBRACK               : 32 33 35 36
REGRESA              : 60
RPAREN               : 6 13 55 60 61 62 67 70 73 75 76 77 78 118
SEMICOLON            : 1 26 51 60 61 62 67 75 76 77
SI                   : 70
SINO                 : 71
STRING               : 25
SUB                  : 86 111
TWO_DOTS             : 8
VAR                  : 7
VARIABLES            : 75
VARIANZA             : 82
VOID                 : 14
error                : 

Nonterminals, with rules where they appear

asignacion           : 41
bloque               : 6 13 70 71 73 74
ca                   : 67 67 77 77
carga_datos          : 46
condicional          : 48
dd                   : 27
decision             : 47
di                   : 52
dim_dec              : 28
dim_dec1             : 32
dim_index            : 53
dim_index1           : 35
empty                : 3 5 10 17 20 29 31 34 37 40 54 57 59 66 72 92 95 100 109 114
esc                  : 62 65
esc1                 : 63
esc2                 : 63
escritura            : 45
est                  : 38 39
estatutos            : 39
exp                  : 35 36 51 56 60 64 74 74 98 99 108 118
exp1                 : 107
expresion            : 70 73 91
expresion1           : 90
factor               : 112
fe                   : 78
func1                : 1 4
funcion              : 4
funciones_especiales : 121
funciones_especiales_void : 50
lectura              : 44
lista                : 26 30
lista1               : 27
lista_ids            : 8
llamada              : 42 120
llamada1             : 55 58
llamada2             : 56
meg                  : 93
mega_exp             : 90 94
no_condicional       : 49
op_a                 : 108
op_a1                : 113
op_l                 : 94
op_r                 : 99
param                : 16 19
param1               : 18
parametros           : 13
pnActivaArray        : 35 36
pnArregloAcc         : 35
pnCarga              : 67
pnCiclos1            : 73
pnCiclos2            : 73
pnCiclos3            : 73
pnCiclos4            : 74
pnCiclos5            : 74
pnCiclos6            : 74
pnCiclos7            : 74
pnCiclos8            : 74
pnCond1              : 70
pnCond2              : 70
pnCond3              : 71
pnCteChar            : 84
pnCteFloat           : 89
pnCteInt             : 69 76 76 77 78 78 88
pnCteStr             : 67 85
pnDF                 : 24
pnDF2                : 8
pnDimAccess2         : 35
pnDimDec2_3          : 32
pnDimDec5            : 32
pnDimDec6            : 33
pnDimDec8            : 28
pnExp1               : 52 67 68 76 78
pnExp10              : 94
pnExp11              : 94
pnExp2               : 110 111
pnExp3               : 115 116
pnExp4               : 107
pnExp5               : 112
pnExp6               : 35 36 118
pnExp7               : 35 36 118
pnExp8               : 101 102 103 104 105 106
pnExp9               : 99
pnFunCall_1_2        : 55
pnFunCall_3          : 56
pnFunCall_5_6_llamada : 55
pnFunDec1            : 13
pnFunDec4            : 13
pnFunDec7            : 13
pnFunDec_2_3         : 18
pnFunEsp1            : 75 76 77 79 80 81 82 83
pnFunEsp2            : 78
pnFunEspVoid1        : 76 77
pnGOTOprincipal      : 1
pnMatrizAcc          : 36
pnNeg                : 86
pnPrincipal2         : 6
pnRetorno            : 60
pnSec1               : 51 74
pnSec2               : 51
pnSec3               : 60 61 62
pnSec4               : 61 64
pnSec5               : 61 62
pn_1_setCurrentType  : 14 21 22 23 24 25
pn_2_addVariable     : 27
pn_7_decRenglones    : 32
pn_8_decColumnas     : 33
principal            : 1
programa             : 0
retorno              : 43
sino                 : 70
sp                   : 98
super_exp            : 93
term                 : 112
termino              : 107 113
tipo_compuesto       : 12
tipo_fun             : 13
tipo_simple          : 11 15 18
type                 : 8
var                  : 2
var1                 : 1 13
var2                 : 7 9
var3                 : 8
var_cte              : 117
var_num              : 86 87
variable             : 51 61 74 119

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON var1 pnGOTOprincipal func1 principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON var1 pnGOTOprincipal func1 principal

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . var1 pnGOTOprincipal func1 principal
    (2) var1 -> . var
    (3) var1 -> . empty
    (7) var -> . VAR var2
    (122) empty -> .

    VAR             shift and go to state 8
    FUNCION         reduce using rule 122 (empty -> .)
    PRINCIPAL       reduce using rule 122 (empty -> .)

    var1                           shift and go to state 5
    var                            shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMICOLON var1 . pnGOTOprincipal func1 principal
    (123) pnGOTOprincipal -> .

    FUNCION         reduce using rule 123 (pnGOTOprincipal -> .)
    PRINCIPAL       reduce using rule 123 (pnGOTOprincipal -> .)

    pnGOTOprincipal                shift and go to state 9

state 6

    (2) var1 -> var .

    FUNCION         reduce using rule 2 (var1 -> var .)
    PRINCIPAL       reduce using rule 2 (var1 -> var .)
    LBRACE          reduce using rule 2 (var1 -> var .)


state 7

    (3) var1 -> empty .

    FUNCION         reduce using rule 3 (var1 -> empty .)
    PRINCIPAL       reduce using rule 3 (var1 -> empty .)
    LBRACE          reduce using rule 3 (var1 -> empty .)


state 8

    (7) var -> VAR . var2
    (8) var2 -> . type TWO_DOTS lista_ids pnDF2 var3
    (11) type -> . tipo_simple
    (12) type -> . tipo_compuesto
    (21) tipo_simple -> . INT pn_1_setCurrentType
    (22) tipo_simple -> . FLOAT pn_1_setCurrentType
    (23) tipo_simple -> . CHAR pn_1_setCurrentType
    (24) tipo_compuesto -> . DATAFRAME pn_1_setCurrentType pnDF
    (25) tipo_compuesto -> . STRING pn_1_setCurrentType

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    STRING          shift and go to state 18

    var2                           shift and go to state 10
    type                           shift and go to state 11
    tipo_simple                    shift and go to state 12
    tipo_compuesto                 shift and go to state 13

state 9

    (1) programa -> PROGRAMA ID SEMICOLON var1 pnGOTOprincipal . func1 principal
    (4) func1 -> . funcion func1
    (5) func1 -> . empty
    (13) funcion -> . FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7
    (122) empty -> .

    FUNCION         shift and go to state 22
    PRINCIPAL       reduce using rule 122 (empty -> .)

    func1                          shift and go to state 19
    funcion                        shift and go to state 20
    empty                          shift and go to state 21

state 10

    (7) var -> VAR var2 .

    FUNCION         reduce using rule 7 (var -> VAR var2 .)
    PRINCIPAL       reduce using rule 7 (var -> VAR var2 .)
    LBRACE          reduce using rule 7 (var -> VAR var2 .)


state 11

    (8) var2 -> type . TWO_DOTS lista_ids pnDF2 var3

    TWO_DOTS        shift and go to state 23


state 12

    (11) type -> tipo_simple .

    TWO_DOTS        reduce using rule 11 (type -> tipo_simple .)


state 13

    (12) type -> tipo_compuesto .

    TWO_DOTS        reduce using rule 12 (type -> tipo_compuesto .)


state 14

    (21) tipo_simple -> INT . pn_1_setCurrentType
    (127) pn_1_setCurrentType -> .

    TWO_DOTS        reduce using rule 127 (pn_1_setCurrentType -> .)
    ID              reduce using rule 127 (pn_1_setCurrentType -> .)

    pn_1_setCurrentType            shift and go to state 24

state 15

    (22) tipo_simple -> FLOAT . pn_1_setCurrentType
    (127) pn_1_setCurrentType -> .

    TWO_DOTS        reduce using rule 127 (pn_1_setCurrentType -> .)
    ID              reduce using rule 127 (pn_1_setCurrentType -> .)

    pn_1_setCurrentType            shift and go to state 25

state 16

    (23) tipo_simple -> CHAR . pn_1_setCurrentType
    (127) pn_1_setCurrentType -> .

    TWO_DOTS        reduce using rule 127 (pn_1_setCurrentType -> .)
    ID              reduce using rule 127 (pn_1_setCurrentType -> .)

    pn_1_setCurrentType            shift and go to state 26

state 17

    (24) tipo_compuesto -> DATAFRAME . pn_1_setCurrentType pnDF
    (127) pn_1_setCurrentType -> .

    TWO_DOTS        reduce using rule 127 (pn_1_setCurrentType -> .)

    pn_1_setCurrentType            shift and go to state 27

state 18

    (25) tipo_compuesto -> STRING . pn_1_setCurrentType
    (127) pn_1_setCurrentType -> .

    TWO_DOTS        reduce using rule 127 (pn_1_setCurrentType -> .)

    pn_1_setCurrentType            shift and go to state 28

state 19

    (1) programa -> PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 . principal
    (6) principal -> . PRINCIPAL pnPrincipal2 LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 30

    principal                      shift and go to state 29

state 20

    (4) func1 -> funcion . func1
    (4) func1 -> . funcion func1
    (5) func1 -> . empty
    (13) funcion -> . FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7
    (122) empty -> .

    FUNCION         shift and go to state 22
    PRINCIPAL       reduce using rule 122 (empty -> .)

    funcion                        shift and go to state 20
    func1                          shift and go to state 31
    empty                          shift and go to state 21

state 21

    (5) func1 -> empty .

    PRINCIPAL       reduce using rule 5 (func1 -> empty .)


state 22

    (13) funcion -> FUNCION . tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7
    (14) tipo_fun -> . VOID pn_1_setCurrentType
    (15) tipo_fun -> . tipo_simple
    (21) tipo_simple -> . INT pn_1_setCurrentType
    (22) tipo_simple -> . FLOAT pn_1_setCurrentType
    (23) tipo_simple -> . CHAR pn_1_setCurrentType

    VOID            shift and go to state 33
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo_fun                       shift and go to state 32
    tipo_simple                    shift and go to state 34

state 23

    (8) var2 -> type TWO_DOTS . lista_ids pnDF2 var3
    (26) lista_ids -> . lista SEMICOLON
    (27) lista -> . ID pn_2_addVariable dd lista1

    ID              shift and go to state 37

    lista_ids                      shift and go to state 35
    lista                          shift and go to state 36

state 24

    (21) tipo_simple -> INT pn_1_setCurrentType .

    TWO_DOTS        reduce using rule 21 (tipo_simple -> INT pn_1_setCurrentType .)
    ID              reduce using rule 21 (tipo_simple -> INT pn_1_setCurrentType .)


state 25

    (22) tipo_simple -> FLOAT pn_1_setCurrentType .

    TWO_DOTS        reduce using rule 22 (tipo_simple -> FLOAT pn_1_setCurrentType .)
    ID              reduce using rule 22 (tipo_simple -> FLOAT pn_1_setCurrentType .)


state 26

    (23) tipo_simple -> CHAR pn_1_setCurrentType .

    TWO_DOTS        reduce using rule 23 (tipo_simple -> CHAR pn_1_setCurrentType .)
    ID              reduce using rule 23 (tipo_simple -> CHAR pn_1_setCurrentType .)


state 27

    (24) tipo_compuesto -> DATAFRAME pn_1_setCurrentType . pnDF
    (125) pnDF -> .

    TWO_DOTS        reduce using rule 125 (pnDF -> .)

    pnDF                           shift and go to state 38

state 28

    (25) tipo_compuesto -> STRING pn_1_setCurrentType .

    TWO_DOTS        reduce using rule 25 (tipo_compuesto -> STRING pn_1_setCurrentType .)


state 29

    (1) programa -> PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal .)


state 30

    (6) principal -> PRINCIPAL . pnPrincipal2 LPAREN RPAREN bloque
    (124) pnPrincipal2 -> .

    LPAREN          reduce using rule 124 (pnPrincipal2 -> .)

    pnPrincipal2                   shift and go to state 39

state 31

    (4) func1 -> funcion func1 .

    PRINCIPAL       reduce using rule 4 (func1 -> funcion func1 .)


state 32

    (13) funcion -> FUNCION tipo_fun . ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7

    ID              shift and go to state 40


state 33

    (14) tipo_fun -> VOID . pn_1_setCurrentType
    (127) pn_1_setCurrentType -> .

    ID              reduce using rule 127 (pn_1_setCurrentType -> .)

    pn_1_setCurrentType            shift and go to state 41

state 34

    (15) tipo_fun -> tipo_simple .

    ID              reduce using rule 15 (tipo_fun -> tipo_simple .)


state 35

    (8) var2 -> type TWO_DOTS lista_ids . pnDF2 var3
    (126) pnDF2 -> .

    INT             reduce using rule 126 (pnDF2 -> .)
    FLOAT           reduce using rule 126 (pnDF2 -> .)
    CHAR            reduce using rule 126 (pnDF2 -> .)
    DATAFRAME       reduce using rule 126 (pnDF2 -> .)
    STRING          reduce using rule 126 (pnDF2 -> .)
    FUNCION         reduce using rule 126 (pnDF2 -> .)
    PRINCIPAL       reduce using rule 126 (pnDF2 -> .)
    LBRACE          reduce using rule 126 (pnDF2 -> .)

    pnDF2                          shift and go to state 42

state 36

    (26) lista_ids -> lista . SEMICOLON

    SEMICOLON       shift and go to state 43


state 37

    (27) lista -> ID . pn_2_addVariable dd lista1
    (128) pn_2_addVariable -> .

    LBRACK          reduce using rule 128 (pn_2_addVariable -> .)
    COMMA           reduce using rule 128 (pn_2_addVariable -> .)
    SEMICOLON       reduce using rule 128 (pn_2_addVariable -> .)

    pn_2_addVariable               shift and go to state 44

state 38

    (24) tipo_compuesto -> DATAFRAME pn_1_setCurrentType pnDF .

    TWO_DOTS        reduce using rule 24 (tipo_compuesto -> DATAFRAME pn_1_setCurrentType pnDF .)


state 39

    (6) principal -> PRINCIPAL pnPrincipal2 . LPAREN RPAREN bloque

    LPAREN          shift and go to state 45


state 40

    (13) funcion -> FUNCION tipo_fun ID . pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7
    (131) pnFunDec1 -> .

    LPAREN          reduce using rule 131 (pnFunDec1 -> .)

    pnFunDec1                      shift and go to state 46

state 41

    (14) tipo_fun -> VOID pn_1_setCurrentType .

    ID              reduce using rule 14 (tipo_fun -> VOID pn_1_setCurrentType .)


state 42

    (8) var2 -> type TWO_DOTS lista_ids pnDF2 . var3
    (9) var3 -> . var2
    (10) var3 -> . empty
    (8) var2 -> . type TWO_DOTS lista_ids pnDF2 var3
    (122) empty -> .
    (11) type -> . tipo_simple
    (12) type -> . tipo_compuesto
    (21) tipo_simple -> . INT pn_1_setCurrentType
    (22) tipo_simple -> . FLOAT pn_1_setCurrentType
    (23) tipo_simple -> . CHAR pn_1_setCurrentType
    (24) tipo_compuesto -> . DATAFRAME pn_1_setCurrentType pnDF
    (25) tipo_compuesto -> . STRING pn_1_setCurrentType

    FUNCION         reduce using rule 122 (empty -> .)
    PRINCIPAL       reduce using rule 122 (empty -> .)
    LBRACE          reduce using rule 122 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    DATAFRAME       shift and go to state 17
    STRING          shift and go to state 18

    type                           shift and go to state 11
    var3                           shift and go to state 47
    var2                           shift and go to state 48
    empty                          shift and go to state 49
    tipo_simple                    shift and go to state 12
    tipo_compuesto                 shift and go to state 13

state 43

    (26) lista_ids -> lista SEMICOLON .

    INT             reduce using rule 26 (lista_ids -> lista SEMICOLON .)
    FLOAT           reduce using rule 26 (lista_ids -> lista SEMICOLON .)
    CHAR            reduce using rule 26 (lista_ids -> lista SEMICOLON .)
    DATAFRAME       reduce using rule 26 (lista_ids -> lista SEMICOLON .)
    STRING          reduce using rule 26 (lista_ids -> lista SEMICOLON .)
    FUNCION         reduce using rule 26 (lista_ids -> lista SEMICOLON .)
    PRINCIPAL       reduce using rule 26 (lista_ids -> lista SEMICOLON .)
    LBRACE          reduce using rule 26 (lista_ids -> lista SEMICOLON .)


state 44

    (27) lista -> ID pn_2_addVariable . dd lista1
    (28) dd -> . dim_dec pnDimDec8
    (29) dd -> . empty
    (32) dim_dec -> . LBRACK pnDimDec2_3 CTE_INT pnDimDec5 RBRACK pn_7_decRenglones dim_dec1
    (122) empty -> .

    LBRACK          shift and go to state 53
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)

    dd                             shift and go to state 50
    dim_dec                        shift and go to state 51
    empty                          shift and go to state 52

state 45

    (6) principal -> PRINCIPAL pnPrincipal2 LPAREN . RPAREN bloque

    RPAREN          shift and go to state 54


state 46

    (13) funcion -> FUNCION tipo_fun ID pnFunDec1 . LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7

    LPAREN          shift and go to state 55


state 47

    (8) var2 -> type TWO_DOTS lista_ids pnDF2 var3 .

    FUNCION         reduce using rule 8 (var2 -> type TWO_DOTS lista_ids pnDF2 var3 .)
    PRINCIPAL       reduce using rule 8 (var2 -> type TWO_DOTS lista_ids pnDF2 var3 .)
    LBRACE          reduce using rule 8 (var2 -> type TWO_DOTS lista_ids pnDF2 var3 .)


state 48

    (9) var3 -> var2 .

    FUNCION         reduce using rule 9 (var3 -> var2 .)
    PRINCIPAL       reduce using rule 9 (var3 -> var2 .)
    LBRACE          reduce using rule 9 (var3 -> var2 .)


state 49

    (10) var3 -> empty .

    FUNCION         reduce using rule 10 (var3 -> empty .)
    PRINCIPAL       reduce using rule 10 (var3 -> empty .)
    LBRACE          reduce using rule 10 (var3 -> empty .)


state 50

    (27) lista -> ID pn_2_addVariable dd . lista1
    (30) lista1 -> . COMMA lista
    (31) lista1 -> . empty
    (122) empty -> .

    COMMA           shift and go to state 57
    SEMICOLON       reduce using rule 122 (empty -> .)

    lista1                         shift and go to state 56
    empty                          shift and go to state 58

state 51

    (28) dd -> dim_dec . pnDimDec8
    (177) pnDimDec8 -> .

    COMMA           reduce using rule 177 (pnDimDec8 -> .)
    SEMICOLON       reduce using rule 177 (pnDimDec8 -> .)

    pnDimDec8                      shift and go to state 59

state 52

    (29) dd -> empty .

    COMMA           reduce using rule 29 (dd -> empty .)
    SEMICOLON       reduce using rule 29 (dd -> empty .)


state 53

    (32) dim_dec -> LBRACK . pnDimDec2_3 CTE_INT pnDimDec5 RBRACK pn_7_decRenglones dim_dec1
    (174) pnDimDec2_3 -> .

    CTE_INT         reduce using rule 174 (pnDimDec2_3 -> .)

    pnDimDec2_3                    shift and go to state 60

state 54

    (6) principal -> PRINCIPAL pnPrincipal2 LPAREN RPAREN . bloque
    (38) bloque -> . LBRACE est RBRACE

    LBRACE          shift and go to state 62

    bloque                         shift and go to state 61

state 55

    (13) funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN . parametros RPAREN pnFunDec4 var1 bloque pnFunDec7
    (16) parametros -> . param
    (17) parametros -> . empty
    (18) param -> . tipo_simple ID pnFunDec_2_3 param1
    (122) empty -> .
    (21) tipo_simple -> . INT pn_1_setCurrentType
    (22) tipo_simple -> . FLOAT pn_1_setCurrentType
    (23) tipo_simple -> . CHAR pn_1_setCurrentType

    RPAREN          reduce using rule 122 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    parametros                     shift and go to state 63
    param                          shift and go to state 64
    empty                          shift and go to state 65
    tipo_simple                    shift and go to state 66

state 56

    (27) lista -> ID pn_2_addVariable dd lista1 .

    SEMICOLON       reduce using rule 27 (lista -> ID pn_2_addVariable dd lista1 .)


state 57

    (30) lista1 -> COMMA . lista
    (27) lista -> . ID pn_2_addVariable dd lista1

    ID              shift and go to state 37

    lista                          shift and go to state 67

state 58

    (31) lista1 -> empty .

    SEMICOLON       reduce using rule 31 (lista1 -> empty .)


state 59

    (28) dd -> dim_dec pnDimDec8 .

    COMMA           reduce using rule 28 (dd -> dim_dec pnDimDec8 .)
    SEMICOLON       reduce using rule 28 (dd -> dim_dec pnDimDec8 .)


state 60

    (32) dim_dec -> LBRACK pnDimDec2_3 . CTE_INT pnDimDec5 RBRACK pn_7_decRenglones dim_dec1

    CTE_INT         shift and go to state 68


state 61

    (6) principal -> PRINCIPAL pnPrincipal2 LPAREN RPAREN bloque .

    $end            reduce using rule 6 (principal -> PRINCIPAL pnPrincipal2 LPAREN RPAREN bloque .)


state 62

    (38) bloque -> LBRACE . est RBRACE
    (39) est -> . estatutos est
    (40) est -> . empty
    (41) estatutos -> . asignacion
    (42) estatutos -> . llamada
    (43) estatutos -> . retorno
    (44) estatutos -> . lectura
    (45) estatutos -> . escritura
    (46) estatutos -> . carga_datos
    (47) estatutos -> . decision
    (48) estatutos -> . condicional
    (49) estatutos -> . no_condicional
    (50) estatutos -> . funciones_especiales_void
    (122) empty -> .
    (51) asignacion -> . variable ASSIGN pnSec1 exp SEMICOLON pnSec2
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (60) retorno -> . REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON
    (61) lectura -> . LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5
    (62) escritura -> . ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5
    (67) carga_datos -> . CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga
    (70) decision -> . SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2
    (73) condicional -> . MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3
    (74) no_condicional -> . DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
    (75) funciones_especiales_void -> . VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON
    (76) funciones_especiales_void -> . HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (77) funciones_especiales_void -> . PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (52) variable -> . ID pnExp1 di

    RBRACE          reduce using rule 122 (empty -> .)
    ID              shift and go to state 83
    REGRESA         shift and go to state 84
    LEE             shift and go to state 85
    ESCRIBE         shift and go to state 86
    CARGA           shift and go to state 87
    SI              shift and go to state 88
    MIENTRAS        shift and go to state 89
    DESDE           shift and go to state 90
    VARIABLES       shift and go to state 91
    HISTOGRAMA      shift and go to state 92
    PLOTLINE        shift and go to state 93

    est                            shift and go to state 69
    estatutos                      shift and go to state 70
    empty                          shift and go to state 71
    asignacion                     shift and go to state 72
    llamada                        shift and go to state 73
    retorno                        shift and go to state 74
    lectura                        shift and go to state 75
    escritura                      shift and go to state 76
    carga_datos                    shift and go to state 77
    decision                       shift and go to state 78
    condicional                    shift and go to state 79
    no_condicional                 shift and go to state 80
    funciones_especiales_void      shift and go to state 81
    variable                       shift and go to state 82

state 63

    (13) funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros . RPAREN pnFunDec4 var1 bloque pnFunDec7

    RPAREN          shift and go to state 94


state 64

    (16) parametros -> param .

    RPAREN          reduce using rule 16 (parametros -> param .)


state 65

    (17) parametros -> empty .

    RPAREN          reduce using rule 17 (parametros -> empty .)


state 66

    (18) param -> tipo_simple . ID pnFunDec_2_3 param1

    ID              shift and go to state 95


state 67

    (30) lista1 -> COMMA lista .

    SEMICOLON       reduce using rule 30 (lista1 -> COMMA lista .)


state 68

    (32) dim_dec -> LBRACK pnDimDec2_3 CTE_INT . pnDimDec5 RBRACK pn_7_decRenglones dim_dec1
    (175) pnDimDec5 -> .

    RBRACK          reduce using rule 175 (pnDimDec5 -> .)

    pnDimDec5                      shift and go to state 96

state 69

    (38) bloque -> LBRACE est . RBRACE

    RBRACE          shift and go to state 97


state 70

    (39) est -> estatutos . est
    (39) est -> . estatutos est
    (40) est -> . empty
    (41) estatutos -> . asignacion
    (42) estatutos -> . llamada
    (43) estatutos -> . retorno
    (44) estatutos -> . lectura
    (45) estatutos -> . escritura
    (46) estatutos -> . carga_datos
    (47) estatutos -> . decision
    (48) estatutos -> . condicional
    (49) estatutos -> . no_condicional
    (50) estatutos -> . funciones_especiales_void
    (122) empty -> .
    (51) asignacion -> . variable ASSIGN pnSec1 exp SEMICOLON pnSec2
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (60) retorno -> . REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON
    (61) lectura -> . LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5
    (62) escritura -> . ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5
    (67) carga_datos -> . CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga
    (70) decision -> . SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2
    (73) condicional -> . MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3
    (74) no_condicional -> . DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
    (75) funciones_especiales_void -> . VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON
    (76) funciones_especiales_void -> . HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (77) funciones_especiales_void -> . PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (52) variable -> . ID pnExp1 di

    RBRACE          reduce using rule 122 (empty -> .)
    ID              shift and go to state 83
    REGRESA         shift and go to state 84
    LEE             shift and go to state 85
    ESCRIBE         shift and go to state 86
    CARGA           shift and go to state 87
    SI              shift and go to state 88
    MIENTRAS        shift and go to state 89
    DESDE           shift and go to state 90
    VARIABLES       shift and go to state 91
    HISTOGRAMA      shift and go to state 92
    PLOTLINE        shift and go to state 93

    estatutos                      shift and go to state 70
    est                            shift and go to state 98
    empty                          shift and go to state 71
    asignacion                     shift and go to state 72
    llamada                        shift and go to state 73
    retorno                        shift and go to state 74
    lectura                        shift and go to state 75
    escritura                      shift and go to state 76
    carga_datos                    shift and go to state 77
    decision                       shift and go to state 78
    condicional                    shift and go to state 79
    no_condicional                 shift and go to state 80
    funciones_especiales_void      shift and go to state 81
    variable                       shift and go to state 82

state 71

    (40) est -> empty .

    RBRACE          reduce using rule 40 (est -> empty .)


state 72

    (41) estatutos -> asignacion .

    ID              reduce using rule 41 (estatutos -> asignacion .)
    REGRESA         reduce using rule 41 (estatutos -> asignacion .)
    LEE             reduce using rule 41 (estatutos -> asignacion .)
    ESCRIBE         reduce using rule 41 (estatutos -> asignacion .)
    CARGA           reduce using rule 41 (estatutos -> asignacion .)
    SI              reduce using rule 41 (estatutos -> asignacion .)
    MIENTRAS        reduce using rule 41 (estatutos -> asignacion .)
    DESDE           reduce using rule 41 (estatutos -> asignacion .)
    VARIABLES       reduce using rule 41 (estatutos -> asignacion .)
    HISTOGRAMA      reduce using rule 41 (estatutos -> asignacion .)
    PLOTLINE        reduce using rule 41 (estatutos -> asignacion .)
    RBRACE          reduce using rule 41 (estatutos -> asignacion .)


state 73

    (42) estatutos -> llamada .

    ID              reduce using rule 42 (estatutos -> llamada .)
    REGRESA         reduce using rule 42 (estatutos -> llamada .)
    LEE             reduce using rule 42 (estatutos -> llamada .)
    ESCRIBE         reduce using rule 42 (estatutos -> llamada .)
    CARGA           reduce using rule 42 (estatutos -> llamada .)
    SI              reduce using rule 42 (estatutos -> llamada .)
    MIENTRAS        reduce using rule 42 (estatutos -> llamada .)
    DESDE           reduce using rule 42 (estatutos -> llamada .)
    VARIABLES       reduce using rule 42 (estatutos -> llamada .)
    HISTOGRAMA      reduce using rule 42 (estatutos -> llamada .)
    PLOTLINE        reduce using rule 42 (estatutos -> llamada .)
    RBRACE          reduce using rule 42 (estatutos -> llamada .)


state 74

    (43) estatutos -> retorno .

    ID              reduce using rule 43 (estatutos -> retorno .)
    REGRESA         reduce using rule 43 (estatutos -> retorno .)
    LEE             reduce using rule 43 (estatutos -> retorno .)
    ESCRIBE         reduce using rule 43 (estatutos -> retorno .)
    CARGA           reduce using rule 43 (estatutos -> retorno .)
    SI              reduce using rule 43 (estatutos -> retorno .)
    MIENTRAS        reduce using rule 43 (estatutos -> retorno .)
    DESDE           reduce using rule 43 (estatutos -> retorno .)
    VARIABLES       reduce using rule 43 (estatutos -> retorno .)
    HISTOGRAMA      reduce using rule 43 (estatutos -> retorno .)
    PLOTLINE        reduce using rule 43 (estatutos -> retorno .)
    RBRACE          reduce using rule 43 (estatutos -> retorno .)


state 75

    (44) estatutos -> lectura .

    ID              reduce using rule 44 (estatutos -> lectura .)
    REGRESA         reduce using rule 44 (estatutos -> lectura .)
    LEE             reduce using rule 44 (estatutos -> lectura .)
    ESCRIBE         reduce using rule 44 (estatutos -> lectura .)
    CARGA           reduce using rule 44 (estatutos -> lectura .)
    SI              reduce using rule 44 (estatutos -> lectura .)
    MIENTRAS        reduce using rule 44 (estatutos -> lectura .)
    DESDE           reduce using rule 44 (estatutos -> lectura .)
    VARIABLES       reduce using rule 44 (estatutos -> lectura .)
    HISTOGRAMA      reduce using rule 44 (estatutos -> lectura .)
    PLOTLINE        reduce using rule 44 (estatutos -> lectura .)
    RBRACE          reduce using rule 44 (estatutos -> lectura .)


state 76

    (45) estatutos -> escritura .

    ID              reduce using rule 45 (estatutos -> escritura .)
    REGRESA         reduce using rule 45 (estatutos -> escritura .)
    LEE             reduce using rule 45 (estatutos -> escritura .)
    ESCRIBE         reduce using rule 45 (estatutos -> escritura .)
    CARGA           reduce using rule 45 (estatutos -> escritura .)
    SI              reduce using rule 45 (estatutos -> escritura .)
    MIENTRAS        reduce using rule 45 (estatutos -> escritura .)
    DESDE           reduce using rule 45 (estatutos -> escritura .)
    VARIABLES       reduce using rule 45 (estatutos -> escritura .)
    HISTOGRAMA      reduce using rule 45 (estatutos -> escritura .)
    PLOTLINE        reduce using rule 45 (estatutos -> escritura .)
    RBRACE          reduce using rule 45 (estatutos -> escritura .)


state 77

    (46) estatutos -> carga_datos .

    ID              reduce using rule 46 (estatutos -> carga_datos .)
    REGRESA         reduce using rule 46 (estatutos -> carga_datos .)
    LEE             reduce using rule 46 (estatutos -> carga_datos .)
    ESCRIBE         reduce using rule 46 (estatutos -> carga_datos .)
    CARGA           reduce using rule 46 (estatutos -> carga_datos .)
    SI              reduce using rule 46 (estatutos -> carga_datos .)
    MIENTRAS        reduce using rule 46 (estatutos -> carga_datos .)
    DESDE           reduce using rule 46 (estatutos -> carga_datos .)
    VARIABLES       reduce using rule 46 (estatutos -> carga_datos .)
    HISTOGRAMA      reduce using rule 46 (estatutos -> carga_datos .)
    PLOTLINE        reduce using rule 46 (estatutos -> carga_datos .)
    RBRACE          reduce using rule 46 (estatutos -> carga_datos .)


state 78

    (47) estatutos -> decision .

    ID              reduce using rule 47 (estatutos -> decision .)
    REGRESA         reduce using rule 47 (estatutos -> decision .)
    LEE             reduce using rule 47 (estatutos -> decision .)
    ESCRIBE         reduce using rule 47 (estatutos -> decision .)
    CARGA           reduce using rule 47 (estatutos -> decision .)
    SI              reduce using rule 47 (estatutos -> decision .)
    MIENTRAS        reduce using rule 47 (estatutos -> decision .)
    DESDE           reduce using rule 47 (estatutos -> decision .)
    VARIABLES       reduce using rule 47 (estatutos -> decision .)
    HISTOGRAMA      reduce using rule 47 (estatutos -> decision .)
    PLOTLINE        reduce using rule 47 (estatutos -> decision .)
    RBRACE          reduce using rule 47 (estatutos -> decision .)


state 79

    (48) estatutos -> condicional .

    ID              reduce using rule 48 (estatutos -> condicional .)
    REGRESA         reduce using rule 48 (estatutos -> condicional .)
    LEE             reduce using rule 48 (estatutos -> condicional .)
    ESCRIBE         reduce using rule 48 (estatutos -> condicional .)
    CARGA           reduce using rule 48 (estatutos -> condicional .)
    SI              reduce using rule 48 (estatutos -> condicional .)
    MIENTRAS        reduce using rule 48 (estatutos -> condicional .)
    DESDE           reduce using rule 48 (estatutos -> condicional .)
    VARIABLES       reduce using rule 48 (estatutos -> condicional .)
    HISTOGRAMA      reduce using rule 48 (estatutos -> condicional .)
    PLOTLINE        reduce using rule 48 (estatutos -> condicional .)
    RBRACE          reduce using rule 48 (estatutos -> condicional .)


state 80

    (49) estatutos -> no_condicional .

    ID              reduce using rule 49 (estatutos -> no_condicional .)
    REGRESA         reduce using rule 49 (estatutos -> no_condicional .)
    LEE             reduce using rule 49 (estatutos -> no_condicional .)
    ESCRIBE         reduce using rule 49 (estatutos -> no_condicional .)
    CARGA           reduce using rule 49 (estatutos -> no_condicional .)
    SI              reduce using rule 49 (estatutos -> no_condicional .)
    MIENTRAS        reduce using rule 49 (estatutos -> no_condicional .)
    DESDE           reduce using rule 49 (estatutos -> no_condicional .)
    VARIABLES       reduce using rule 49 (estatutos -> no_condicional .)
    HISTOGRAMA      reduce using rule 49 (estatutos -> no_condicional .)
    PLOTLINE        reduce using rule 49 (estatutos -> no_condicional .)
    RBRACE          reduce using rule 49 (estatutos -> no_condicional .)


state 81

    (50) estatutos -> funciones_especiales_void .

    ID              reduce using rule 50 (estatutos -> funciones_especiales_void .)
    REGRESA         reduce using rule 50 (estatutos -> funciones_especiales_void .)
    LEE             reduce using rule 50 (estatutos -> funciones_especiales_void .)
    ESCRIBE         reduce using rule 50 (estatutos -> funciones_especiales_void .)
    CARGA           reduce using rule 50 (estatutos -> funciones_especiales_void .)
    SI              reduce using rule 50 (estatutos -> funciones_especiales_void .)
    MIENTRAS        reduce using rule 50 (estatutos -> funciones_especiales_void .)
    DESDE           reduce using rule 50 (estatutos -> funciones_especiales_void .)
    VARIABLES       reduce using rule 50 (estatutos -> funciones_especiales_void .)
    HISTOGRAMA      reduce using rule 50 (estatutos -> funciones_especiales_void .)
    PLOTLINE        reduce using rule 50 (estatutos -> funciones_especiales_void .)
    RBRACE          reduce using rule 50 (estatutos -> funciones_especiales_void .)


state 82

    (51) asignacion -> variable . ASSIGN pnSec1 exp SEMICOLON pnSec2

    ASSIGN          shift and go to state 99


state 83

    (55) llamada -> ID . pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (52) variable -> ID . pnExp1 di
    (135) pnFunCall_1_2 -> .
    (146) pnExp1 -> .

    LPAREN          reduce using rule 135 (pnFunCall_1_2 -> .)
    LBRACK          reduce using rule 146 (pnExp1 -> .)
    ASSIGN          reduce using rule 146 (pnExp1 -> .)

    pnFunCall_1_2                  shift and go to state 100
    pnExp1                         shift and go to state 101

state 84

    (60) retorno -> REGRESA . pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON
    (159) pnSec3 -> .

    LPAREN          reduce using rule 159 (pnSec3 -> .)

    pnSec3                         shift and go to state 102

state 85

    (61) lectura -> LEE . pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5
    (159) pnSec3 -> .

    LPAREN          reduce using rule 159 (pnSec3 -> .)

    pnSec3                         shift and go to state 103

state 86

    (62) escritura -> ESCRIBE . pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5
    (159) pnSec3 -> .

    LPAREN          reduce using rule 159 (pnSec3 -> .)

    pnSec3                         shift and go to state 104

state 87

    (67) carga_datos -> CARGA . LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga

    LPAREN          shift and go to state 105


state 88

    (70) decision -> SI . LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2

    LPAREN          shift and go to state 106


state 89

    (73) condicional -> MIENTRAS . pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3
    (165) pnCiclos1 -> .

    LPAREN          reduce using rule 165 (pnCiclos1 -> .)

    pnCiclos1                      shift and go to state 107

state 90

    (74) no_condicional -> DESDE . pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
    (168) pnCiclos4 -> .

    ID              reduce using rule 168 (pnCiclos4 -> .)

    pnCiclos4                      shift and go to state 108

state 91

    (75) funciones_especiales_void -> VARIABLES . pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON
    (138) pnFunEsp1 -> .

    LPAREN          reduce using rule 138 (pnFunEsp1 -> .)

    pnFunEsp1                      shift and go to state 109

state 92

    (76) funciones_especiales_void -> HISTOGRAMA . pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (138) pnFunEsp1 -> .

    LPAREN          reduce using rule 138 (pnFunEsp1 -> .)

    pnFunEsp1                      shift and go to state 110

state 93

    (77) funciones_especiales_void -> PLOTLINE . pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (138) pnFunEsp1 -> .

    LPAREN          reduce using rule 138 (pnFunEsp1 -> .)

    pnFunEsp1                      shift and go to state 111

state 94

    (13) funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN . pnFunDec4 var1 bloque pnFunDec7
    (133) pnFunDec4 -> .

    VAR             reduce using rule 133 (pnFunDec4 -> .)
    LBRACE          reduce using rule 133 (pnFunDec4 -> .)

    pnFunDec4                      shift and go to state 112

state 95

    (18) param -> tipo_simple ID . pnFunDec_2_3 param1
    (132) pnFunDec_2_3 -> .

    COMMA           reduce using rule 132 (pnFunDec_2_3 -> .)
    RPAREN          reduce using rule 132 (pnFunDec_2_3 -> .)

    pnFunDec_2_3                   shift and go to state 113

state 96

    (32) dim_dec -> LBRACK pnDimDec2_3 CTE_INT pnDimDec5 . RBRACK pn_7_decRenglones dim_dec1

    RBRACK          shift and go to state 114


state 97

    (38) bloque -> LBRACE est RBRACE .

    $end            reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    FUNCION         reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    PRINCIPAL       reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    SINO            reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    ID              reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    REGRESA         reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    LEE             reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    ESCRIBE         reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    CARGA           reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    SI              reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    MIENTRAS        reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    DESDE           reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    VARIABLES       reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    HISTOGRAMA      reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    PLOTLINE        reduce using rule 38 (bloque -> LBRACE est RBRACE .)
    RBRACE          reduce using rule 38 (bloque -> LBRACE est RBRACE .)


state 98

    (39) est -> estatutos est .

    RBRACE          reduce using rule 39 (est -> estatutos est .)


state 99

    (51) asignacion -> variable ASSIGN . pnSec1 exp SEMICOLON pnSec2
    (157) pnSec1 -> .

    LPAREN          reduce using rule 157 (pnSec1 -> .)
    CTE_CH          reduce using rule 157 (pnSec1 -> .)
    CTE_STR         reduce using rule 157 (pnSec1 -> .)
    SUB             reduce using rule 157 (pnSec1 -> .)
    ID              reduce using rule 157 (pnSec1 -> .)
    CTE_INT         reduce using rule 157 (pnSec1 -> .)
    CTE_FLOAT       reduce using rule 157 (pnSec1 -> .)
    MEDIA           reduce using rule 157 (pnSec1 -> .)
    MEDIANA         reduce using rule 157 (pnSec1 -> .)
    MODA            reduce using rule 157 (pnSec1 -> .)
    VARIANZA        reduce using rule 157 (pnSec1 -> .)
    CORRELACIONA    reduce using rule 157 (pnSec1 -> .)

    pnSec1                         shift and go to state 115

state 100

    (55) llamada -> ID pnFunCall_1_2 . LPAREN llamada1 RPAREN pnFunCall_5_6_llamada

    LPAREN          shift and go to state 116


state 101

    (52) variable -> ID pnExp1 . di
    (53) di -> . dim_index
    (54) di -> . empty
    (35) dim_index -> . LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1
    (122) empty -> .

    LBRACK          shift and go to state 120
    ASSIGN          reduce using rule 122 (empty -> .)
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    ADD             reduce using rule 122 (empty -> .)
    SUB             reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LE              reduce using rule 122 (empty -> .)
    GE              reduce using rule 122 (empty -> .)
    NOT_EQUAL       reduce using rule 122 (empty -> .)
    EQUAL           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    RBRACK          reduce using rule 122 (empty -> .)
    HASTA           reduce using rule 122 (empty -> .)
    HACER           reduce using rule 122 (empty -> .)

    di                             shift and go to state 117
    dim_index                      shift and go to state 118
    empty                          shift and go to state 119

state 102

    (60) retorno -> REGRESA pnSec3 . LPAREN exp RPAREN pnRetorno SEMICOLON

    LPAREN          shift and go to state 121


state 103

    (61) lectura -> LEE pnSec3 . LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5

    LPAREN          shift and go to state 122


state 104

    (62) escritura -> ESCRIBE pnSec3 . LPAREN esc RPAREN SEMICOLON pnSec5

    LPAREN          shift and go to state 123


state 105

    (67) carga_datos -> CARGA LPAREN . ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga

    ID              shift and go to state 124


state 106

    (70) decision -> SI LPAREN . expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2
    (90) expresion -> . mega_exp expresion1
    (93) mega_exp -> . super_exp meg
    (98) super_exp -> . exp sp
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    expresion                      shift and go to state 126
    mega_exp                       shift and go to state 127
    super_exp                      shift and go to state 128
    exp                            shift and go to state 129
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 107

    (73) condicional -> MIENTRAS pnCiclos1 . LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3

    LPAREN          shift and go to state 149


state 108

    (74) no_condicional -> DESDE pnCiclos4 . variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
    (52) variable -> . ID pnExp1 di

    ID              shift and go to state 151

    variable                       shift and go to state 150

state 109

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 . LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON

    LPAREN          shift and go to state 152


state 110

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 . LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    LPAREN          shift and go to state 153


state 111

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 . LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    LPAREN          shift and go to state 154


state 112

    (13) funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 . var1 bloque pnFunDec7
    (2) var1 -> . var
    (3) var1 -> . empty
    (7) var -> . VAR var2
    (122) empty -> .

    VAR             shift and go to state 8
    LBRACE          reduce using rule 122 (empty -> .)

    var1                           shift and go to state 155
    var                            shift and go to state 6
    empty                          shift and go to state 7

state 113

    (18) param -> tipo_simple ID pnFunDec_2_3 . param1
    (19) param1 -> . COMMA param
    (20) param1 -> . empty
    (122) empty -> .

    COMMA           shift and go to state 157
    RPAREN          reduce using rule 122 (empty -> .)

    param1                         shift and go to state 156
    empty                          shift and go to state 158

state 114

    (32) dim_dec -> LBRACK pnDimDec2_3 CTE_INT pnDimDec5 RBRACK . pn_7_decRenglones dim_dec1
    (129) pn_7_decRenglones -> .

    LBRACK          reduce using rule 129 (pn_7_decRenglones -> .)
    COMMA           reduce using rule 129 (pn_7_decRenglones -> .)
    SEMICOLON       reduce using rule 129 (pn_7_decRenglones -> .)

    pn_7_decRenglones              shift and go to state 159

state 115

    (51) asignacion -> variable ASSIGN pnSec1 . exp SEMICOLON pnSec2
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    variable                       shift and go to state 133
    exp                            shift and go to state 160
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 116

    (55) llamada -> ID pnFunCall_1_2 LPAREN . llamada1 RPAREN pnFunCall_5_6_llamada
    (56) llamada1 -> . exp pnFunCall_3 llamada2
    (57) llamada1 -> . empty
    (107) exp -> . termino pnExp4 exp1
    (122) empty -> .
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    RPAREN          reduce using rule 122 (empty -> .)
    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    llamada1                       shift and go to state 161
    exp                            shift and go to state 162
    empty                          shift and go to state 163
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 117

    (52) variable -> ID pnExp1 di .

    ASSIGN          reduce using rule 52 (variable -> ID pnExp1 di .)
    MUL             reduce using rule 52 (variable -> ID pnExp1 di .)
    DIV             reduce using rule 52 (variable -> ID pnExp1 di .)
    ADD             reduce using rule 52 (variable -> ID pnExp1 di .)
    SUB             reduce using rule 52 (variable -> ID pnExp1 di .)
    LT              reduce using rule 52 (variable -> ID pnExp1 di .)
    GT              reduce using rule 52 (variable -> ID pnExp1 di .)
    LE              reduce using rule 52 (variable -> ID pnExp1 di .)
    GE              reduce using rule 52 (variable -> ID pnExp1 di .)
    NOT_EQUAL       reduce using rule 52 (variable -> ID pnExp1 di .)
    EQUAL           reduce using rule 52 (variable -> ID pnExp1 di .)
    AND             reduce using rule 52 (variable -> ID pnExp1 di .)
    OR              reduce using rule 52 (variable -> ID pnExp1 di .)
    RPAREN          reduce using rule 52 (variable -> ID pnExp1 di .)
    SEMICOLON       reduce using rule 52 (variable -> ID pnExp1 di .)
    COMMA           reduce using rule 52 (variable -> ID pnExp1 di .)
    RBRACK          reduce using rule 52 (variable -> ID pnExp1 di .)
    HASTA           reduce using rule 52 (variable -> ID pnExp1 di .)
    HACER           reduce using rule 52 (variable -> ID pnExp1 di .)


state 118

    (53) di -> dim_index .

    ASSIGN          reduce using rule 53 (di -> dim_index .)
    MUL             reduce using rule 53 (di -> dim_index .)
    DIV             reduce using rule 53 (di -> dim_index .)
    ADD             reduce using rule 53 (di -> dim_index .)
    SUB             reduce using rule 53 (di -> dim_index .)
    LT              reduce using rule 53 (di -> dim_index .)
    GT              reduce using rule 53 (di -> dim_index .)
    LE              reduce using rule 53 (di -> dim_index .)
    GE              reduce using rule 53 (di -> dim_index .)
    NOT_EQUAL       reduce using rule 53 (di -> dim_index .)
    EQUAL           reduce using rule 53 (di -> dim_index .)
    AND             reduce using rule 53 (di -> dim_index .)
    OR              reduce using rule 53 (di -> dim_index .)
    RPAREN          reduce using rule 53 (di -> dim_index .)
    SEMICOLON       reduce using rule 53 (di -> dim_index .)
    COMMA           reduce using rule 53 (di -> dim_index .)
    RBRACK          reduce using rule 53 (di -> dim_index .)
    HASTA           reduce using rule 53 (di -> dim_index .)
    HACER           reduce using rule 53 (di -> dim_index .)


state 119

    (54) di -> empty .

    ASSIGN          reduce using rule 54 (di -> empty .)
    MUL             reduce using rule 54 (di -> empty .)
    DIV             reduce using rule 54 (di -> empty .)
    ADD             reduce using rule 54 (di -> empty .)
    SUB             reduce using rule 54 (di -> empty .)
    LT              reduce using rule 54 (di -> empty .)
    GT              reduce using rule 54 (di -> empty .)
    LE              reduce using rule 54 (di -> empty .)
    GE              reduce using rule 54 (di -> empty .)
    NOT_EQUAL       reduce using rule 54 (di -> empty .)
    EQUAL           reduce using rule 54 (di -> empty .)
    AND             reduce using rule 54 (di -> empty .)
    OR              reduce using rule 54 (di -> empty .)
    RPAREN          reduce using rule 54 (di -> empty .)
    SEMICOLON       reduce using rule 54 (di -> empty .)
    COMMA           reduce using rule 54 (di -> empty .)
    RBRACK          reduce using rule 54 (di -> empty .)
    HASTA           reduce using rule 54 (di -> empty .)
    HACER           reduce using rule 54 (di -> empty .)


state 120

    (35) dim_index -> LBRACK . pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1
    (178) pnDimAccess2 -> .

    LPAREN          reduce using rule 178 (pnDimAccess2 -> .)
    CTE_CH          reduce using rule 178 (pnDimAccess2 -> .)
    CTE_STR         reduce using rule 178 (pnDimAccess2 -> .)
    SUB             reduce using rule 178 (pnDimAccess2 -> .)
    ID              reduce using rule 178 (pnDimAccess2 -> .)
    CTE_INT         reduce using rule 178 (pnDimAccess2 -> .)
    CTE_FLOAT       reduce using rule 178 (pnDimAccess2 -> .)
    MEDIA           reduce using rule 178 (pnDimAccess2 -> .)
    MEDIANA         reduce using rule 178 (pnDimAccess2 -> .)
    MODA            reduce using rule 178 (pnDimAccess2 -> .)
    VARIANZA        reduce using rule 178 (pnDimAccess2 -> .)
    CORRELACIONA    reduce using rule 178 (pnDimAccess2 -> .)

    pnDimAccess2                   shift and go to state 164

state 121

    (60) retorno -> REGRESA pnSec3 LPAREN . exp RPAREN pnRetorno SEMICOLON
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    exp                            shift and go to state 165
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 122

    (61) lectura -> LEE pnSec3 LPAREN . variable RPAREN SEMICOLON pnSec4 pnSec5
    (52) variable -> . ID pnExp1 di

    ID              shift and go to state 151

    variable                       shift and go to state 166

state 123

    (62) escritura -> ESCRIBE pnSec3 LPAREN . esc RPAREN SEMICOLON pnSec5
    (63) esc -> . esc1 esc2
    (64) esc1 -> . exp pnSec4
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    esc                            shift and go to state 167
    esc1                           shift and go to state 168
    exp                            shift and go to state 169
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 124

    (67) carga_datos -> CARGA LPAREN ID . pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga
    (146) pnExp1 -> .

    COMMA           reduce using rule 146 (pnExp1 -> .)

    pnExp1                         shift and go to state 170

state 125

    (118) factor -> LPAREN . pnExp6 exp RPAREN pnExp7
    (151) pnExp6 -> .

    LPAREN          reduce using rule 151 (pnExp6 -> .)
    CTE_CH          reduce using rule 151 (pnExp6 -> .)
    CTE_STR         reduce using rule 151 (pnExp6 -> .)
    SUB             reduce using rule 151 (pnExp6 -> .)
    ID              reduce using rule 151 (pnExp6 -> .)
    CTE_INT         reduce using rule 151 (pnExp6 -> .)
    CTE_FLOAT       reduce using rule 151 (pnExp6 -> .)
    MEDIA           reduce using rule 151 (pnExp6 -> .)
    MEDIANA         reduce using rule 151 (pnExp6 -> .)
    MODA            reduce using rule 151 (pnExp6 -> .)
    VARIANZA        reduce using rule 151 (pnExp6 -> .)
    CORRELACIONA    reduce using rule 151 (pnExp6 -> .)

    pnExp6                         shift and go to state 171

state 126

    (70) decision -> SI LPAREN expresion . RPAREN pnCond1 ENTONCES bloque sino pnCond2

    RPAREN          shift and go to state 172


state 127

    (90) expresion -> mega_exp . expresion1
    (91) expresion1 -> . ASSIGN expresion
    (92) expresion1 -> . empty
    (122) empty -> .

    ASSIGN          shift and go to state 174
    RPAREN          reduce using rule 122 (empty -> .)

    expresion1                     shift and go to state 173
    empty                          shift and go to state 175

state 128

    (93) mega_exp -> super_exp . meg
    (94) meg -> . op_l pnExp10 mega_exp pnExp11
    (95) meg -> . empty
    (96) op_l -> . AND
    (97) op_l -> . OR
    (122) empty -> .

    AND             shift and go to state 179
    OR              shift and go to state 180
    ASSIGN          reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    meg                            shift and go to state 176
    op_l                           shift and go to state 177
    empty                          shift and go to state 178

state 129

    (98) super_exp -> exp . sp
    (99) sp -> . op_r exp pnExp9
    (100) sp -> . empty
    (101) op_r -> . LT pnExp8
    (102) op_r -> . GT pnExp8
    (103) op_r -> . LE pnExp8
    (104) op_r -> . GE pnExp8
    (105) op_r -> . NOT_EQUAL pnExp8
    (106) op_r -> . EQUAL pnExp8
    (122) empty -> .

    LT              shift and go to state 184
    GT              shift and go to state 185
    LE              shift and go to state 186
    GE              shift and go to state 187
    NOT_EQUAL       shift and go to state 188
    EQUAL           shift and go to state 189
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    ASSIGN          reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    sp                             shift and go to state 181
    op_r                           shift and go to state 182
    empty                          shift and go to state 183

state 130

    (107) exp -> termino . pnExp4 exp1
    (149) pnExp4 -> .

    ADD             reduce using rule 149 (pnExp4 -> .)
    SUB             reduce using rule 149 (pnExp4 -> .)
    LT              reduce using rule 149 (pnExp4 -> .)
    GT              reduce using rule 149 (pnExp4 -> .)
    LE              reduce using rule 149 (pnExp4 -> .)
    GE              reduce using rule 149 (pnExp4 -> .)
    NOT_EQUAL       reduce using rule 149 (pnExp4 -> .)
    EQUAL           reduce using rule 149 (pnExp4 -> .)
    AND             reduce using rule 149 (pnExp4 -> .)
    OR              reduce using rule 149 (pnExp4 -> .)
    ASSIGN          reduce using rule 149 (pnExp4 -> .)
    RPAREN          reduce using rule 149 (pnExp4 -> .)
    SEMICOLON       reduce using rule 149 (pnExp4 -> .)
    COMMA           reduce using rule 149 (pnExp4 -> .)
    RBRACK          reduce using rule 149 (pnExp4 -> .)
    HASTA           reduce using rule 149 (pnExp4 -> .)
    HACER           reduce using rule 149 (pnExp4 -> .)

    pnExp4                         shift and go to state 190

state 131

    (112) termino -> factor . pnExp5 term
    (150) pnExp5 -> .

    MUL             reduce using rule 150 (pnExp5 -> .)
    DIV             reduce using rule 150 (pnExp5 -> .)
    ADD             reduce using rule 150 (pnExp5 -> .)
    SUB             reduce using rule 150 (pnExp5 -> .)
    LT              reduce using rule 150 (pnExp5 -> .)
    GT              reduce using rule 150 (pnExp5 -> .)
    LE              reduce using rule 150 (pnExp5 -> .)
    GE              reduce using rule 150 (pnExp5 -> .)
    NOT_EQUAL       reduce using rule 150 (pnExp5 -> .)
    EQUAL           reduce using rule 150 (pnExp5 -> .)
    AND             reduce using rule 150 (pnExp5 -> .)
    OR              reduce using rule 150 (pnExp5 -> .)
    ASSIGN          reduce using rule 150 (pnExp5 -> .)
    RPAREN          reduce using rule 150 (pnExp5 -> .)
    SEMICOLON       reduce using rule 150 (pnExp5 -> .)
    COMMA           reduce using rule 150 (pnExp5 -> .)
    RBRACK          reduce using rule 150 (pnExp5 -> .)
    HASTA           reduce using rule 150 (pnExp5 -> .)
    HACER           reduce using rule 150 (pnExp5 -> .)

    pnExp5                         shift and go to state 191

state 132

    (117) factor -> var_cte .

    MUL             reduce using rule 117 (factor -> var_cte .)
    DIV             reduce using rule 117 (factor -> var_cte .)
    ADD             reduce using rule 117 (factor -> var_cte .)
    SUB             reduce using rule 117 (factor -> var_cte .)
    LT              reduce using rule 117 (factor -> var_cte .)
    GT              reduce using rule 117 (factor -> var_cte .)
    LE              reduce using rule 117 (factor -> var_cte .)
    GE              reduce using rule 117 (factor -> var_cte .)
    NOT_EQUAL       reduce using rule 117 (factor -> var_cte .)
    EQUAL           reduce using rule 117 (factor -> var_cte .)
    AND             reduce using rule 117 (factor -> var_cte .)
    OR              reduce using rule 117 (factor -> var_cte .)
    ASSIGN          reduce using rule 117 (factor -> var_cte .)
    RPAREN          reduce using rule 117 (factor -> var_cte .)
    SEMICOLON       reduce using rule 117 (factor -> var_cte .)
    COMMA           reduce using rule 117 (factor -> var_cte .)
    RBRACK          reduce using rule 117 (factor -> var_cte .)
    HASTA           reduce using rule 117 (factor -> var_cte .)
    HACER           reduce using rule 117 (factor -> var_cte .)


state 133

    (119) factor -> variable .

    MUL             reduce using rule 119 (factor -> variable .)
    DIV             reduce using rule 119 (factor -> variable .)
    ADD             reduce using rule 119 (factor -> variable .)
    SUB             reduce using rule 119 (factor -> variable .)
    LT              reduce using rule 119 (factor -> variable .)
    GT              reduce using rule 119 (factor -> variable .)
    LE              reduce using rule 119 (factor -> variable .)
    GE              reduce using rule 119 (factor -> variable .)
    NOT_EQUAL       reduce using rule 119 (factor -> variable .)
    EQUAL           reduce using rule 119 (factor -> variable .)
    AND             reduce using rule 119 (factor -> variable .)
    OR              reduce using rule 119 (factor -> variable .)
    ASSIGN          reduce using rule 119 (factor -> variable .)
    RPAREN          reduce using rule 119 (factor -> variable .)
    SEMICOLON       reduce using rule 119 (factor -> variable .)
    COMMA           reduce using rule 119 (factor -> variable .)
    RBRACK          reduce using rule 119 (factor -> variable .)
    HASTA           reduce using rule 119 (factor -> variable .)
    HACER           reduce using rule 119 (factor -> variable .)


state 134

    (120) factor -> llamada .

    MUL             reduce using rule 120 (factor -> llamada .)
    DIV             reduce using rule 120 (factor -> llamada .)
    ADD             reduce using rule 120 (factor -> llamada .)
    SUB             reduce using rule 120 (factor -> llamada .)
    LT              reduce using rule 120 (factor -> llamada .)
    GT              reduce using rule 120 (factor -> llamada .)
    LE              reduce using rule 120 (factor -> llamada .)
    GE              reduce using rule 120 (factor -> llamada .)
    NOT_EQUAL       reduce using rule 120 (factor -> llamada .)
    EQUAL           reduce using rule 120 (factor -> llamada .)
    AND             reduce using rule 120 (factor -> llamada .)
    OR              reduce using rule 120 (factor -> llamada .)
    ASSIGN          reduce using rule 120 (factor -> llamada .)
    RPAREN          reduce using rule 120 (factor -> llamada .)
    SEMICOLON       reduce using rule 120 (factor -> llamada .)
    COMMA           reduce using rule 120 (factor -> llamada .)
    RBRACK          reduce using rule 120 (factor -> llamada .)
    HASTA           reduce using rule 120 (factor -> llamada .)
    HACER           reduce using rule 120 (factor -> llamada .)


state 135

    (121) factor -> funciones_especiales .

    MUL             reduce using rule 121 (factor -> funciones_especiales .)
    DIV             reduce using rule 121 (factor -> funciones_especiales .)
    ADD             reduce using rule 121 (factor -> funciones_especiales .)
    SUB             reduce using rule 121 (factor -> funciones_especiales .)
    LT              reduce using rule 121 (factor -> funciones_especiales .)
    GT              reduce using rule 121 (factor -> funciones_especiales .)
    LE              reduce using rule 121 (factor -> funciones_especiales .)
    GE              reduce using rule 121 (factor -> funciones_especiales .)
    NOT_EQUAL       reduce using rule 121 (factor -> funciones_especiales .)
    EQUAL           reduce using rule 121 (factor -> funciones_especiales .)
    AND             reduce using rule 121 (factor -> funciones_especiales .)
    OR              reduce using rule 121 (factor -> funciones_especiales .)
    ASSIGN          reduce using rule 121 (factor -> funciones_especiales .)
    RPAREN          reduce using rule 121 (factor -> funciones_especiales .)
    SEMICOLON       reduce using rule 121 (factor -> funciones_especiales .)
    COMMA           reduce using rule 121 (factor -> funciones_especiales .)
    RBRACK          reduce using rule 121 (factor -> funciones_especiales .)
    HASTA           reduce using rule 121 (factor -> funciones_especiales .)
    HACER           reduce using rule 121 (factor -> funciones_especiales .)


state 136

    (84) var_cte -> CTE_CH . pnCteChar
    (144) pnCteChar -> .

    MUL             reduce using rule 144 (pnCteChar -> .)
    DIV             reduce using rule 144 (pnCteChar -> .)
    ADD             reduce using rule 144 (pnCteChar -> .)
    SUB             reduce using rule 144 (pnCteChar -> .)
    LT              reduce using rule 144 (pnCteChar -> .)
    GT              reduce using rule 144 (pnCteChar -> .)
    LE              reduce using rule 144 (pnCteChar -> .)
    GE              reduce using rule 144 (pnCteChar -> .)
    NOT_EQUAL       reduce using rule 144 (pnCteChar -> .)
    EQUAL           reduce using rule 144 (pnCteChar -> .)
    AND             reduce using rule 144 (pnCteChar -> .)
    OR              reduce using rule 144 (pnCteChar -> .)
    ASSIGN          reduce using rule 144 (pnCteChar -> .)
    RPAREN          reduce using rule 144 (pnCteChar -> .)
    SEMICOLON       reduce using rule 144 (pnCteChar -> .)
    COMMA           reduce using rule 144 (pnCteChar -> .)
    RBRACK          reduce using rule 144 (pnCteChar -> .)
    HASTA           reduce using rule 144 (pnCteChar -> .)
    HACER           reduce using rule 144 (pnCteChar -> .)

    pnCteChar                      shift and go to state 192

state 137

    (85) var_cte -> CTE_STR . pnCteStr
    (145) pnCteStr -> .

    MUL             reduce using rule 145 (pnCteStr -> .)
    DIV             reduce using rule 145 (pnCteStr -> .)
    ADD             reduce using rule 145 (pnCteStr -> .)
    SUB             reduce using rule 145 (pnCteStr -> .)
    LT              reduce using rule 145 (pnCteStr -> .)
    GT              reduce using rule 145 (pnCteStr -> .)
    LE              reduce using rule 145 (pnCteStr -> .)
    GE              reduce using rule 145 (pnCteStr -> .)
    NOT_EQUAL       reduce using rule 145 (pnCteStr -> .)
    EQUAL           reduce using rule 145 (pnCteStr -> .)
    AND             reduce using rule 145 (pnCteStr -> .)
    OR              reduce using rule 145 (pnCteStr -> .)
    ASSIGN          reduce using rule 145 (pnCteStr -> .)
    RPAREN          reduce using rule 145 (pnCteStr -> .)
    SEMICOLON       reduce using rule 145 (pnCteStr -> .)
    COMMA           reduce using rule 145 (pnCteStr -> .)
    RBRACK          reduce using rule 145 (pnCteStr -> .)
    HASTA           reduce using rule 145 (pnCteStr -> .)
    HACER           reduce using rule 145 (pnCteStr -> .)

    pnCteStr                       shift and go to state 193

state 138

    (86) var_cte -> SUB . pnNeg var_num
    (141) pnNeg -> .

    CTE_INT         reduce using rule 141 (pnNeg -> .)
    CTE_FLOAT       reduce using rule 141 (pnNeg -> .)

    pnNeg                          shift and go to state 194

state 139

    (87) var_cte -> var_num .

    MUL             reduce using rule 87 (var_cte -> var_num .)
    DIV             reduce using rule 87 (var_cte -> var_num .)
    ADD             reduce using rule 87 (var_cte -> var_num .)
    SUB             reduce using rule 87 (var_cte -> var_num .)
    LT              reduce using rule 87 (var_cte -> var_num .)
    GT              reduce using rule 87 (var_cte -> var_num .)
    LE              reduce using rule 87 (var_cte -> var_num .)
    GE              reduce using rule 87 (var_cte -> var_num .)
    NOT_EQUAL       reduce using rule 87 (var_cte -> var_num .)
    EQUAL           reduce using rule 87 (var_cte -> var_num .)
    AND             reduce using rule 87 (var_cte -> var_num .)
    OR              reduce using rule 87 (var_cte -> var_num .)
    ASSIGN          reduce using rule 87 (var_cte -> var_num .)
    RPAREN          reduce using rule 87 (var_cte -> var_num .)
    SEMICOLON       reduce using rule 87 (var_cte -> var_num .)
    COMMA           reduce using rule 87 (var_cte -> var_num .)
    RBRACK          reduce using rule 87 (var_cte -> var_num .)
    HASTA           reduce using rule 87 (var_cte -> var_num .)
    HACER           reduce using rule 87 (var_cte -> var_num .)


state 140

    (52) variable -> ID . pnExp1 di
    (55) llamada -> ID . pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (146) pnExp1 -> .
    (135) pnFunCall_1_2 -> .

    LBRACK          reduce using rule 146 (pnExp1 -> .)
    MUL             reduce using rule 146 (pnExp1 -> .)
    DIV             reduce using rule 146 (pnExp1 -> .)
    ADD             reduce using rule 146 (pnExp1 -> .)
    SUB             reduce using rule 146 (pnExp1 -> .)
    LT              reduce using rule 146 (pnExp1 -> .)
    GT              reduce using rule 146 (pnExp1 -> .)
    LE              reduce using rule 146 (pnExp1 -> .)
    GE              reduce using rule 146 (pnExp1 -> .)
    NOT_EQUAL       reduce using rule 146 (pnExp1 -> .)
    EQUAL           reduce using rule 146 (pnExp1 -> .)
    AND             reduce using rule 146 (pnExp1 -> .)
    OR              reduce using rule 146 (pnExp1 -> .)
    ASSIGN          reduce using rule 146 (pnExp1 -> .)
    RPAREN          reduce using rule 146 (pnExp1 -> .)
    SEMICOLON       reduce using rule 146 (pnExp1 -> .)
    COMMA           reduce using rule 146 (pnExp1 -> .)
    RBRACK          reduce using rule 146 (pnExp1 -> .)
    HASTA           reduce using rule 146 (pnExp1 -> .)
    HACER           reduce using rule 146 (pnExp1 -> .)
    LPAREN          reduce using rule 135 (pnFunCall_1_2 -> .)

    pnExp1                         shift and go to state 101
    pnFunCall_1_2                  shift and go to state 100

state 141

    (78) funciones_especiales -> fe . LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2

    LPAREN          shift and go to state 195


state 142

    (88) var_num -> CTE_INT . pnCteInt
    (142) pnCteInt -> .

    MUL             reduce using rule 142 (pnCteInt -> .)
    DIV             reduce using rule 142 (pnCteInt -> .)
    ADD             reduce using rule 142 (pnCteInt -> .)
    SUB             reduce using rule 142 (pnCteInt -> .)
    LT              reduce using rule 142 (pnCteInt -> .)
    GT              reduce using rule 142 (pnCteInt -> .)
    LE              reduce using rule 142 (pnCteInt -> .)
    GE              reduce using rule 142 (pnCteInt -> .)
    NOT_EQUAL       reduce using rule 142 (pnCteInt -> .)
    EQUAL           reduce using rule 142 (pnCteInt -> .)
    AND             reduce using rule 142 (pnCteInt -> .)
    OR              reduce using rule 142 (pnCteInt -> .)
    ASSIGN          reduce using rule 142 (pnCteInt -> .)
    RPAREN          reduce using rule 142 (pnCteInt -> .)
    SEMICOLON       reduce using rule 142 (pnCteInt -> .)
    COMMA           reduce using rule 142 (pnCteInt -> .)
    RBRACK          reduce using rule 142 (pnCteInt -> .)
    HASTA           reduce using rule 142 (pnCteInt -> .)
    HACER           reduce using rule 142 (pnCteInt -> .)

    pnCteInt                       shift and go to state 196

state 143

    (89) var_num -> CTE_FLOAT . pnCteFloat
    (143) pnCteFloat -> .

    MUL             reduce using rule 143 (pnCteFloat -> .)
    DIV             reduce using rule 143 (pnCteFloat -> .)
    ADD             reduce using rule 143 (pnCteFloat -> .)
    SUB             reduce using rule 143 (pnCteFloat -> .)
    LT              reduce using rule 143 (pnCteFloat -> .)
    GT              reduce using rule 143 (pnCteFloat -> .)
    LE              reduce using rule 143 (pnCteFloat -> .)
    GE              reduce using rule 143 (pnCteFloat -> .)
    NOT_EQUAL       reduce using rule 143 (pnCteFloat -> .)
    EQUAL           reduce using rule 143 (pnCteFloat -> .)
    AND             reduce using rule 143 (pnCteFloat -> .)
    OR              reduce using rule 143 (pnCteFloat -> .)
    ASSIGN          reduce using rule 143 (pnCteFloat -> .)
    RPAREN          reduce using rule 143 (pnCteFloat -> .)
    SEMICOLON       reduce using rule 143 (pnCteFloat -> .)
    COMMA           reduce using rule 143 (pnCteFloat -> .)
    RBRACK          reduce using rule 143 (pnCteFloat -> .)
    HASTA           reduce using rule 143 (pnCteFloat -> .)
    HACER           reduce using rule 143 (pnCteFloat -> .)

    pnCteFloat                     shift and go to state 197

state 144

    (79) fe -> MEDIA . pnFunEsp1
    (138) pnFunEsp1 -> .

    LPAREN          reduce using rule 138 (pnFunEsp1 -> .)

    pnFunEsp1                      shift and go to state 198

state 145

    (80) fe -> MEDIANA . pnFunEsp1
    (138) pnFunEsp1 -> .

    LPAREN          reduce using rule 138 (pnFunEsp1 -> .)

    pnFunEsp1                      shift and go to state 199

state 146

    (81) fe -> MODA . pnFunEsp1
    (138) pnFunEsp1 -> .

    LPAREN          reduce using rule 138 (pnFunEsp1 -> .)

    pnFunEsp1                      shift and go to state 200

state 147

    (82) fe -> VARIANZA . pnFunEsp1
    (138) pnFunEsp1 -> .

    LPAREN          reduce using rule 138 (pnFunEsp1 -> .)

    pnFunEsp1                      shift and go to state 201

state 148

    (83) fe -> CORRELACIONA . pnFunEsp1
    (138) pnFunEsp1 -> .

    LPAREN          reduce using rule 138 (pnFunEsp1 -> .)

    pnFunEsp1                      shift and go to state 202

state 149

    (73) condicional -> MIENTRAS pnCiclos1 LPAREN . expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3
    (90) expresion -> . mega_exp expresion1
    (93) mega_exp -> . super_exp meg
    (98) super_exp -> . exp sp
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    expresion                      shift and go to state 203
    mega_exp                       shift and go to state 127
    super_exp                      shift and go to state 128
    exp                            shift and go to state 129
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 150

    (74) no_condicional -> DESDE pnCiclos4 variable . ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8

    ASSIGN          shift and go to state 204


state 151

    (52) variable -> ID . pnExp1 di
    (146) pnExp1 -> .

    LBRACK          reduce using rule 146 (pnExp1 -> .)
    ASSIGN          reduce using rule 146 (pnExp1 -> .)
    RPAREN          reduce using rule 146 (pnExp1 -> .)

    pnExp1                         shift and go to state 101

state 152

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN . ID COMMA ID COMMA ID RPAREN SEMICOLON

    ID              shift and go to state 205


state 153

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN . ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    ID              shift and go to state 206


state 154

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN . ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (68) ca -> . ID pnExp1
    (69) ca -> . CTE_INT pnCteInt

    ID              shift and go to state 209
    CTE_INT         shift and go to state 208

    ca                             shift and go to state 207

state 155

    (13) funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 . bloque pnFunDec7
    (38) bloque -> . LBRACE est RBRACE

    LBRACE          shift and go to state 62

    bloque                         shift and go to state 210

state 156

    (18) param -> tipo_simple ID pnFunDec_2_3 param1 .

    RPAREN          reduce using rule 18 (param -> tipo_simple ID pnFunDec_2_3 param1 .)


state 157

    (19) param1 -> COMMA . param
    (18) param -> . tipo_simple ID pnFunDec_2_3 param1
    (21) tipo_simple -> . INT pn_1_setCurrentType
    (22) tipo_simple -> . FLOAT pn_1_setCurrentType
    (23) tipo_simple -> . CHAR pn_1_setCurrentType

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    param                          shift and go to state 211
    tipo_simple                    shift and go to state 66

state 158

    (20) param1 -> empty .

    RPAREN          reduce using rule 20 (param1 -> empty .)


state 159

    (32) dim_dec -> LBRACK pnDimDec2_3 CTE_INT pnDimDec5 RBRACK pn_7_decRenglones . dim_dec1
    (33) dim_dec1 -> . LBRACK CTE_INT pnDimDec6 RBRACK pn_8_decColumnas
    (34) dim_dec1 -> . empty
    (122) empty -> .

    LBRACK          shift and go to state 212
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)

    dim_dec1                       shift and go to state 213
    empty                          shift and go to state 214

state 160

    (51) asignacion -> variable ASSIGN pnSec1 exp . SEMICOLON pnSec2

    SEMICOLON       shift and go to state 215


state 161

    (55) llamada -> ID pnFunCall_1_2 LPAREN llamada1 . RPAREN pnFunCall_5_6_llamada

    RPAREN          shift and go to state 216


state 162

    (56) llamada1 -> exp . pnFunCall_3 llamada2
    (136) pnFunCall_3 -> .

    COMMA           reduce using rule 136 (pnFunCall_3 -> .)
    RPAREN          reduce using rule 136 (pnFunCall_3 -> .)

    pnFunCall_3                    shift and go to state 217

state 163

    (57) llamada1 -> empty .

    RPAREN          reduce using rule 57 (llamada1 -> empty .)


state 164

    (35) dim_index -> LBRACK pnDimAccess2 . pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1
    (151) pnExp6 -> .

    LPAREN          reduce using rule 151 (pnExp6 -> .)
    CTE_CH          reduce using rule 151 (pnExp6 -> .)
    CTE_STR         reduce using rule 151 (pnExp6 -> .)
    SUB             reduce using rule 151 (pnExp6 -> .)
    ID              reduce using rule 151 (pnExp6 -> .)
    CTE_INT         reduce using rule 151 (pnExp6 -> .)
    CTE_FLOAT       reduce using rule 151 (pnExp6 -> .)
    MEDIA           reduce using rule 151 (pnExp6 -> .)
    MEDIANA         reduce using rule 151 (pnExp6 -> .)
    MODA            reduce using rule 151 (pnExp6 -> .)
    VARIANZA        reduce using rule 151 (pnExp6 -> .)
    CORRELACIONA    reduce using rule 151 (pnExp6 -> .)

    pnExp6                         shift and go to state 218

state 165

    (60) retorno -> REGRESA pnSec3 LPAREN exp . RPAREN pnRetorno SEMICOLON

    RPAREN          shift and go to state 219


state 166

    (61) lectura -> LEE pnSec3 LPAREN variable . RPAREN SEMICOLON pnSec4 pnSec5

    RPAREN          shift and go to state 220


state 167

    (62) escritura -> ESCRIBE pnSec3 LPAREN esc . RPAREN SEMICOLON pnSec5

    RPAREN          shift and go to state 221


state 168

    (63) esc -> esc1 . esc2
    (65) esc2 -> . COMMA esc
    (66) esc2 -> . empty
    (122) empty -> .

    COMMA           shift and go to state 223
    RPAREN          reduce using rule 122 (empty -> .)

    esc2                           shift and go to state 222
    empty                          shift and go to state 224

state 169

    (64) esc1 -> exp . pnSec4
    (160) pnSec4 -> .

    COMMA           reduce using rule 160 (pnSec4 -> .)
    RPAREN          reduce using rule 160 (pnSec4 -> .)

    pnSec4                         shift and go to state 225

state 170

    (67) carga_datos -> CARGA LPAREN ID pnExp1 . COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga

    COMMA           shift and go to state 226


state 171

    (118) factor -> LPAREN pnExp6 . exp RPAREN pnExp7
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    exp                            shift and go to state 227
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 172

    (70) decision -> SI LPAREN expresion RPAREN . pnCond1 ENTONCES bloque sino pnCond2
    (162) pnCond1 -> .

    ENTONCES        reduce using rule 162 (pnCond1 -> .)

    pnCond1                        shift and go to state 228

state 173

    (90) expresion -> mega_exp expresion1 .

    RPAREN          reduce using rule 90 (expresion -> mega_exp expresion1 .)


state 174

    (91) expresion1 -> ASSIGN . expresion
    (90) expresion -> . mega_exp expresion1
    (93) mega_exp -> . super_exp meg
    (98) super_exp -> . exp sp
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    expresion                      shift and go to state 229
    mega_exp                       shift and go to state 127
    super_exp                      shift and go to state 128
    exp                            shift and go to state 129
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 175

    (92) expresion1 -> empty .

    RPAREN          reduce using rule 92 (expresion1 -> empty .)


state 176

    (93) mega_exp -> super_exp meg .

    ASSIGN          reduce using rule 93 (mega_exp -> super_exp meg .)
    RPAREN          reduce using rule 93 (mega_exp -> super_exp meg .)


state 177

    (94) meg -> op_l . pnExp10 mega_exp pnExp11
    (155) pnExp10 -> .

    LPAREN          reduce using rule 155 (pnExp10 -> .)
    CTE_CH          reduce using rule 155 (pnExp10 -> .)
    CTE_STR         reduce using rule 155 (pnExp10 -> .)
    SUB             reduce using rule 155 (pnExp10 -> .)
    ID              reduce using rule 155 (pnExp10 -> .)
    CTE_INT         reduce using rule 155 (pnExp10 -> .)
    CTE_FLOAT       reduce using rule 155 (pnExp10 -> .)
    MEDIA           reduce using rule 155 (pnExp10 -> .)
    MEDIANA         reduce using rule 155 (pnExp10 -> .)
    MODA            reduce using rule 155 (pnExp10 -> .)
    VARIANZA        reduce using rule 155 (pnExp10 -> .)
    CORRELACIONA    reduce using rule 155 (pnExp10 -> .)

    pnExp10                        shift and go to state 230

state 178

    (95) meg -> empty .

    ASSIGN          reduce using rule 95 (meg -> empty .)
    RPAREN          reduce using rule 95 (meg -> empty .)


state 179

    (96) op_l -> AND .

    LPAREN          reduce using rule 96 (op_l -> AND .)
    CTE_CH          reduce using rule 96 (op_l -> AND .)
    CTE_STR         reduce using rule 96 (op_l -> AND .)
    SUB             reduce using rule 96 (op_l -> AND .)
    ID              reduce using rule 96 (op_l -> AND .)
    CTE_INT         reduce using rule 96 (op_l -> AND .)
    CTE_FLOAT       reduce using rule 96 (op_l -> AND .)
    MEDIA           reduce using rule 96 (op_l -> AND .)
    MEDIANA         reduce using rule 96 (op_l -> AND .)
    MODA            reduce using rule 96 (op_l -> AND .)
    VARIANZA        reduce using rule 96 (op_l -> AND .)
    CORRELACIONA    reduce using rule 96 (op_l -> AND .)


state 180

    (97) op_l -> OR .

    LPAREN          reduce using rule 97 (op_l -> OR .)
    CTE_CH          reduce using rule 97 (op_l -> OR .)
    CTE_STR         reduce using rule 97 (op_l -> OR .)
    SUB             reduce using rule 97 (op_l -> OR .)
    ID              reduce using rule 97 (op_l -> OR .)
    CTE_INT         reduce using rule 97 (op_l -> OR .)
    CTE_FLOAT       reduce using rule 97 (op_l -> OR .)
    MEDIA           reduce using rule 97 (op_l -> OR .)
    MEDIANA         reduce using rule 97 (op_l -> OR .)
    MODA            reduce using rule 97 (op_l -> OR .)
    VARIANZA        reduce using rule 97 (op_l -> OR .)
    CORRELACIONA    reduce using rule 97 (op_l -> OR .)


state 181

    (98) super_exp -> exp sp .

    AND             reduce using rule 98 (super_exp -> exp sp .)
    OR              reduce using rule 98 (super_exp -> exp sp .)
    ASSIGN          reduce using rule 98 (super_exp -> exp sp .)
    RPAREN          reduce using rule 98 (super_exp -> exp sp .)


state 182

    (99) sp -> op_r . exp pnExp9
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    exp                            shift and go to state 231
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 183

    (100) sp -> empty .

    AND             reduce using rule 100 (sp -> empty .)
    OR              reduce using rule 100 (sp -> empty .)
    ASSIGN          reduce using rule 100 (sp -> empty .)
    RPAREN          reduce using rule 100 (sp -> empty .)


state 184

    (101) op_r -> LT . pnExp8
    (153) pnExp8 -> .

    LPAREN          reduce using rule 153 (pnExp8 -> .)
    CTE_CH          reduce using rule 153 (pnExp8 -> .)
    CTE_STR         reduce using rule 153 (pnExp8 -> .)
    SUB             reduce using rule 153 (pnExp8 -> .)
    ID              reduce using rule 153 (pnExp8 -> .)
    CTE_INT         reduce using rule 153 (pnExp8 -> .)
    CTE_FLOAT       reduce using rule 153 (pnExp8 -> .)
    MEDIA           reduce using rule 153 (pnExp8 -> .)
    MEDIANA         reduce using rule 153 (pnExp8 -> .)
    MODA            reduce using rule 153 (pnExp8 -> .)
    VARIANZA        reduce using rule 153 (pnExp8 -> .)
    CORRELACIONA    reduce using rule 153 (pnExp8 -> .)

    pnExp8                         shift and go to state 232

state 185

    (102) op_r -> GT . pnExp8
    (153) pnExp8 -> .

    LPAREN          reduce using rule 153 (pnExp8 -> .)
    CTE_CH          reduce using rule 153 (pnExp8 -> .)
    CTE_STR         reduce using rule 153 (pnExp8 -> .)
    SUB             reduce using rule 153 (pnExp8 -> .)
    ID              reduce using rule 153 (pnExp8 -> .)
    CTE_INT         reduce using rule 153 (pnExp8 -> .)
    CTE_FLOAT       reduce using rule 153 (pnExp8 -> .)
    MEDIA           reduce using rule 153 (pnExp8 -> .)
    MEDIANA         reduce using rule 153 (pnExp8 -> .)
    MODA            reduce using rule 153 (pnExp8 -> .)
    VARIANZA        reduce using rule 153 (pnExp8 -> .)
    CORRELACIONA    reduce using rule 153 (pnExp8 -> .)

    pnExp8                         shift and go to state 233

state 186

    (103) op_r -> LE . pnExp8
    (153) pnExp8 -> .

    LPAREN          reduce using rule 153 (pnExp8 -> .)
    CTE_CH          reduce using rule 153 (pnExp8 -> .)
    CTE_STR         reduce using rule 153 (pnExp8 -> .)
    SUB             reduce using rule 153 (pnExp8 -> .)
    ID              reduce using rule 153 (pnExp8 -> .)
    CTE_INT         reduce using rule 153 (pnExp8 -> .)
    CTE_FLOAT       reduce using rule 153 (pnExp8 -> .)
    MEDIA           reduce using rule 153 (pnExp8 -> .)
    MEDIANA         reduce using rule 153 (pnExp8 -> .)
    MODA            reduce using rule 153 (pnExp8 -> .)
    VARIANZA        reduce using rule 153 (pnExp8 -> .)
    CORRELACIONA    reduce using rule 153 (pnExp8 -> .)

    pnExp8                         shift and go to state 234

state 187

    (104) op_r -> GE . pnExp8
    (153) pnExp8 -> .

    LPAREN          reduce using rule 153 (pnExp8 -> .)
    CTE_CH          reduce using rule 153 (pnExp8 -> .)
    CTE_STR         reduce using rule 153 (pnExp8 -> .)
    SUB             reduce using rule 153 (pnExp8 -> .)
    ID              reduce using rule 153 (pnExp8 -> .)
    CTE_INT         reduce using rule 153 (pnExp8 -> .)
    CTE_FLOAT       reduce using rule 153 (pnExp8 -> .)
    MEDIA           reduce using rule 153 (pnExp8 -> .)
    MEDIANA         reduce using rule 153 (pnExp8 -> .)
    MODA            reduce using rule 153 (pnExp8 -> .)
    VARIANZA        reduce using rule 153 (pnExp8 -> .)
    CORRELACIONA    reduce using rule 153 (pnExp8 -> .)

    pnExp8                         shift and go to state 235

state 188

    (105) op_r -> NOT_EQUAL . pnExp8
    (153) pnExp8 -> .

    LPAREN          reduce using rule 153 (pnExp8 -> .)
    CTE_CH          reduce using rule 153 (pnExp8 -> .)
    CTE_STR         reduce using rule 153 (pnExp8 -> .)
    SUB             reduce using rule 153 (pnExp8 -> .)
    ID              reduce using rule 153 (pnExp8 -> .)
    CTE_INT         reduce using rule 153 (pnExp8 -> .)
    CTE_FLOAT       reduce using rule 153 (pnExp8 -> .)
    MEDIA           reduce using rule 153 (pnExp8 -> .)
    MEDIANA         reduce using rule 153 (pnExp8 -> .)
    MODA            reduce using rule 153 (pnExp8 -> .)
    VARIANZA        reduce using rule 153 (pnExp8 -> .)
    CORRELACIONA    reduce using rule 153 (pnExp8 -> .)

    pnExp8                         shift and go to state 236

state 189

    (106) op_r -> EQUAL . pnExp8
    (153) pnExp8 -> .

    LPAREN          reduce using rule 153 (pnExp8 -> .)
    CTE_CH          reduce using rule 153 (pnExp8 -> .)
    CTE_STR         reduce using rule 153 (pnExp8 -> .)
    SUB             reduce using rule 153 (pnExp8 -> .)
    ID              reduce using rule 153 (pnExp8 -> .)
    CTE_INT         reduce using rule 153 (pnExp8 -> .)
    CTE_FLOAT       reduce using rule 153 (pnExp8 -> .)
    MEDIA           reduce using rule 153 (pnExp8 -> .)
    MEDIANA         reduce using rule 153 (pnExp8 -> .)
    MODA            reduce using rule 153 (pnExp8 -> .)
    VARIANZA        reduce using rule 153 (pnExp8 -> .)
    CORRELACIONA    reduce using rule 153 (pnExp8 -> .)

    pnExp8                         shift and go to state 237

state 190

    (107) exp -> termino pnExp4 . exp1
    (108) exp1 -> . op_a exp
    (109) exp1 -> . empty
    (110) op_a -> . ADD pnExp2
    (111) op_a -> . SUB pnExp2
    (122) empty -> .

    ADD             shift and go to state 241
    SUB             shift and go to state 242
    LT              reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LE              reduce using rule 122 (empty -> .)
    GE              reduce using rule 122 (empty -> .)
    NOT_EQUAL       reduce using rule 122 (empty -> .)
    EQUAL           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    ASSIGN          reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    RBRACK          reduce using rule 122 (empty -> .)
    HASTA           reduce using rule 122 (empty -> .)
    HACER           reduce using rule 122 (empty -> .)

    exp1                           shift and go to state 238
    op_a                           shift and go to state 239
    empty                          shift and go to state 240

state 191

    (112) termino -> factor pnExp5 . term
    (113) term -> . op_a1 termino
    (114) term -> . empty
    (115) op_a1 -> . MUL pnExp3
    (116) op_a1 -> . DIV pnExp3
    (122) empty -> .

    MUL             shift and go to state 246
    DIV             shift and go to state 247
    ADD             reduce using rule 122 (empty -> .)
    SUB             reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LE              reduce using rule 122 (empty -> .)
    GE              reduce using rule 122 (empty -> .)
    NOT_EQUAL       reduce using rule 122 (empty -> .)
    EQUAL           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    ASSIGN          reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    RBRACK          reduce using rule 122 (empty -> .)
    HASTA           reduce using rule 122 (empty -> .)
    HACER           reduce using rule 122 (empty -> .)

    term                           shift and go to state 243
    op_a1                          shift and go to state 244
    empty                          shift and go to state 245

state 192

    (84) var_cte -> CTE_CH pnCteChar .

    MUL             reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    DIV             reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    ADD             reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    SUB             reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    LT              reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    GT              reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    LE              reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    GE              reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    NOT_EQUAL       reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    EQUAL           reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    AND             reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    OR              reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    ASSIGN          reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    RPAREN          reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    SEMICOLON       reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    COMMA           reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    RBRACK          reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    HASTA           reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)
    HACER           reduce using rule 84 (var_cte -> CTE_CH pnCteChar .)


state 193

    (85) var_cte -> CTE_STR pnCteStr .

    MUL             reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    DIV             reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    ADD             reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    SUB             reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    LT              reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    GT              reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    LE              reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    GE              reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    NOT_EQUAL       reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    EQUAL           reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    AND             reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    OR              reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    ASSIGN          reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    RPAREN          reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    SEMICOLON       reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    COMMA           reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    RBRACK          reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    HASTA           reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)
    HACER           reduce using rule 85 (var_cte -> CTE_STR pnCteStr .)


state 194

    (86) var_cte -> SUB pnNeg . var_num
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat

    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143

    var_num                        shift and go to state 248

state 195

    (78) funciones_especiales -> fe LPAREN . ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2

    ID              shift and go to state 249


state 196

    (88) var_num -> CTE_INT pnCteInt .

    MUL             reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    DIV             reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    ADD             reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    SUB             reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    LT              reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    GT              reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    LE              reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    GE              reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    NOT_EQUAL       reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    EQUAL           reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    AND             reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    OR              reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    ASSIGN          reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    RPAREN          reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    SEMICOLON       reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    COMMA           reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    RBRACK          reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    HASTA           reduce using rule 88 (var_num -> CTE_INT pnCteInt .)
    HACER           reduce using rule 88 (var_num -> CTE_INT pnCteInt .)


state 197

    (89) var_num -> CTE_FLOAT pnCteFloat .

    MUL             reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    DIV             reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    ADD             reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    SUB             reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    LT              reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    GT              reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    LE              reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    GE              reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    NOT_EQUAL       reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    EQUAL           reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    AND             reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    OR              reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    ASSIGN          reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    RPAREN          reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    SEMICOLON       reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    COMMA           reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    RBRACK          reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    HASTA           reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)
    HACER           reduce using rule 89 (var_num -> CTE_FLOAT pnCteFloat .)


state 198

    (79) fe -> MEDIA pnFunEsp1 .

    LPAREN          reduce using rule 79 (fe -> MEDIA pnFunEsp1 .)


state 199

    (80) fe -> MEDIANA pnFunEsp1 .

    LPAREN          reduce using rule 80 (fe -> MEDIANA pnFunEsp1 .)


state 200

    (81) fe -> MODA pnFunEsp1 .

    LPAREN          reduce using rule 81 (fe -> MODA pnFunEsp1 .)


state 201

    (82) fe -> VARIANZA pnFunEsp1 .

    LPAREN          reduce using rule 82 (fe -> VARIANZA pnFunEsp1 .)


state 202

    (83) fe -> CORRELACIONA pnFunEsp1 .

    LPAREN          reduce using rule 83 (fe -> CORRELACIONA pnFunEsp1 .)


state 203

    (73) condicional -> MIENTRAS pnCiclos1 LPAREN expresion . RPAREN pnCiclos2 HAZ bloque pnCiclos3

    RPAREN          shift and go to state 250


state 204

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN . pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
    (157) pnSec1 -> .

    LPAREN          reduce using rule 157 (pnSec1 -> .)
    CTE_CH          reduce using rule 157 (pnSec1 -> .)
    CTE_STR         reduce using rule 157 (pnSec1 -> .)
    SUB             reduce using rule 157 (pnSec1 -> .)
    ID              reduce using rule 157 (pnSec1 -> .)
    CTE_INT         reduce using rule 157 (pnSec1 -> .)
    CTE_FLOAT       reduce using rule 157 (pnSec1 -> .)
    MEDIA           reduce using rule 157 (pnSec1 -> .)
    MEDIANA         reduce using rule 157 (pnSec1 -> .)
    MODA            reduce using rule 157 (pnSec1 -> .)
    VARIANZA        reduce using rule 157 (pnSec1 -> .)
    CORRELACIONA    reduce using rule 157 (pnSec1 -> .)

    pnSec1                         shift and go to state 251

state 205

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID . COMMA ID COMMA ID RPAREN SEMICOLON

    COMMA           shift and go to state 252


state 206

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID . pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (146) pnExp1 -> .

    COMMA           reduce using rule 146 (pnExp1 -> .)

    pnExp1                         shift and go to state 253

state 207

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca . COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    COMMA           shift and go to state 254


state 208

    (69) ca -> CTE_INT . pnCteInt
    (142) pnCteInt -> .

    COMMA           reduce using rule 142 (pnCteInt -> .)
    RPAREN          reduce using rule 142 (pnCteInt -> .)

    pnCteInt                       shift and go to state 255

state 209

    (68) ca -> ID . pnExp1
    (146) pnExp1 -> .

    COMMA           reduce using rule 146 (pnExp1 -> .)
    RPAREN          reduce using rule 146 (pnExp1 -> .)

    pnExp1                         shift and go to state 256

state 210

    (13) funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque . pnFunDec7
    (134) pnFunDec7 -> .

    FUNCION         reduce using rule 134 (pnFunDec7 -> .)
    PRINCIPAL       reduce using rule 134 (pnFunDec7 -> .)

    pnFunDec7                      shift and go to state 257

state 211

    (19) param1 -> COMMA param .

    RPAREN          reduce using rule 19 (param1 -> COMMA param .)


state 212

    (33) dim_dec1 -> LBRACK . CTE_INT pnDimDec6 RBRACK pn_8_decColumnas

    CTE_INT         shift and go to state 258


state 213

    (32) dim_dec -> LBRACK pnDimDec2_3 CTE_INT pnDimDec5 RBRACK pn_7_decRenglones dim_dec1 .

    COMMA           reduce using rule 32 (dim_dec -> LBRACK pnDimDec2_3 CTE_INT pnDimDec5 RBRACK pn_7_decRenglones dim_dec1 .)
    SEMICOLON       reduce using rule 32 (dim_dec -> LBRACK pnDimDec2_3 CTE_INT pnDimDec5 RBRACK pn_7_decRenglones dim_dec1 .)


state 214

    (34) dim_dec1 -> empty .

    COMMA           reduce using rule 34 (dim_dec1 -> empty .)
    SEMICOLON       reduce using rule 34 (dim_dec1 -> empty .)


state 215

    (51) asignacion -> variable ASSIGN pnSec1 exp SEMICOLON . pnSec2
    (158) pnSec2 -> .

    ID              reduce using rule 158 (pnSec2 -> .)
    REGRESA         reduce using rule 158 (pnSec2 -> .)
    LEE             reduce using rule 158 (pnSec2 -> .)
    ESCRIBE         reduce using rule 158 (pnSec2 -> .)
    CARGA           reduce using rule 158 (pnSec2 -> .)
    SI              reduce using rule 158 (pnSec2 -> .)
    MIENTRAS        reduce using rule 158 (pnSec2 -> .)
    DESDE           reduce using rule 158 (pnSec2 -> .)
    VARIABLES       reduce using rule 158 (pnSec2 -> .)
    HISTOGRAMA      reduce using rule 158 (pnSec2 -> .)
    PLOTLINE        reduce using rule 158 (pnSec2 -> .)
    RBRACE          reduce using rule 158 (pnSec2 -> .)

    pnSec2                         shift and go to state 259

state 216

    (55) llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN . pnFunCall_5_6_llamada
    (137) pnFunCall_5_6_llamada -> .

    ID              reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    REGRESA         reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    LEE             reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    ESCRIBE         reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    CARGA           reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    SI              reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    MIENTRAS        reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    DESDE           reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    VARIABLES       reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    HISTOGRAMA      reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    PLOTLINE        reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    RBRACE          reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    MUL             reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    DIV             reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    ADD             reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    SUB             reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    LT              reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    GT              reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    LE              reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    GE              reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    NOT_EQUAL       reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    EQUAL           reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    AND             reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    OR              reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    ASSIGN          reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    RPAREN          reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    SEMICOLON       reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    COMMA           reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    RBRACK          reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    HASTA           reduce using rule 137 (pnFunCall_5_6_llamada -> .)
    HACER           reduce using rule 137 (pnFunCall_5_6_llamada -> .)

    pnFunCall_5_6_llamada          shift and go to state 260

state 217

    (56) llamada1 -> exp pnFunCall_3 . llamada2
    (58) llamada2 -> . COMMA llamada1
    (59) llamada2 -> . empty
    (122) empty -> .

    COMMA           shift and go to state 262
    RPAREN          reduce using rule 122 (empty -> .)

    llamada2                       shift and go to state 261
    empty                          shift and go to state 263

state 218

    (35) dim_index -> LBRACK pnDimAccess2 pnExp6 . exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    exp                            shift and go to state 264
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 219

    (60) retorno -> REGRESA pnSec3 LPAREN exp RPAREN . pnRetorno SEMICOLON
    (173) pnRetorno -> .

    SEMICOLON       reduce using rule 173 (pnRetorno -> .)

    pnRetorno                      shift and go to state 265

state 220

    (61) lectura -> LEE pnSec3 LPAREN variable RPAREN . SEMICOLON pnSec4 pnSec5

    SEMICOLON       shift and go to state 266


state 221

    (62) escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN . SEMICOLON pnSec5

    SEMICOLON       shift and go to state 267


state 222

    (63) esc -> esc1 esc2 .

    RPAREN          reduce using rule 63 (esc -> esc1 esc2 .)


state 223

    (65) esc2 -> COMMA . esc
    (63) esc -> . esc1 esc2
    (64) esc1 -> . exp pnSec4
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    esc                            shift and go to state 268
    esc1                           shift and go to state 168
    exp                            shift and go to state 169
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 224

    (66) esc2 -> empty .

    RPAREN          reduce using rule 66 (esc2 -> empty .)


state 225

    (64) esc1 -> exp pnSec4 .

    COMMA           reduce using rule 64 (esc1 -> exp pnSec4 .)
    RPAREN          reduce using rule 64 (esc1 -> exp pnSec4 .)


state 226

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA . CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga

    CTE_STR         shift and go to state 269


state 227

    (118) factor -> LPAREN pnExp6 exp . RPAREN pnExp7

    RPAREN          shift and go to state 270


state 228

    (70) decision -> SI LPAREN expresion RPAREN pnCond1 . ENTONCES bloque sino pnCond2

    ENTONCES        shift and go to state 271


state 229

    (91) expresion1 -> ASSIGN expresion .

    RPAREN          reduce using rule 91 (expresion1 -> ASSIGN expresion .)


state 230

    (94) meg -> op_l pnExp10 . mega_exp pnExp11
    (93) mega_exp -> . super_exp meg
    (98) super_exp -> . exp sp
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    mega_exp                       shift and go to state 272
    super_exp                      shift and go to state 128
    exp                            shift and go to state 129
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 231

    (99) sp -> op_r exp . pnExp9
    (154) pnExp9 -> .

    AND             reduce using rule 154 (pnExp9 -> .)
    OR              reduce using rule 154 (pnExp9 -> .)
    ASSIGN          reduce using rule 154 (pnExp9 -> .)
    RPAREN          reduce using rule 154 (pnExp9 -> .)

    pnExp9                         shift and go to state 273

state 232

    (101) op_r -> LT pnExp8 .

    LPAREN          reduce using rule 101 (op_r -> LT pnExp8 .)
    CTE_CH          reduce using rule 101 (op_r -> LT pnExp8 .)
    CTE_STR         reduce using rule 101 (op_r -> LT pnExp8 .)
    SUB             reduce using rule 101 (op_r -> LT pnExp8 .)
    ID              reduce using rule 101 (op_r -> LT pnExp8 .)
    CTE_INT         reduce using rule 101 (op_r -> LT pnExp8 .)
    CTE_FLOAT       reduce using rule 101 (op_r -> LT pnExp8 .)
    MEDIA           reduce using rule 101 (op_r -> LT pnExp8 .)
    MEDIANA         reduce using rule 101 (op_r -> LT pnExp8 .)
    MODA            reduce using rule 101 (op_r -> LT pnExp8 .)
    VARIANZA        reduce using rule 101 (op_r -> LT pnExp8 .)
    CORRELACIONA    reduce using rule 101 (op_r -> LT pnExp8 .)


state 233

    (102) op_r -> GT pnExp8 .

    LPAREN          reduce using rule 102 (op_r -> GT pnExp8 .)
    CTE_CH          reduce using rule 102 (op_r -> GT pnExp8 .)
    CTE_STR         reduce using rule 102 (op_r -> GT pnExp8 .)
    SUB             reduce using rule 102 (op_r -> GT pnExp8 .)
    ID              reduce using rule 102 (op_r -> GT pnExp8 .)
    CTE_INT         reduce using rule 102 (op_r -> GT pnExp8 .)
    CTE_FLOAT       reduce using rule 102 (op_r -> GT pnExp8 .)
    MEDIA           reduce using rule 102 (op_r -> GT pnExp8 .)
    MEDIANA         reduce using rule 102 (op_r -> GT pnExp8 .)
    MODA            reduce using rule 102 (op_r -> GT pnExp8 .)
    VARIANZA        reduce using rule 102 (op_r -> GT pnExp8 .)
    CORRELACIONA    reduce using rule 102 (op_r -> GT pnExp8 .)


state 234

    (103) op_r -> LE pnExp8 .

    LPAREN          reduce using rule 103 (op_r -> LE pnExp8 .)
    CTE_CH          reduce using rule 103 (op_r -> LE pnExp8 .)
    CTE_STR         reduce using rule 103 (op_r -> LE pnExp8 .)
    SUB             reduce using rule 103 (op_r -> LE pnExp8 .)
    ID              reduce using rule 103 (op_r -> LE pnExp8 .)
    CTE_INT         reduce using rule 103 (op_r -> LE pnExp8 .)
    CTE_FLOAT       reduce using rule 103 (op_r -> LE pnExp8 .)
    MEDIA           reduce using rule 103 (op_r -> LE pnExp8 .)
    MEDIANA         reduce using rule 103 (op_r -> LE pnExp8 .)
    MODA            reduce using rule 103 (op_r -> LE pnExp8 .)
    VARIANZA        reduce using rule 103 (op_r -> LE pnExp8 .)
    CORRELACIONA    reduce using rule 103 (op_r -> LE pnExp8 .)


state 235

    (104) op_r -> GE pnExp8 .

    LPAREN          reduce using rule 104 (op_r -> GE pnExp8 .)
    CTE_CH          reduce using rule 104 (op_r -> GE pnExp8 .)
    CTE_STR         reduce using rule 104 (op_r -> GE pnExp8 .)
    SUB             reduce using rule 104 (op_r -> GE pnExp8 .)
    ID              reduce using rule 104 (op_r -> GE pnExp8 .)
    CTE_INT         reduce using rule 104 (op_r -> GE pnExp8 .)
    CTE_FLOAT       reduce using rule 104 (op_r -> GE pnExp8 .)
    MEDIA           reduce using rule 104 (op_r -> GE pnExp8 .)
    MEDIANA         reduce using rule 104 (op_r -> GE pnExp8 .)
    MODA            reduce using rule 104 (op_r -> GE pnExp8 .)
    VARIANZA        reduce using rule 104 (op_r -> GE pnExp8 .)
    CORRELACIONA    reduce using rule 104 (op_r -> GE pnExp8 .)


state 236

    (105) op_r -> NOT_EQUAL pnExp8 .

    LPAREN          reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    CTE_CH          reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    CTE_STR         reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    SUB             reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    ID              reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    CTE_INT         reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    CTE_FLOAT       reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    MEDIA           reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    MEDIANA         reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    MODA            reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    VARIANZA        reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)
    CORRELACIONA    reduce using rule 105 (op_r -> NOT_EQUAL pnExp8 .)


state 237

    (106) op_r -> EQUAL pnExp8 .

    LPAREN          reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    CTE_CH          reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    CTE_STR         reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    SUB             reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    ID              reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    CTE_INT         reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    CTE_FLOAT       reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    MEDIA           reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    MEDIANA         reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    MODA            reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    VARIANZA        reduce using rule 106 (op_r -> EQUAL pnExp8 .)
    CORRELACIONA    reduce using rule 106 (op_r -> EQUAL pnExp8 .)


state 238

    (107) exp -> termino pnExp4 exp1 .

    LT              reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    GT              reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    LE              reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    GE              reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    NOT_EQUAL       reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    EQUAL           reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    AND             reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    OR              reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    ASSIGN          reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    RPAREN          reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    SEMICOLON       reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    COMMA           reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    RBRACK          reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    HASTA           reduce using rule 107 (exp -> termino pnExp4 exp1 .)
    HACER           reduce using rule 107 (exp -> termino pnExp4 exp1 .)


state 239

    (108) exp1 -> op_a . exp
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    exp                            shift and go to state 274
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 240

    (109) exp1 -> empty .

    LT              reduce using rule 109 (exp1 -> empty .)
    GT              reduce using rule 109 (exp1 -> empty .)
    LE              reduce using rule 109 (exp1 -> empty .)
    GE              reduce using rule 109 (exp1 -> empty .)
    NOT_EQUAL       reduce using rule 109 (exp1 -> empty .)
    EQUAL           reduce using rule 109 (exp1 -> empty .)
    AND             reduce using rule 109 (exp1 -> empty .)
    OR              reduce using rule 109 (exp1 -> empty .)
    ASSIGN          reduce using rule 109 (exp1 -> empty .)
    RPAREN          reduce using rule 109 (exp1 -> empty .)
    SEMICOLON       reduce using rule 109 (exp1 -> empty .)
    COMMA           reduce using rule 109 (exp1 -> empty .)
    RBRACK          reduce using rule 109 (exp1 -> empty .)
    HASTA           reduce using rule 109 (exp1 -> empty .)
    HACER           reduce using rule 109 (exp1 -> empty .)


state 241

    (110) op_a -> ADD . pnExp2
    (147) pnExp2 -> .

    LPAREN          reduce using rule 147 (pnExp2 -> .)
    CTE_CH          reduce using rule 147 (pnExp2 -> .)
    CTE_STR         reduce using rule 147 (pnExp2 -> .)
    SUB             reduce using rule 147 (pnExp2 -> .)
    ID              reduce using rule 147 (pnExp2 -> .)
    CTE_INT         reduce using rule 147 (pnExp2 -> .)
    CTE_FLOAT       reduce using rule 147 (pnExp2 -> .)
    MEDIA           reduce using rule 147 (pnExp2 -> .)
    MEDIANA         reduce using rule 147 (pnExp2 -> .)
    MODA            reduce using rule 147 (pnExp2 -> .)
    VARIANZA        reduce using rule 147 (pnExp2 -> .)
    CORRELACIONA    reduce using rule 147 (pnExp2 -> .)

    pnExp2                         shift and go to state 275

state 242

    (111) op_a -> SUB . pnExp2
    (147) pnExp2 -> .

    LPAREN          reduce using rule 147 (pnExp2 -> .)
    CTE_CH          reduce using rule 147 (pnExp2 -> .)
    CTE_STR         reduce using rule 147 (pnExp2 -> .)
    SUB             reduce using rule 147 (pnExp2 -> .)
    ID              reduce using rule 147 (pnExp2 -> .)
    CTE_INT         reduce using rule 147 (pnExp2 -> .)
    CTE_FLOAT       reduce using rule 147 (pnExp2 -> .)
    MEDIA           reduce using rule 147 (pnExp2 -> .)
    MEDIANA         reduce using rule 147 (pnExp2 -> .)
    MODA            reduce using rule 147 (pnExp2 -> .)
    VARIANZA        reduce using rule 147 (pnExp2 -> .)
    CORRELACIONA    reduce using rule 147 (pnExp2 -> .)

    pnExp2                         shift and go to state 276

state 243

    (112) termino -> factor pnExp5 term .

    ADD             reduce using rule 112 (termino -> factor pnExp5 term .)
    SUB             reduce using rule 112 (termino -> factor pnExp5 term .)
    LT              reduce using rule 112 (termino -> factor pnExp5 term .)
    GT              reduce using rule 112 (termino -> factor pnExp5 term .)
    LE              reduce using rule 112 (termino -> factor pnExp5 term .)
    GE              reduce using rule 112 (termino -> factor pnExp5 term .)
    NOT_EQUAL       reduce using rule 112 (termino -> factor pnExp5 term .)
    EQUAL           reduce using rule 112 (termino -> factor pnExp5 term .)
    AND             reduce using rule 112 (termino -> factor pnExp5 term .)
    OR              reduce using rule 112 (termino -> factor pnExp5 term .)
    ASSIGN          reduce using rule 112 (termino -> factor pnExp5 term .)
    RPAREN          reduce using rule 112 (termino -> factor pnExp5 term .)
    SEMICOLON       reduce using rule 112 (termino -> factor pnExp5 term .)
    COMMA           reduce using rule 112 (termino -> factor pnExp5 term .)
    RBRACK          reduce using rule 112 (termino -> factor pnExp5 term .)
    HASTA           reduce using rule 112 (termino -> factor pnExp5 term .)
    HACER           reduce using rule 112 (termino -> factor pnExp5 term .)


state 244

    (113) term -> op_a1 . termino
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    termino                        shift and go to state 277
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 245

    (114) term -> empty .

    ADD             reduce using rule 114 (term -> empty .)
    SUB             reduce using rule 114 (term -> empty .)
    LT              reduce using rule 114 (term -> empty .)
    GT              reduce using rule 114 (term -> empty .)
    LE              reduce using rule 114 (term -> empty .)
    GE              reduce using rule 114 (term -> empty .)
    NOT_EQUAL       reduce using rule 114 (term -> empty .)
    EQUAL           reduce using rule 114 (term -> empty .)
    AND             reduce using rule 114 (term -> empty .)
    OR              reduce using rule 114 (term -> empty .)
    ASSIGN          reduce using rule 114 (term -> empty .)
    RPAREN          reduce using rule 114 (term -> empty .)
    SEMICOLON       reduce using rule 114 (term -> empty .)
    COMMA           reduce using rule 114 (term -> empty .)
    RBRACK          reduce using rule 114 (term -> empty .)
    HASTA           reduce using rule 114 (term -> empty .)
    HACER           reduce using rule 114 (term -> empty .)


state 246

    (115) op_a1 -> MUL . pnExp3
    (148) pnExp3 -> .

    LPAREN          reduce using rule 148 (pnExp3 -> .)
    CTE_CH          reduce using rule 148 (pnExp3 -> .)
    CTE_STR         reduce using rule 148 (pnExp3 -> .)
    SUB             reduce using rule 148 (pnExp3 -> .)
    ID              reduce using rule 148 (pnExp3 -> .)
    CTE_INT         reduce using rule 148 (pnExp3 -> .)
    CTE_FLOAT       reduce using rule 148 (pnExp3 -> .)
    MEDIA           reduce using rule 148 (pnExp3 -> .)
    MEDIANA         reduce using rule 148 (pnExp3 -> .)
    MODA            reduce using rule 148 (pnExp3 -> .)
    VARIANZA        reduce using rule 148 (pnExp3 -> .)
    CORRELACIONA    reduce using rule 148 (pnExp3 -> .)

    pnExp3                         shift and go to state 278

state 247

    (116) op_a1 -> DIV . pnExp3
    (148) pnExp3 -> .

    LPAREN          reduce using rule 148 (pnExp3 -> .)
    CTE_CH          reduce using rule 148 (pnExp3 -> .)
    CTE_STR         reduce using rule 148 (pnExp3 -> .)
    SUB             reduce using rule 148 (pnExp3 -> .)
    ID              reduce using rule 148 (pnExp3 -> .)
    CTE_INT         reduce using rule 148 (pnExp3 -> .)
    CTE_FLOAT       reduce using rule 148 (pnExp3 -> .)
    MEDIA           reduce using rule 148 (pnExp3 -> .)
    MEDIANA         reduce using rule 148 (pnExp3 -> .)
    MODA            reduce using rule 148 (pnExp3 -> .)
    VARIANZA        reduce using rule 148 (pnExp3 -> .)
    CORRELACIONA    reduce using rule 148 (pnExp3 -> .)

    pnExp3                         shift and go to state 279

state 248

    (86) var_cte -> SUB pnNeg var_num .

    MUL             reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    DIV             reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    ADD             reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    SUB             reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    LT              reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    GT              reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    LE              reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    GE              reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    NOT_EQUAL       reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    EQUAL           reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    AND             reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    OR              reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    ASSIGN          reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    RPAREN          reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    SEMICOLON       reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    COMMA           reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    RBRACK          reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    HASTA           reduce using rule 86 (var_cte -> SUB pnNeg var_num .)
    HACER           reduce using rule 86 (var_cte -> SUB pnNeg var_num .)


state 249

    (78) funciones_especiales -> fe LPAREN ID . pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (146) pnExp1 -> .

    COMMA           reduce using rule 146 (pnExp1 -> .)

    pnExp1                         shift and go to state 280

state 250

    (73) condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN . pnCiclos2 HAZ bloque pnCiclos3
    (166) pnCiclos2 -> .

    HAZ             reduce using rule 166 (pnCiclos2 -> .)

    pnCiclos2                      shift and go to state 281

state 251

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 . exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    variable                       shift and go to state 133
    exp                            shift and go to state 282
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 252

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA . ID COMMA ID RPAREN SEMICOLON

    ID              shift and go to state 283


state 253

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 . COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    COMMA           shift and go to state 284


state 254

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA . ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (68) ca -> . ID pnExp1
    (69) ca -> . CTE_INT pnCteInt

    ID              shift and go to state 209
    CTE_INT         shift and go to state 208

    ca                             shift and go to state 285

state 255

    (69) ca -> CTE_INT pnCteInt .

    COMMA           reduce using rule 69 (ca -> CTE_INT pnCteInt .)
    RPAREN          reduce using rule 69 (ca -> CTE_INT pnCteInt .)


state 256

    (68) ca -> ID pnExp1 .

    COMMA           reduce using rule 68 (ca -> ID pnExp1 .)
    RPAREN          reduce using rule 68 (ca -> ID pnExp1 .)


state 257

    (13) funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7 .

    FUNCION         reduce using rule 13 (funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7 .)
    PRINCIPAL       reduce using rule 13 (funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7 .)


state 258

    (33) dim_dec1 -> LBRACK CTE_INT . pnDimDec6 RBRACK pn_8_decColumnas
    (176) pnDimDec6 -> .

    RBRACK          reduce using rule 176 (pnDimDec6 -> .)

    pnDimDec6                      shift and go to state 286

state 259

    (51) asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .

    ID              reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    REGRESA         reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    LEE             reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    ESCRIBE         reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    CARGA           reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    SI              reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    MIENTRAS        reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    DESDE           reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    VARIABLES       reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    HISTOGRAMA      reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    PLOTLINE        reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)
    RBRACE          reduce using rule 51 (asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2 .)


state 260

    (55) llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .

    ID              reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    REGRESA         reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    LEE             reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    ESCRIBE         reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    CARGA           reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    SI              reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    MIENTRAS        reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    DESDE           reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    VARIABLES       reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    HISTOGRAMA      reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    PLOTLINE        reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    RBRACE          reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    MUL             reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    DIV             reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    ADD             reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    SUB             reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    LT              reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    GT              reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    LE              reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    GE              reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    NOT_EQUAL       reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    EQUAL           reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    AND             reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    OR              reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    ASSIGN          reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    RPAREN          reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    SEMICOLON       reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    COMMA           reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    RBRACK          reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    HASTA           reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)
    HACER           reduce using rule 55 (llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada .)


state 261

    (56) llamada1 -> exp pnFunCall_3 llamada2 .

    RPAREN          reduce using rule 56 (llamada1 -> exp pnFunCall_3 llamada2 .)


state 262

    (58) llamada2 -> COMMA . llamada1
    (56) llamada1 -> . exp pnFunCall_3 llamada2
    (57) llamada1 -> . empty
    (107) exp -> . termino pnExp4 exp1
    (122) empty -> .
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    RPAREN          reduce using rule 122 (empty -> .)
    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    llamada1                       shift and go to state 287
    exp                            shift and go to state 162
    empty                          shift and go to state 163
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 263

    (59) llamada2 -> empty .

    RPAREN          reduce using rule 59 (llamada2 -> empty .)


state 264

    (35) dim_index -> LBRACK pnDimAccess2 pnExp6 exp . pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1
    (181) pnActivaArray -> .

    RBRACK          reduce using rule 181 (pnActivaArray -> .)

    pnActivaArray                  shift and go to state 288

state 265

    (60) retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno . SEMICOLON

    SEMICOLON       shift and go to state 289


state 266

    (61) lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON . pnSec4 pnSec5
    (160) pnSec4 -> .

    ID              reduce using rule 160 (pnSec4 -> .)
    REGRESA         reduce using rule 160 (pnSec4 -> .)
    LEE             reduce using rule 160 (pnSec4 -> .)
    ESCRIBE         reduce using rule 160 (pnSec4 -> .)
    CARGA           reduce using rule 160 (pnSec4 -> .)
    SI              reduce using rule 160 (pnSec4 -> .)
    MIENTRAS        reduce using rule 160 (pnSec4 -> .)
    DESDE           reduce using rule 160 (pnSec4 -> .)
    VARIABLES       reduce using rule 160 (pnSec4 -> .)
    HISTOGRAMA      reduce using rule 160 (pnSec4 -> .)
    PLOTLINE        reduce using rule 160 (pnSec4 -> .)
    RBRACE          reduce using rule 160 (pnSec4 -> .)

    pnSec4                         shift and go to state 290

state 267

    (62) escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON . pnSec5
    (161) pnSec5 -> .

    ID              reduce using rule 161 (pnSec5 -> .)
    REGRESA         reduce using rule 161 (pnSec5 -> .)
    LEE             reduce using rule 161 (pnSec5 -> .)
    ESCRIBE         reduce using rule 161 (pnSec5 -> .)
    CARGA           reduce using rule 161 (pnSec5 -> .)
    SI              reduce using rule 161 (pnSec5 -> .)
    MIENTRAS        reduce using rule 161 (pnSec5 -> .)
    DESDE           reduce using rule 161 (pnSec5 -> .)
    VARIABLES       reduce using rule 161 (pnSec5 -> .)
    HISTOGRAMA      reduce using rule 161 (pnSec5 -> .)
    PLOTLINE        reduce using rule 161 (pnSec5 -> .)
    RBRACE          reduce using rule 161 (pnSec5 -> .)

    pnSec5                         shift and go to state 291

state 268

    (65) esc2 -> COMMA esc .

    RPAREN          reduce using rule 65 (esc2 -> COMMA esc .)


state 269

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR . pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga
    (145) pnCteStr -> .

    COMMA           reduce using rule 145 (pnCteStr -> .)

    pnCteStr                       shift and go to state 292

state 270

    (118) factor -> LPAREN pnExp6 exp RPAREN . pnExp7
    (152) pnExp7 -> .

    MUL             reduce using rule 152 (pnExp7 -> .)
    DIV             reduce using rule 152 (pnExp7 -> .)
    ADD             reduce using rule 152 (pnExp7 -> .)
    SUB             reduce using rule 152 (pnExp7 -> .)
    LT              reduce using rule 152 (pnExp7 -> .)
    GT              reduce using rule 152 (pnExp7 -> .)
    LE              reduce using rule 152 (pnExp7 -> .)
    GE              reduce using rule 152 (pnExp7 -> .)
    NOT_EQUAL       reduce using rule 152 (pnExp7 -> .)
    EQUAL           reduce using rule 152 (pnExp7 -> .)
    AND             reduce using rule 152 (pnExp7 -> .)
    OR              reduce using rule 152 (pnExp7 -> .)
    ASSIGN          reduce using rule 152 (pnExp7 -> .)
    RPAREN          reduce using rule 152 (pnExp7 -> .)
    SEMICOLON       reduce using rule 152 (pnExp7 -> .)
    COMMA           reduce using rule 152 (pnExp7 -> .)
    RBRACK          reduce using rule 152 (pnExp7 -> .)
    HASTA           reduce using rule 152 (pnExp7 -> .)
    HACER           reduce using rule 152 (pnExp7 -> .)

    pnExp7                         shift and go to state 293

state 271

    (70) decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES . bloque sino pnCond2
    (38) bloque -> . LBRACE est RBRACE

    LBRACE          shift and go to state 62

    bloque                         shift and go to state 294

state 272

    (94) meg -> op_l pnExp10 mega_exp . pnExp11
    (156) pnExp11 -> .

    ASSIGN          reduce using rule 156 (pnExp11 -> .)
    RPAREN          reduce using rule 156 (pnExp11 -> .)

    pnExp11                        shift and go to state 295

state 273

    (99) sp -> op_r exp pnExp9 .

    AND             reduce using rule 99 (sp -> op_r exp pnExp9 .)
    OR              reduce using rule 99 (sp -> op_r exp pnExp9 .)
    ASSIGN          reduce using rule 99 (sp -> op_r exp pnExp9 .)
    RPAREN          reduce using rule 99 (sp -> op_r exp pnExp9 .)


state 274

    (108) exp1 -> op_a exp .

    LT              reduce using rule 108 (exp1 -> op_a exp .)
    GT              reduce using rule 108 (exp1 -> op_a exp .)
    LE              reduce using rule 108 (exp1 -> op_a exp .)
    GE              reduce using rule 108 (exp1 -> op_a exp .)
    NOT_EQUAL       reduce using rule 108 (exp1 -> op_a exp .)
    EQUAL           reduce using rule 108 (exp1 -> op_a exp .)
    AND             reduce using rule 108 (exp1 -> op_a exp .)
    OR              reduce using rule 108 (exp1 -> op_a exp .)
    ASSIGN          reduce using rule 108 (exp1 -> op_a exp .)
    RPAREN          reduce using rule 108 (exp1 -> op_a exp .)
    SEMICOLON       reduce using rule 108 (exp1 -> op_a exp .)
    COMMA           reduce using rule 108 (exp1 -> op_a exp .)
    RBRACK          reduce using rule 108 (exp1 -> op_a exp .)
    HASTA           reduce using rule 108 (exp1 -> op_a exp .)
    HACER           reduce using rule 108 (exp1 -> op_a exp .)


state 275

    (110) op_a -> ADD pnExp2 .

    LPAREN          reduce using rule 110 (op_a -> ADD pnExp2 .)
    CTE_CH          reduce using rule 110 (op_a -> ADD pnExp2 .)
    CTE_STR         reduce using rule 110 (op_a -> ADD pnExp2 .)
    SUB             reduce using rule 110 (op_a -> ADD pnExp2 .)
    ID              reduce using rule 110 (op_a -> ADD pnExp2 .)
    CTE_INT         reduce using rule 110 (op_a -> ADD pnExp2 .)
    CTE_FLOAT       reduce using rule 110 (op_a -> ADD pnExp2 .)
    MEDIA           reduce using rule 110 (op_a -> ADD pnExp2 .)
    MEDIANA         reduce using rule 110 (op_a -> ADD pnExp2 .)
    MODA            reduce using rule 110 (op_a -> ADD pnExp2 .)
    VARIANZA        reduce using rule 110 (op_a -> ADD pnExp2 .)
    CORRELACIONA    reduce using rule 110 (op_a -> ADD pnExp2 .)


state 276

    (111) op_a -> SUB pnExp2 .

    LPAREN          reduce using rule 111 (op_a -> SUB pnExp2 .)
    CTE_CH          reduce using rule 111 (op_a -> SUB pnExp2 .)
    CTE_STR         reduce using rule 111 (op_a -> SUB pnExp2 .)
    SUB             reduce using rule 111 (op_a -> SUB pnExp2 .)
    ID              reduce using rule 111 (op_a -> SUB pnExp2 .)
    CTE_INT         reduce using rule 111 (op_a -> SUB pnExp2 .)
    CTE_FLOAT       reduce using rule 111 (op_a -> SUB pnExp2 .)
    MEDIA           reduce using rule 111 (op_a -> SUB pnExp2 .)
    MEDIANA         reduce using rule 111 (op_a -> SUB pnExp2 .)
    MODA            reduce using rule 111 (op_a -> SUB pnExp2 .)
    VARIANZA        reduce using rule 111 (op_a -> SUB pnExp2 .)
    CORRELACIONA    reduce using rule 111 (op_a -> SUB pnExp2 .)


state 277

    (113) term -> op_a1 termino .

    ADD             reduce using rule 113 (term -> op_a1 termino .)
    SUB             reduce using rule 113 (term -> op_a1 termino .)
    LT              reduce using rule 113 (term -> op_a1 termino .)
    GT              reduce using rule 113 (term -> op_a1 termino .)
    LE              reduce using rule 113 (term -> op_a1 termino .)
    GE              reduce using rule 113 (term -> op_a1 termino .)
    NOT_EQUAL       reduce using rule 113 (term -> op_a1 termino .)
    EQUAL           reduce using rule 113 (term -> op_a1 termino .)
    AND             reduce using rule 113 (term -> op_a1 termino .)
    OR              reduce using rule 113 (term -> op_a1 termino .)
    ASSIGN          reduce using rule 113 (term -> op_a1 termino .)
    RPAREN          reduce using rule 113 (term -> op_a1 termino .)
    SEMICOLON       reduce using rule 113 (term -> op_a1 termino .)
    COMMA           reduce using rule 113 (term -> op_a1 termino .)
    RBRACK          reduce using rule 113 (term -> op_a1 termino .)
    HASTA           reduce using rule 113 (term -> op_a1 termino .)
    HACER           reduce using rule 113 (term -> op_a1 termino .)


state 278

    (115) op_a1 -> MUL pnExp3 .

    LPAREN          reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    CTE_CH          reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    CTE_STR         reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    SUB             reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    ID              reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    CTE_INT         reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    CTE_FLOAT       reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    MEDIA           reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    MEDIANA         reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    MODA            reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    VARIANZA        reduce using rule 115 (op_a1 -> MUL pnExp3 .)
    CORRELACIONA    reduce using rule 115 (op_a1 -> MUL pnExp3 .)


state 279

    (116) op_a1 -> DIV pnExp3 .

    LPAREN          reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    CTE_CH          reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    CTE_STR         reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    SUB             reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    ID              reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    CTE_INT         reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    CTE_FLOAT       reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    MEDIA           reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    MEDIANA         reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    MODA            reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    VARIANZA        reduce using rule 116 (op_a1 -> DIV pnExp3 .)
    CORRELACIONA    reduce using rule 116 (op_a1 -> DIV pnExp3 .)


state 280

    (78) funciones_especiales -> fe LPAREN ID pnExp1 . COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2

    COMMA           shift and go to state 296


state 281

    (73) condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 . HAZ bloque pnCiclos3

    HAZ             shift and go to state 297


state 282

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp . pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
    (169) pnCiclos5 -> .

    HASTA           reduce using rule 169 (pnCiclos5 -> .)

    pnCiclos5                      shift and go to state 298

state 283

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID . COMMA ID RPAREN SEMICOLON

    COMMA           shift and go to state 299


state 284

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA . CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    CTE_INT         shift and go to state 300


state 285

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca . COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    COMMA           shift and go to state 301


state 286

    (33) dim_dec1 -> LBRACK CTE_INT pnDimDec6 . RBRACK pn_8_decColumnas

    RBRACK          shift and go to state 302


state 287

    (58) llamada2 -> COMMA llamada1 .

    RPAREN          reduce using rule 58 (llamada2 -> COMMA llamada1 .)


state 288

    (35) dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray . pnArregloAcc RBRACK pnExp7 dim_index1
    (179) pnArregloAcc -> .

    RBRACK          reduce using rule 179 (pnArregloAcc -> .)

    pnArregloAcc                   shift and go to state 303

state 289

    (60) retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .

    ID              reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    REGRESA         reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    LEE             reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    ESCRIBE         reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    CARGA           reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    SI              reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    MIENTRAS        reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    DESDE           reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    VARIABLES       reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    HISTOGRAMA      reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    PLOTLINE        reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)
    RBRACE          reduce using rule 60 (retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON .)


state 290

    (61) lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 . pnSec5
    (161) pnSec5 -> .

    ID              reduce using rule 161 (pnSec5 -> .)
    REGRESA         reduce using rule 161 (pnSec5 -> .)
    LEE             reduce using rule 161 (pnSec5 -> .)
    ESCRIBE         reduce using rule 161 (pnSec5 -> .)
    CARGA           reduce using rule 161 (pnSec5 -> .)
    SI              reduce using rule 161 (pnSec5 -> .)
    MIENTRAS        reduce using rule 161 (pnSec5 -> .)
    DESDE           reduce using rule 161 (pnSec5 -> .)
    VARIABLES       reduce using rule 161 (pnSec5 -> .)
    HISTOGRAMA      reduce using rule 161 (pnSec5 -> .)
    PLOTLINE        reduce using rule 161 (pnSec5 -> .)
    RBRACE          reduce using rule 161 (pnSec5 -> .)

    pnSec5                         shift and go to state 304

state 291

    (62) escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .

    ID              reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    REGRESA         reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    LEE             reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    ESCRIBE         reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    CARGA           reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    SI              reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    MIENTRAS        reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    DESDE           reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    VARIABLES       reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    HISTOGRAMA      reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    PLOTLINE        reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)
    RBRACE          reduce using rule 62 (escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 .)


state 292

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr . COMMA ca COMMA ca RPAREN SEMICOLON pnCarga

    COMMA           shift and go to state 305


state 293

    (118) factor -> LPAREN pnExp6 exp RPAREN pnExp7 .

    MUL             reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    DIV             reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    ADD             reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    SUB             reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    LT              reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    GT              reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    LE              reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    GE              reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    NOT_EQUAL       reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    EQUAL           reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    AND             reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    OR              reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    ASSIGN          reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    RPAREN          reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    SEMICOLON       reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    COMMA           reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    RBRACK          reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    HASTA           reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)
    HACER           reduce using rule 118 (factor -> LPAREN pnExp6 exp RPAREN pnExp7 .)


state 294

    (70) decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque . sino pnCond2
    (71) sino -> . SINO pnCond3 bloque
    (72) sino -> . empty
    (122) empty -> .

    SINO            shift and go to state 307
    ID              reduce using rule 122 (empty -> .)
    REGRESA         reduce using rule 122 (empty -> .)
    LEE             reduce using rule 122 (empty -> .)
    ESCRIBE         reduce using rule 122 (empty -> .)
    CARGA           reduce using rule 122 (empty -> .)
    SI              reduce using rule 122 (empty -> .)
    MIENTRAS        reduce using rule 122 (empty -> .)
    DESDE           reduce using rule 122 (empty -> .)
    VARIABLES       reduce using rule 122 (empty -> .)
    HISTOGRAMA      reduce using rule 122 (empty -> .)
    PLOTLINE        reduce using rule 122 (empty -> .)
    RBRACE          reduce using rule 122 (empty -> .)

    sino                           shift and go to state 306
    empty                          shift and go to state 308

state 295

    (94) meg -> op_l pnExp10 mega_exp pnExp11 .

    ASSIGN          reduce using rule 94 (meg -> op_l pnExp10 mega_exp pnExp11 .)
    RPAREN          reduce using rule 94 (meg -> op_l pnExp10 mega_exp pnExp11 .)


state 296

    (78) funciones_especiales -> fe LPAREN ID pnExp1 COMMA . CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2

    CTE_INT         shift and go to state 309


state 297

    (73) condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ . bloque pnCiclos3
    (38) bloque -> . LBRACE est RBRACE

    LBRACE          shift and go to state 62

    bloque                         shift and go to state 310

state 298

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 . HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8

    HASTA           shift and go to state 311


state 299

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA . ID RPAREN SEMICOLON

    ID              shift and go to state 312


state 300

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT . pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (142) pnCteInt -> .

    COMMA           reduce using rule 142 (pnCteInt -> .)

    pnCteInt                       shift and go to state 313

state 301

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA . CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    CTE_INT         shift and go to state 314


state 302

    (33) dim_dec1 -> LBRACK CTE_INT pnDimDec6 RBRACK . pn_8_decColumnas
    (130) pn_8_decColumnas -> .

    COMMA           reduce using rule 130 (pn_8_decColumnas -> .)
    SEMICOLON       reduce using rule 130 (pn_8_decColumnas -> .)

    pn_8_decColumnas               shift and go to state 315

state 303

    (35) dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc . RBRACK pnExp7 dim_index1

    RBRACK          shift and go to state 316


state 304

    (61) lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .

    ID              reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    REGRESA         reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    LEE             reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    ESCRIBE         reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    CARGA           reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    SI              reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    MIENTRAS        reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    DESDE           reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    VARIABLES       reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    HISTOGRAMA      reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    PLOTLINE        reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)
    RBRACE          reduce using rule 61 (lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5 .)


state 305

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA . ca COMMA ca RPAREN SEMICOLON pnCarga
    (68) ca -> . ID pnExp1
    (69) ca -> . CTE_INT pnCteInt

    ID              shift and go to state 209
    CTE_INT         shift and go to state 208

    ca                             shift and go to state 317

state 306

    (70) decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino . pnCond2
    (163) pnCond2 -> .

    ID              reduce using rule 163 (pnCond2 -> .)
    REGRESA         reduce using rule 163 (pnCond2 -> .)
    LEE             reduce using rule 163 (pnCond2 -> .)
    ESCRIBE         reduce using rule 163 (pnCond2 -> .)
    CARGA           reduce using rule 163 (pnCond2 -> .)
    SI              reduce using rule 163 (pnCond2 -> .)
    MIENTRAS        reduce using rule 163 (pnCond2 -> .)
    DESDE           reduce using rule 163 (pnCond2 -> .)
    VARIABLES       reduce using rule 163 (pnCond2 -> .)
    HISTOGRAMA      reduce using rule 163 (pnCond2 -> .)
    PLOTLINE        reduce using rule 163 (pnCond2 -> .)
    RBRACE          reduce using rule 163 (pnCond2 -> .)

    pnCond2                        shift and go to state 318

state 307

    (71) sino -> SINO . pnCond3 bloque
    (164) pnCond3 -> .

    LBRACE          reduce using rule 164 (pnCond3 -> .)

    pnCond3                        shift and go to state 319

state 308

    (72) sino -> empty .

    ID              reduce using rule 72 (sino -> empty .)
    REGRESA         reduce using rule 72 (sino -> empty .)
    LEE             reduce using rule 72 (sino -> empty .)
    ESCRIBE         reduce using rule 72 (sino -> empty .)
    CARGA           reduce using rule 72 (sino -> empty .)
    SI              reduce using rule 72 (sino -> empty .)
    MIENTRAS        reduce using rule 72 (sino -> empty .)
    DESDE           reduce using rule 72 (sino -> empty .)
    VARIABLES       reduce using rule 72 (sino -> empty .)
    HISTOGRAMA      reduce using rule 72 (sino -> empty .)
    PLOTLINE        reduce using rule 72 (sino -> empty .)
    RBRACE          reduce using rule 72 (sino -> empty .)


state 309

    (78) funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT . pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (142) pnCteInt -> .

    COMMA           reduce using rule 142 (pnCteInt -> .)

    pnCteInt                       shift and go to state 320

state 310

    (73) condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque . pnCiclos3
    (167) pnCiclos3 -> .

    ID              reduce using rule 167 (pnCiclos3 -> .)
    REGRESA         reduce using rule 167 (pnCiclos3 -> .)
    LEE             reduce using rule 167 (pnCiclos3 -> .)
    ESCRIBE         reduce using rule 167 (pnCiclos3 -> .)
    CARGA           reduce using rule 167 (pnCiclos3 -> .)
    SI              reduce using rule 167 (pnCiclos3 -> .)
    MIENTRAS        reduce using rule 167 (pnCiclos3 -> .)
    DESDE           reduce using rule 167 (pnCiclos3 -> .)
    VARIABLES       reduce using rule 167 (pnCiclos3 -> .)
    HISTOGRAMA      reduce using rule 167 (pnCiclos3 -> .)
    PLOTLINE        reduce using rule 167 (pnCiclos3 -> .)
    RBRACE          reduce using rule 167 (pnCiclos3 -> .)

    pnCiclos3                      shift and go to state 321

state 311

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA . pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8
    (170) pnCiclos6 -> .

    LPAREN          reduce using rule 170 (pnCiclos6 -> .)
    CTE_CH          reduce using rule 170 (pnCiclos6 -> .)
    CTE_STR         reduce using rule 170 (pnCiclos6 -> .)
    SUB             reduce using rule 170 (pnCiclos6 -> .)
    ID              reduce using rule 170 (pnCiclos6 -> .)
    CTE_INT         reduce using rule 170 (pnCiclos6 -> .)
    CTE_FLOAT       reduce using rule 170 (pnCiclos6 -> .)
    MEDIA           reduce using rule 170 (pnCiclos6 -> .)
    MEDIANA         reduce using rule 170 (pnCiclos6 -> .)
    MODA            reduce using rule 170 (pnCiclos6 -> .)
    VARIANZA        reduce using rule 170 (pnCiclos6 -> .)
    CORRELACIONA    reduce using rule 170 (pnCiclos6 -> .)

    pnCiclos6                      shift and go to state 322

state 312

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 323


state 313

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt . COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    COMMA           shift and go to state 324


state 314

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT . pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (142) pnCteInt -> .

    RPAREN          reduce using rule 142 (pnCteInt -> .)

    pnCteInt                       shift and go to state 325

state 315

    (33) dim_dec1 -> LBRACK CTE_INT pnDimDec6 RBRACK pn_8_decColumnas .

    COMMA           reduce using rule 33 (dim_dec1 -> LBRACK CTE_INT pnDimDec6 RBRACK pn_8_decColumnas .)
    SEMICOLON       reduce using rule 33 (dim_dec1 -> LBRACK CTE_INT pnDimDec6 RBRACK pn_8_decColumnas .)


state 316

    (35) dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK . pnExp7 dim_index1
    (152) pnExp7 -> .

    LBRACK          reduce using rule 152 (pnExp7 -> .)
    ASSIGN          reduce using rule 152 (pnExp7 -> .)
    MUL             reduce using rule 152 (pnExp7 -> .)
    DIV             reduce using rule 152 (pnExp7 -> .)
    ADD             reduce using rule 152 (pnExp7 -> .)
    SUB             reduce using rule 152 (pnExp7 -> .)
    LT              reduce using rule 152 (pnExp7 -> .)
    GT              reduce using rule 152 (pnExp7 -> .)
    LE              reduce using rule 152 (pnExp7 -> .)
    GE              reduce using rule 152 (pnExp7 -> .)
    NOT_EQUAL       reduce using rule 152 (pnExp7 -> .)
    EQUAL           reduce using rule 152 (pnExp7 -> .)
    AND             reduce using rule 152 (pnExp7 -> .)
    OR              reduce using rule 152 (pnExp7 -> .)
    RPAREN          reduce using rule 152 (pnExp7 -> .)
    SEMICOLON       reduce using rule 152 (pnExp7 -> .)
    COMMA           reduce using rule 152 (pnExp7 -> .)
    RBRACK          reduce using rule 152 (pnExp7 -> .)
    HASTA           reduce using rule 152 (pnExp7 -> .)
    HACER           reduce using rule 152 (pnExp7 -> .)

    pnExp7                         shift and go to state 326

state 317

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca . COMMA ca RPAREN SEMICOLON pnCarga

    COMMA           shift and go to state 327


state 318

    (70) decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .

    ID              reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    REGRESA         reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    LEE             reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    ESCRIBE         reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    CARGA           reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    SI              reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    MIENTRAS        reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    DESDE           reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    VARIABLES       reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    HISTOGRAMA      reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    PLOTLINE        reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)
    RBRACE          reduce using rule 70 (decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2 .)


state 319

    (71) sino -> SINO pnCond3 . bloque
    (38) bloque -> . LBRACE est RBRACE

    LBRACE          shift and go to state 62

    bloque                         shift and go to state 328

state 320

    (78) funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt . COMMA CTE_INT pnCteInt RPAREN pnFunEsp2

    COMMA           shift and go to state 329


state 321

    (73) condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .

    ID              reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    REGRESA         reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    LEE             reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    ESCRIBE         reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    CARGA           reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    SI              reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    MIENTRAS        reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    DESDE           reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    VARIABLES       reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    HISTOGRAMA      reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    PLOTLINE        reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)
    RBRACE          reduce using rule 73 (condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3 .)


state 322

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 . exp pnCiclos7 HACER bloque pnCiclos8
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    variable                       shift and go to state 133
    exp                            shift and go to state 330
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 323

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 331


state 324

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA . CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1

    CTE_INT         shift and go to state 332


state 325

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt . RPAREN SEMICOLON pnFunEspVoid1

    RPAREN          shift and go to state 333


state 326

    (35) dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 . dim_index1
    (36) dim_index1 -> . LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc
    (37) dim_index1 -> . empty
    (122) empty -> .

    LBRACK          shift and go to state 334
    ASSIGN          reduce using rule 122 (empty -> .)
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    ADD             reduce using rule 122 (empty -> .)
    SUB             reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LE              reduce using rule 122 (empty -> .)
    GE              reduce using rule 122 (empty -> .)
    NOT_EQUAL       reduce using rule 122 (empty -> .)
    EQUAL           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    RBRACK          reduce using rule 122 (empty -> .)
    HASTA           reduce using rule 122 (empty -> .)
    HACER           reduce using rule 122 (empty -> .)

    dim_index1                     shift and go to state 335
    empty                          shift and go to state 336

state 327

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA . ca RPAREN SEMICOLON pnCarga
    (68) ca -> . ID pnExp1
    (69) ca -> . CTE_INT pnCteInt

    ID              shift and go to state 209
    CTE_INT         shift and go to state 208

    ca                             shift and go to state 337

state 328

    (71) sino -> SINO pnCond3 bloque .

    ID              reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    REGRESA         reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    LEE             reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    ESCRIBE         reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    CARGA           reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    SI              reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    MIENTRAS        reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    DESDE           reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    VARIABLES       reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    HISTOGRAMA      reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    PLOTLINE        reduce using rule 71 (sino -> SINO pnCond3 bloque .)
    RBRACE          reduce using rule 71 (sino -> SINO pnCond3 bloque .)


state 329

    (78) funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA . CTE_INT pnCteInt RPAREN pnFunEsp2

    CTE_INT         shift and go to state 338


state 330

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp . pnCiclos7 HACER bloque pnCiclos8
    (171) pnCiclos7 -> .

    HACER           reduce using rule 171 (pnCiclos7 -> .)

    pnCiclos7                      shift and go to state 339

state 331

    (75) funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .

    ID              reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    REGRESA         reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    LEE             reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    CARGA           reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    SI              reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    DESDE           reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    VARIABLES       reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    HISTOGRAMA      reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    PLOTLINE        reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 75 (funciones_especiales_void -> VARIABLES pnFunEsp1 LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON .)


state 332

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT . pnCteInt RPAREN SEMICOLON pnFunEspVoid1
    (142) pnCteInt -> .

    RPAREN          reduce using rule 142 (pnCteInt -> .)

    pnCteInt                       shift and go to state 340

state 333

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN . SEMICOLON pnFunEspVoid1

    SEMICOLON       shift and go to state 341


state 334

    (36) dim_index1 -> LBRACK . pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc
    (151) pnExp6 -> .

    LPAREN          reduce using rule 151 (pnExp6 -> .)
    CTE_CH          reduce using rule 151 (pnExp6 -> .)
    CTE_STR         reduce using rule 151 (pnExp6 -> .)
    SUB             reduce using rule 151 (pnExp6 -> .)
    ID              reduce using rule 151 (pnExp6 -> .)
    CTE_INT         reduce using rule 151 (pnExp6 -> .)
    CTE_FLOAT       reduce using rule 151 (pnExp6 -> .)
    MEDIA           reduce using rule 151 (pnExp6 -> .)
    MEDIANA         reduce using rule 151 (pnExp6 -> .)
    MODA            reduce using rule 151 (pnExp6 -> .)
    VARIANZA        reduce using rule 151 (pnExp6 -> .)
    CORRELACIONA    reduce using rule 151 (pnExp6 -> .)

    pnExp6                         shift and go to state 342

state 335

    (35) dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .

    ASSIGN          reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    MUL             reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    DIV             reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    ADD             reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    SUB             reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    LT              reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    GT              reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    LE              reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    GE              reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    NOT_EQUAL       reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    EQUAL           reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    AND             reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    OR              reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    RPAREN          reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    SEMICOLON       reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    COMMA           reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    RBRACK          reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    HASTA           reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)
    HACER           reduce using rule 35 (dim_index -> LBRACK pnDimAccess2 pnExp6 exp pnActivaArray pnArregloAcc RBRACK pnExp7 dim_index1 .)


state 336

    (37) dim_index1 -> empty .

    ASSIGN          reduce using rule 37 (dim_index1 -> empty .)
    MUL             reduce using rule 37 (dim_index1 -> empty .)
    DIV             reduce using rule 37 (dim_index1 -> empty .)
    ADD             reduce using rule 37 (dim_index1 -> empty .)
    SUB             reduce using rule 37 (dim_index1 -> empty .)
    LT              reduce using rule 37 (dim_index1 -> empty .)
    GT              reduce using rule 37 (dim_index1 -> empty .)
    LE              reduce using rule 37 (dim_index1 -> empty .)
    GE              reduce using rule 37 (dim_index1 -> empty .)
    NOT_EQUAL       reduce using rule 37 (dim_index1 -> empty .)
    EQUAL           reduce using rule 37 (dim_index1 -> empty .)
    AND             reduce using rule 37 (dim_index1 -> empty .)
    OR              reduce using rule 37 (dim_index1 -> empty .)
    RPAREN          reduce using rule 37 (dim_index1 -> empty .)
    SEMICOLON       reduce using rule 37 (dim_index1 -> empty .)
    COMMA           reduce using rule 37 (dim_index1 -> empty .)
    RBRACK          reduce using rule 37 (dim_index1 -> empty .)
    HASTA           reduce using rule 37 (dim_index1 -> empty .)
    HACER           reduce using rule 37 (dim_index1 -> empty .)


state 337

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca . RPAREN SEMICOLON pnCarga

    RPAREN          shift and go to state 343


state 338

    (78) funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT . pnCteInt RPAREN pnFunEsp2
    (142) pnCteInt -> .

    RPAREN          reduce using rule 142 (pnCteInt -> .)

    pnCteInt                       shift and go to state 344

state 339

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 . HACER bloque pnCiclos8

    HACER           shift and go to state 345


state 340

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt . RPAREN SEMICOLON pnFunEspVoid1

    RPAREN          shift and go to state 346


state 341

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON . pnFunEspVoid1
    (140) pnFunEspVoid1 -> .

    ID              reduce using rule 140 (pnFunEspVoid1 -> .)
    REGRESA         reduce using rule 140 (pnFunEspVoid1 -> .)
    LEE             reduce using rule 140 (pnFunEspVoid1 -> .)
    ESCRIBE         reduce using rule 140 (pnFunEspVoid1 -> .)
    CARGA           reduce using rule 140 (pnFunEspVoid1 -> .)
    SI              reduce using rule 140 (pnFunEspVoid1 -> .)
    MIENTRAS        reduce using rule 140 (pnFunEspVoid1 -> .)
    DESDE           reduce using rule 140 (pnFunEspVoid1 -> .)
    VARIABLES       reduce using rule 140 (pnFunEspVoid1 -> .)
    HISTOGRAMA      reduce using rule 140 (pnFunEspVoid1 -> .)
    PLOTLINE        reduce using rule 140 (pnFunEspVoid1 -> .)
    RBRACE          reduce using rule 140 (pnFunEspVoid1 -> .)

    pnFunEspVoid1                  shift and go to state 347

state 342

    (36) dim_index1 -> LBRACK pnExp6 . exp pnActivaArray RBRACK pnExp7 pnMatrizAcc
    (107) exp -> . termino pnExp4 exp1
    (112) termino -> . factor pnExp5 term
    (117) factor -> . var_cte
    (118) factor -> . LPAREN pnExp6 exp RPAREN pnExp7
    (119) factor -> . variable
    (120) factor -> . llamada
    (121) factor -> . funciones_especiales
    (84) var_cte -> . CTE_CH pnCteChar
    (85) var_cte -> . CTE_STR pnCteStr
    (86) var_cte -> . SUB pnNeg var_num
    (87) var_cte -> . var_num
    (52) variable -> . ID pnExp1 di
    (55) llamada -> . ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6_llamada
    (78) funciones_especiales -> . fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2
    (88) var_num -> . CTE_INT pnCteInt
    (89) var_num -> . CTE_FLOAT pnCteFloat
    (79) fe -> . MEDIA pnFunEsp1
    (80) fe -> . MEDIANA pnFunEsp1
    (81) fe -> . MODA pnFunEsp1
    (82) fe -> . VARIANZA pnFunEsp1
    (83) fe -> . CORRELACIONA pnFunEsp1

    LPAREN          shift and go to state 125
    CTE_CH          shift and go to state 136
    CTE_STR         shift and go to state 137
    SUB             shift and go to state 138
    ID              shift and go to state 140
    CTE_INT         shift and go to state 142
    CTE_FLOAT       shift and go to state 143
    MEDIA           shift and go to state 144
    MEDIANA         shift and go to state 145
    MODA            shift and go to state 146
    VARIANZA        shift and go to state 147
    CORRELACIONA    shift and go to state 148

    exp                            shift and go to state 348
    termino                        shift and go to state 130
    factor                         shift and go to state 131
    var_cte                        shift and go to state 132
    variable                       shift and go to state 133
    llamada                        shift and go to state 134
    funciones_especiales           shift and go to state 135
    var_num                        shift and go to state 139
    fe                             shift and go to state 141

state 343

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN . SEMICOLON pnCarga

    SEMICOLON       shift and go to state 349


state 344

    (78) funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt . RPAREN pnFunEsp2

    RPAREN          shift and go to state 350


state 345

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER . bloque pnCiclos8
    (38) bloque -> . LBRACE est RBRACE

    LBRACE          shift and go to state 62

    bloque                         shift and go to state 351

state 346

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN . SEMICOLON pnFunEspVoid1

    SEMICOLON       shift and go to state 352


state 347

    (77) funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .

    ID              reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    REGRESA         reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    LEE             reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    ESCRIBE         reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    CARGA           reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    SI              reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    MIENTRAS        reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    DESDE           reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    VARIABLES       reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    HISTOGRAMA      reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    PLOTLINE        reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    RBRACE          reduce using rule 77 (funciones_especiales_void -> PLOTLINE pnFunEsp1 LPAREN ca COMMA ca COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)


state 348

    (36) dim_index1 -> LBRACK pnExp6 exp . pnActivaArray RBRACK pnExp7 pnMatrizAcc
    (181) pnActivaArray -> .

    RBRACK          reduce using rule 181 (pnActivaArray -> .)

    pnActivaArray                  shift and go to state 353

state 349

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON . pnCarga
    (182) pnCarga -> .

    ID              reduce using rule 182 (pnCarga -> .)
    REGRESA         reduce using rule 182 (pnCarga -> .)
    LEE             reduce using rule 182 (pnCarga -> .)
    ESCRIBE         reduce using rule 182 (pnCarga -> .)
    CARGA           reduce using rule 182 (pnCarga -> .)
    SI              reduce using rule 182 (pnCarga -> .)
    MIENTRAS        reduce using rule 182 (pnCarga -> .)
    DESDE           reduce using rule 182 (pnCarga -> .)
    VARIABLES       reduce using rule 182 (pnCarga -> .)
    HISTOGRAMA      reduce using rule 182 (pnCarga -> .)
    PLOTLINE        reduce using rule 182 (pnCarga -> .)
    RBRACE          reduce using rule 182 (pnCarga -> .)

    pnCarga                        shift and go to state 354

state 350

    (78) funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN . pnFunEsp2
    (139) pnFunEsp2 -> .

    MUL             reduce using rule 139 (pnFunEsp2 -> .)
    DIV             reduce using rule 139 (pnFunEsp2 -> .)
    ADD             reduce using rule 139 (pnFunEsp2 -> .)
    SUB             reduce using rule 139 (pnFunEsp2 -> .)
    LT              reduce using rule 139 (pnFunEsp2 -> .)
    GT              reduce using rule 139 (pnFunEsp2 -> .)
    LE              reduce using rule 139 (pnFunEsp2 -> .)
    GE              reduce using rule 139 (pnFunEsp2 -> .)
    NOT_EQUAL       reduce using rule 139 (pnFunEsp2 -> .)
    EQUAL           reduce using rule 139 (pnFunEsp2 -> .)
    AND             reduce using rule 139 (pnFunEsp2 -> .)
    OR              reduce using rule 139 (pnFunEsp2 -> .)
    ASSIGN          reduce using rule 139 (pnFunEsp2 -> .)
    RPAREN          reduce using rule 139 (pnFunEsp2 -> .)
    SEMICOLON       reduce using rule 139 (pnFunEsp2 -> .)
    COMMA           reduce using rule 139 (pnFunEsp2 -> .)
    RBRACK          reduce using rule 139 (pnFunEsp2 -> .)
    HASTA           reduce using rule 139 (pnFunEsp2 -> .)
    HACER           reduce using rule 139 (pnFunEsp2 -> .)

    pnFunEsp2                      shift and go to state 355

state 351

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque . pnCiclos8
    (172) pnCiclos8 -> .

    ID              reduce using rule 172 (pnCiclos8 -> .)
    REGRESA         reduce using rule 172 (pnCiclos8 -> .)
    LEE             reduce using rule 172 (pnCiclos8 -> .)
    ESCRIBE         reduce using rule 172 (pnCiclos8 -> .)
    CARGA           reduce using rule 172 (pnCiclos8 -> .)
    SI              reduce using rule 172 (pnCiclos8 -> .)
    MIENTRAS        reduce using rule 172 (pnCiclos8 -> .)
    DESDE           reduce using rule 172 (pnCiclos8 -> .)
    VARIABLES       reduce using rule 172 (pnCiclos8 -> .)
    HISTOGRAMA      reduce using rule 172 (pnCiclos8 -> .)
    PLOTLINE        reduce using rule 172 (pnCiclos8 -> .)
    RBRACE          reduce using rule 172 (pnCiclos8 -> .)

    pnCiclos8                      shift and go to state 356

state 352

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON . pnFunEspVoid1
    (140) pnFunEspVoid1 -> .

    ID              reduce using rule 140 (pnFunEspVoid1 -> .)
    REGRESA         reduce using rule 140 (pnFunEspVoid1 -> .)
    LEE             reduce using rule 140 (pnFunEspVoid1 -> .)
    ESCRIBE         reduce using rule 140 (pnFunEspVoid1 -> .)
    CARGA           reduce using rule 140 (pnFunEspVoid1 -> .)
    SI              reduce using rule 140 (pnFunEspVoid1 -> .)
    MIENTRAS        reduce using rule 140 (pnFunEspVoid1 -> .)
    DESDE           reduce using rule 140 (pnFunEspVoid1 -> .)
    VARIABLES       reduce using rule 140 (pnFunEspVoid1 -> .)
    HISTOGRAMA      reduce using rule 140 (pnFunEspVoid1 -> .)
    PLOTLINE        reduce using rule 140 (pnFunEspVoid1 -> .)
    RBRACE          reduce using rule 140 (pnFunEspVoid1 -> .)

    pnFunEspVoid1                  shift and go to state 357

state 353

    (36) dim_index1 -> LBRACK pnExp6 exp pnActivaArray . RBRACK pnExp7 pnMatrizAcc

    RBRACK          shift and go to state 358


state 354

    (67) carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .

    ID              reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    REGRESA         reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    LEE             reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    ESCRIBE         reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    CARGA           reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    SI              reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    MIENTRAS        reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    DESDE           reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    VARIABLES       reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    HISTOGRAMA      reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    PLOTLINE        reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)
    RBRACE          reduce using rule 67 (carga_datos -> CARGA LPAREN ID pnExp1 COMMA CTE_STR pnCteStr COMMA ca COMMA ca RPAREN SEMICOLON pnCarga .)


state 355

    (78) funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .

    MUL             reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    DIV             reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    ADD             reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    SUB             reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    LT              reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    GT              reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    LE              reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    GE              reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    NOT_EQUAL       reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    EQUAL           reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    AND             reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    OR              reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    ASSIGN          reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    RPAREN          reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    SEMICOLON       reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    COMMA           reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    RBRACK          reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    HASTA           reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)
    HACER           reduce using rule 78 (funciones_especiales -> fe LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN pnFunEsp2 .)


state 356

    (74) no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .

    ID              reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    REGRESA         reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    LEE             reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    ESCRIBE         reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    CARGA           reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    SI              reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    MIENTRAS        reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    DESDE           reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    VARIABLES       reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    HISTOGRAMA      reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    PLOTLINE        reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)
    RBRACE          reduce using rule 74 (no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8 .)


state 357

    (76) funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .

    ID              reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    REGRESA         reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    LEE             reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    ESCRIBE         reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    CARGA           reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    SI              reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    MIENTRAS        reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    DESDE           reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    VARIABLES       reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    HISTOGRAMA      reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    PLOTLINE        reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)
    RBRACE          reduce using rule 76 (funciones_especiales_void -> HISTOGRAMA pnFunEsp1 LPAREN ID pnExp1 COMMA CTE_INT pnCteInt COMMA CTE_INT pnCteInt RPAREN SEMICOLON pnFunEspVoid1 .)


state 358

    (36) dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK . pnExp7 pnMatrizAcc
    (152) pnExp7 -> .

    ASSIGN          reduce using rule 152 (pnExp7 -> .)
    MUL             reduce using rule 152 (pnExp7 -> .)
    DIV             reduce using rule 152 (pnExp7 -> .)
    ADD             reduce using rule 152 (pnExp7 -> .)
    SUB             reduce using rule 152 (pnExp7 -> .)
    LT              reduce using rule 152 (pnExp7 -> .)
    GT              reduce using rule 152 (pnExp7 -> .)
    LE              reduce using rule 152 (pnExp7 -> .)
    GE              reduce using rule 152 (pnExp7 -> .)
    NOT_EQUAL       reduce using rule 152 (pnExp7 -> .)
    EQUAL           reduce using rule 152 (pnExp7 -> .)
    AND             reduce using rule 152 (pnExp7 -> .)
    OR              reduce using rule 152 (pnExp7 -> .)
    RPAREN          reduce using rule 152 (pnExp7 -> .)
    SEMICOLON       reduce using rule 152 (pnExp7 -> .)
    COMMA           reduce using rule 152 (pnExp7 -> .)
    RBRACK          reduce using rule 152 (pnExp7 -> .)
    HASTA           reduce using rule 152 (pnExp7 -> .)
    HACER           reduce using rule 152 (pnExp7 -> .)

    pnExp7                         shift and go to state 359

state 359

    (36) dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 . pnMatrizAcc
    (180) pnMatrizAcc -> .

    ASSIGN          reduce using rule 180 (pnMatrizAcc -> .)
    MUL             reduce using rule 180 (pnMatrizAcc -> .)
    DIV             reduce using rule 180 (pnMatrizAcc -> .)
    ADD             reduce using rule 180 (pnMatrizAcc -> .)
    SUB             reduce using rule 180 (pnMatrizAcc -> .)
    LT              reduce using rule 180 (pnMatrizAcc -> .)
    GT              reduce using rule 180 (pnMatrizAcc -> .)
    LE              reduce using rule 180 (pnMatrizAcc -> .)
    GE              reduce using rule 180 (pnMatrizAcc -> .)
    NOT_EQUAL       reduce using rule 180 (pnMatrizAcc -> .)
    EQUAL           reduce using rule 180 (pnMatrizAcc -> .)
    AND             reduce using rule 180 (pnMatrizAcc -> .)
    OR              reduce using rule 180 (pnMatrizAcc -> .)
    RPAREN          reduce using rule 180 (pnMatrizAcc -> .)
    SEMICOLON       reduce using rule 180 (pnMatrizAcc -> .)
    COMMA           reduce using rule 180 (pnMatrizAcc -> .)
    RBRACK          reduce using rule 180 (pnMatrizAcc -> .)
    HASTA           reduce using rule 180 (pnMatrizAcc -> .)
    HACER           reduce using rule 180 (pnMatrizAcc -> .)

    pnMatrizAcc                    shift and go to state 360

state 360

    (36) dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .

    ASSIGN          reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    MUL             reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    DIV             reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    ADD             reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    SUB             reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    LT              reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    GT              reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    LE              reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    GE              reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    NOT_EQUAL       reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    EQUAL           reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    AND             reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    OR              reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    RPAREN          reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    SEMICOLON       reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    COMMA           reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    RBRACK          reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    HASTA           reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)
    HACER           reduce using rule 36 (dim_index1 -> LBRACK pnExp6 exp pnActivaArray RBRACK pnExp7 pnMatrizAcc .)

