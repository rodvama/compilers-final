
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DISTRIBUCION DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TENDENCIA TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pn_4_params param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID pn_2_addVariable dd lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN asig\n    asig : llamada\n         | exp SEMICOLON\n    variable : ID di\n    di : dim_index\n       | empty\n    llamada :  ID LPAREN llamada1 RPAREN SEMICOLON\n    llamada1 : exp llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN SEMICOLONlectura : LEE LPAREN variable RPAREN SEMICOLONescritura : ESCRIBE LPAREN esc RPAREN SEMICOLONesc : esc1 esc2\n    esc1 : exp\n         | CTE_STR\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN ENTONCES bloque sino\n    sino : SINO bloque\n         | empty\n    condicional : MIENTRAS LPAREN expresion RPAREN HAZ bloqueno_condicional : DESDE variable ASSIGN exp HASTA exp HACER bloque\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : DISTRIBUCION\n        | TENDENCIA\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_INT\n            | CTE_FLOAT\n            | CTE_CH\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l mega_exp\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r exp\n       | empty\n    \n    op_r : LT\n         | GT\n         | LE\n         | GE\n         | NOT_EQUAL\n         | EQUAL\n    exp : termino exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD\n         | SUB\n    termino : factor term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL\n          | DIV\n    \n    factor : var_cte\n           | LPAREN exp RPAREN\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pn_3_addFunction : \n    \n    pn_4_params :\n    \n    pn_5_updateContParams :  \n    \n    pn_6_end :\n    '
    
_lr_action_items = {'HAZ':([177,],[216,]),'SUB':([72,99,100,103,112,114,116,118,119,125,126,127,130,131,141,167,170,195,212,215,223,224,226,252,260,269,],[-124,-55,-54,-56,-119,157,-123,-122,-124,-121,-89,-124,-91,-90,-122,-114,-116,-124,-115,-120,-37,-35,-57,-36,-82,-83,]),'VOID':([10,],[25,]),'EQUAL':([99,100,103,112,114,116,118,119,125,126,127,130,131,132,158,161,167,170,195,210,212,215,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,183,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'CARGA':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[55,-47,-42,-43,-48,55,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'CHAR':([6,10,38,46,50,203,],[19,19,19,-26,19,19,]),'SINO':([92,244,],[-38,255,]),'CORRELACIONA':([90,91,93,98,101,102,106,124,139,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,242,],[113,113,113,113,113,113,113,113,113,-113,-112,113,-98,113,-99,-117,-118,113,113,-104,-107,-106,113,-108,-103,-105,113,113,113,113,113,]),'CTE_CH':([90,91,93,98,101,102,106,124,139,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,242,],[130,130,130,130,130,130,130,130,130,-113,-112,130,-98,130,-99,-117,-118,130,130,-104,-107,-106,130,-108,-103,-105,130,130,130,130,130,]),'MUL':([72,99,100,103,112,116,118,119,125,126,127,130,131,141,195,215,223,224,226,252,260,269,],[-124,-55,-54,-56,-119,-123,-122,168,-121,-89,-124,-91,-90,-122,-124,-120,-37,-35,-57,-36,-82,-83,]),'TENDENCIA':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[57,-47,-42,-43,-48,57,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'DIV':([72,99,100,103,112,116,118,119,125,126,127,130,131,141,195,215,223,224,226,252,260,269,],[-124,-55,-54,-56,-119,-123,-122,169,-121,-89,-124,-91,-90,-122,-124,-120,-37,-35,-57,-36,-82,-83,]),'RBRACE':([48,59,60,62,64,65,67,68,70,73,75,77,79,80,92,95,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[-124,92,-47,-42,-43,-40,-48,-124,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'NOT_EQUAL':([99,100,103,112,114,116,118,119,125,126,127,130,131,132,158,161,167,170,195,210,212,215,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,179,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'RPAREN':([34,50,82,83,84,96,99,100,102,103,107,112,114,115,116,118,119,122,125,126,127,128,130,131,132,133,134,135,136,137,144,145,146,147,149,150,158,161,163,166,167,170,172,173,176,180,186,189,191,195,197,198,199,204,205,210,211,212,213,215,217,220,223,224,226,227,230,232,246,247,249,250,252,260,263,265,266,269,],[41,-124,-16,108,-17,-124,-55,-54,-124,-56,-128,-119,-124,-124,-123,-122,-124,-124,-121,-89,-124,177,-91,-90,-124,187,188,-124,-67,-66,196,-59,-124,200,202,-124,-109,-111,-95,-97,-114,-116,-92,-94,215,-100,-102,-65,-69,-124,-58,-124,-61,-18,-20,-110,-96,-115,-93,-120,-101,-68,-37,-35,-57,-60,243,-19,-72,-71,260,261,-36,-82,-88,268,269,-83,]),'SEMICOLON':([3,39,40,47,51,53,54,72,85,87,99,100,103,109,110,112,114,116,118,119,125,126,127,130,131,141,142,152,154,158,161,167,170,187,188,195,196,200,210,212,215,223,224,226,234,243,252,260,261,268,269,],[4,46,-126,-124,-124,-28,-29,-124,-27,-31,-55,-54,-56,-30,-124,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-122,194,-32,-34,-109,-111,-114,-116,218,219,-124,226,228,-110,-115,-120,-37,-35,-57,-33,254,-36,-82,267,270,-83,]),'VARIABLES':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,201,218,219,226,228,236,237,238,244,254,256,257,259,262,264,267,270,],[66,-47,-42,-43,-48,66,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,229,-62,-64,-57,-63,229,229,-76,-124,-79,-73,-75,229,-77,-74,-78,-70,]),'GE':([99,100,103,112,114,116,118,119,125,126,127,130,131,132,158,161,167,170,195,210,212,215,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,181,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'DATAFRAME':([6,38,46,],[18,18,-26,]),'ESCRIBE':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[61,-47,-42,-43,-48,61,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'MODA':([90,91,93,98,101,102,106,124,139,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,242,],[117,117,117,117,117,117,117,117,117,-113,-112,117,-98,117,-99,-117,-118,117,117,-104,-107,-106,117,-108,-103,-105,117,117,117,117,117,]),'LT':([99,100,103,112,114,116,118,119,125,126,127,130,131,132,158,161,167,170,195,210,212,215,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,184,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'COMMA':([40,47,51,53,54,99,100,103,107,110,111,112,114,116,118,119,125,126,127,130,131,135,136,137,138,146,148,150,152,154,158,161,167,170,195,208,209,210,212,214,215,221,223,224,226,234,245,246,247,248,252,260,263,269,],[-126,-124,86,-28,-29,-55,-54,-56,-128,-124,155,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,190,-67,-66,192,198,201,203,-32,-34,-109,-111,-114,-116,-124,235,236,-110,-115,237,-120,239,-37,-35,-57,-33,258,-72,-71,259,-36,-82,-88,-83,]),'DISTRIBUCION':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[63,-47,-42,-43,-48,63,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'MEDIANA':([90,91,93,98,101,102,106,124,139,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,242,],[120,120,120,120,120,120,120,120,120,-113,-112,120,-98,120,-99,-117,-118,120,120,-104,-107,-106,120,-108,-103,-105,120,120,120,120,120,]),'ASSIGN':([71,72,96,97,99,100,103,112,114,115,116,118,119,122,125,126,127,130,131,132,158,161,163,166,167,170,180,186,195,210,211,212,215,217,223,224,226,252,260,269,],[98,-124,-124,139,-55,-54,-56,-119,-124,-124,-123,-122,-124,174,-121,-89,-124,-91,-90,-124,-109,-111,-95,-97,-114,-116,-100,-102,-124,-110,-96,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'$end':([1,23,35,49,92,],[0,-130,-1,-6,-38,]),'HACER':([99,100,103,112,114,116,118,119,125,126,127,130,131,158,161,167,170,195,210,212,215,223,224,226,240,252,260,269,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,251,-36,-82,-83,]),'GT':([99,100,103,112,114,116,118,119,125,126,127,130,131,132,158,161,167,170,195,210,212,215,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,178,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'STRING':([6,38,46,],[15,15,-26,]),'MEDIA':([90,91,93,98,101,102,106,124,139,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,242,],[121,121,121,121,121,121,121,121,121,-113,-112,121,-98,121,-99,-117,-118,121,121,-104,-107,-106,121,-108,-103,-105,121,121,121,121,121,]),'REGRESA':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[58,-47,-42,-43,-48,58,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'RBRACK':([88,99,100,103,112,114,116,118,119,125,126,127,130,131,143,158,161,167,170,195,207,210,212,215,223,224,226,241,252,253,260,269,],[110,-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,195,-109,-111,-114,-116,-124,234,-110,-115,-120,-37,-35,-57,252,-36,263,-82,-83,]),'HASTA':([99,100,103,112,114,116,118,119,125,126,127,130,131,158,161,167,170,193,195,210,212,215,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-109,-111,-114,-116,222,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'MIENTRAS':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[56,-47,-42,-43,-48,56,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'ADD':([72,99,100,103,112,114,116,118,119,125,126,127,130,131,141,167,170,195,212,215,223,224,226,252,260,269,],[-124,-55,-54,-56,-119,159,-123,-122,-124,-121,-89,-124,-91,-90,-122,-114,-116,-124,-115,-120,-37,-35,-57,-36,-82,-83,]),'LE':([99,100,103,112,114,116,118,119,125,126,127,130,131,132,158,161,167,170,195,210,212,215,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,185,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'DESDE':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[69,-47,-42,-43,-48,69,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'LPAREN':([22,37,42,55,56,57,58,61,63,66,72,74,76,78,90,91,93,98,101,102,106,113,117,120,121,123,124,127,129,139,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,242,],[34,-127,50,89,90,-81,91,93,-80,94,102,104,105,106,124,124,124,124,124,124,124,156,-86,-85,-84,175,124,102,-87,124,-113,-112,124,-98,124,-99,-117,-118,124,124,-104,-107,-106,124,-108,-103,-105,124,124,124,124,124,]),'VAR':([4,108,151,],[6,-129,6,]),'CTE_INT':([52,90,91,93,98,101,102,106,124,139,153,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,235,242,258,],[88,126,126,126,126,126,126,126,126,126,207,-113,-112,126,-98,126,-99,-117,-118,126,126,-104,-107,-106,126,-108,-103,-105,126,126,126,126,246,126,246,]),'ID':([2,14,19,21,24,25,26,28,31,32,33,36,48,60,62,64,67,68,69,70,73,75,77,79,80,81,86,89,90,91,92,93,94,98,101,102,104,105,106,124,139,140,141,156,157,159,160,162,164,165,168,169,171,174,175,178,179,181,182,183,184,185,190,192,194,198,218,219,222,225,226,228,235,238,239,242,244,254,256,257,258,262,264,267,270,],[3,-125,-125,-125,-15,-125,37,-22,-23,40,-21,-14,72,-47,-42,-43,-48,72,96,-50,-49,-41,-44,-46,-45,107,40,111,127,127,-38,127,138,72,127,127,96,148,127,127,127,-51,-52,209,-113,-112,127,-98,127,-99,-117,-118,127,127,214,-104,-107,-106,127,-108,-103,-105,127,221,-53,127,-62,-64,127,127,-57,-63,247,-76,250,127,-124,-79,-73,-75,247,-77,-74,-78,-70,]),'FUNCION':([4,5,7,8,11,16,38,43,44,45,46,92,233,],[-124,10,-2,-3,10,-7,-124,-8,-9,-10,-26,-38,-13,]),'AND':([99,100,103,112,114,115,116,118,119,125,126,127,130,131,132,158,161,167,170,180,186,195,210,212,215,217,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,162,-123,-122,-124,-121,-89,-124,-91,-90,-124,-109,-111,-114,-116,-100,-102,-124,-110,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'LBRACE':([7,8,16,38,41,43,44,45,46,108,151,206,216,231,251,255,],[-2,-3,-7,-124,48,-8,-9,-10,-26,-129,-124,48,48,48,48,48,]),'LEE':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[74,-47,-42,-43,-48,74,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'VARIANZA':([90,91,93,98,101,102,106,124,139,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,242,],[129,129,129,129,129,129,129,129,129,-113,-112,129,-98,129,-99,-117,-118,129,129,-104,-107,-106,129,-108,-103,-105,129,129,129,129,129,]),'CTE_STR':([93,155,190,],[136,208,136,]),'INT':([6,10,38,46,50,203,],[21,21,21,-26,21,21,]),'FLOAT':([6,10,38,46,50,203,],[14,14,14,-26,14,14,]),'CTE_FLOAT':([90,91,93,98,101,102,106,124,139,157,159,160,162,164,165,168,169,171,174,178,179,181,182,183,184,185,190,198,222,225,242,],[131,131,131,131,131,131,131,131,131,-113,-112,131,-98,131,-99,-117,-118,131,131,-104,-107,-106,131,-108,-103,-105,131,131,131,131,131,]),'LBRACK':([40,47,72,96,110,127,195,229,],[-126,52,101,101,153,101,225,242,]),'ENTONCES':([202,],[231,]),'TWO_DOTS':([13,14,15,17,18,19,20,21,28,29,30,31,33,],[-12,-125,-125,-11,-125,-125,32,-125,-22,-25,-24,-23,-21,]),'SI':([48,60,62,64,67,68,70,73,75,77,79,80,92,140,141,194,218,219,226,228,238,244,254,256,257,262,264,267,270,],[78,-47,-42,-43,-48,78,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'PROGRAMA':([0,],[2,]),'OR':([99,100,103,112,114,115,116,118,119,125,126,127,130,131,132,158,161,167,170,180,186,195,210,212,215,217,223,224,226,252,260,269,],[-55,-54,-56,-119,-124,165,-123,-122,-124,-121,-89,-124,-91,-90,-124,-109,-111,-114,-116,-100,-102,-124,-110,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'PRINCIPAL':([4,5,7,8,9,11,12,16,27,38,43,44,45,46,92,233,],[-124,-124,-2,-3,22,-124,-5,-7,-4,-124,-8,-9,-10,-26,-38,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pn_3_addFunction':([37,],[42,]),'expresion1':([122,],[172,]),'tipo_simple':([6,10,38,50,203,],[17,24,17,81,81,]),'ca':([235,258,],[245,265,]),'exp1':([114,],[158,]),'di':([72,96,127,],[100,100,100,]),'pn_1_setCurrentType':([14,15,18,19,21,25,],[28,29,30,31,33,36,]),'var_cte':([90,91,93,98,101,102,106,124,139,160,164,171,174,182,190,198,222,225,242,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'op_r':([132,],[182,]),'termino':([90,91,93,98,101,102,106,124,139,160,164,171,174,182,190,198,222,225,242,],[114,114,114,114,114,114,114,114,114,114,114,212,114,114,114,114,114,114,114,]),'llamada2':([146,],[197,]),'bloque':([41,206,216,231,251,255,],[49,233,238,244,262,264,]),'llamada1':([102,198,],[144,227,]),'principal':([9,],[23,]),'super_exp':([90,106,164,174,],[115,115,115,115,]),'funciones_especiales':([90,91,93,98,101,102,106,124,139,160,164,171,174,182,190,198,222,225,242,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'dim_index':([72,96,127,],[99,99,99,]),'est':([48,68,],[59,95,]),'asig':([98,],[140,]),'decision':([48,68,],[60,60,]),'lista_ids':([32,],[38,]),'param':([50,203,],[82,232,]),'dim_index1':([195,],[224,]),'fev':([48,68,],[76,76,]),'llamada':([48,68,90,91,93,98,101,102,106,124,139,160,164,171,174,182,190,198,222,225,242,],[62,62,118,118,118,141,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'esc':([93,190,],[134,220,]),'factor':([90,91,93,98,101,102,106,124,139,160,164,171,174,182,190,198,222,225,242,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'var':([4,151,],[7,7,]),'pn_5_updateContParams':([108,],[151,]),'v_exp':([201,236,237,259,],[230,248,249,266,]),'dim_dec':([47,],[53,]),'condicional':([48,68,],[67,67,]),'empty':([4,5,11,38,47,48,50,51,68,72,96,102,110,114,115,119,122,127,132,135,146,150,151,195,198,244,],[8,12,12,45,54,65,84,87,65,103,103,145,154,161,166,170,173,103,186,191,199,205,8,223,145,257,]),'funcion':([5,11,],[11,11,]),'op_l':([115,],[164,]),'expresion':([90,106,174,],[128,149,213,]),'func1':([5,11,],[9,27,]),'pn_6_end':([23,],[35,]),'var1':([4,151,],[5,206,]),'param1':([150,],[204,]),'var3':([38,],[43,]),'var2':([6,38,],[16,44,]),'dim_dec1':([110,],[152,]),'dd':([47,],[51,]),'mega_exp':([90,106,164,174,],[122,122,211,122,]),'tipo_fun':([10,],[26,]),'retorno':([48,68,],[64,64,]),'estatutos':([48,68,],[68,68,]),'fe':([90,91,93,98,101,102,106,124,139,160,164,171,174,182,190,198,222,225,242,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'funciones_especiales_void':([48,68,],[70,70,]),'variable':([48,68,69,90,91,93,98,101,102,104,106,124,139,160,164,171,174,182,190,198,222,225,242,],[71,71,97,125,125,125,125,125,125,147,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'lista':([32,86,],[39,109,]),'op_a':([114,],[160,]),'no_condicional':([48,68,],[73,73,]),'tipo_compuesto':([6,38,],[13,13,]),'esc1':([93,190,],[135,135,]),'term':([119,],[167,]),'asignacion':([48,68,],[75,75,]),'sino':([244,],[256,]),'type':([6,38,],[20,20,]),'sp':([132,],[180,]),'pn_2_addVariable':([40,],[47,]),'lectura':([48,68,],[77,77,]),'pn_4_params':([107,],[150,]),'programa':([0,],[1,]),'exp':([90,91,93,98,101,102,106,124,139,160,164,174,182,190,198,222,225,242,],[132,133,137,142,143,146,132,176,193,210,132,132,217,137,146,240,241,253,]),'meg':([115,],[163,]),'parametros':([50,],[83,]),'op_a1':([119,],[171,]),'lista1':([51,],[85,]),'carga_datos':([48,68,],[79,79,]),'esc2':([135,],[189,]),'escritura':([48,68,],[80,80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end','programa',7,'p_programa','parser.py',35),
  ('var1 -> var','var1',1,'p_var1','parser.py',40),
  ('var1 -> empty','var1',1,'p_var1','parser.py',41),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',47),
  ('func1 -> empty','func1',1,'p_func1','parser.py',48),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','parser.py',53),
  ('var -> VAR var2','var',2,'p_var','parser.py',58),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',62),
  ('var3 -> var2','var3',1,'p_var3','parser.py',67),
  ('var3 -> empty','var3',1,'p_var3','parser.py',68),
  ('type -> tipo_simple','type',1,'p_type','parser.py',74),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',75),
  ('funcion -> FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque','funcion',10,'p_funcion','parser.py',80),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',85),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',86),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',92),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',93),
  ('param -> tipo_simple ID pn_4_params param1','param',4,'p_param','parser.py',98),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',103),
  ('param1 -> empty','param1',1,'p_param1','parser.py',104),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',110),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',111),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',112),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',117),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',118),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',123),
  ('lista -> ID pn_2_addVariable dd lista1','lista',4,'p_lista','parser.py',126),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',130),
  ('dd -> empty','dd',1,'p_dd','parser.py',131),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',136),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',137),
  ('dim_dec -> LBRACK CTE_INT RBRACK dim_dec1','dim_dec',4,'p_dim_dec','parser.py',142),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK','dim_dec1',3,'p_dim_dec1','parser.py',146),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',147),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',151),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',155),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',156),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',162),
  ('est -> estatutos est','est',2,'p_est','parser.py',167),
  ('est -> empty','est',1,'p_est','parser.py',168),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',174),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',175),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',176),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',177),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',178),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',179),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',180),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',181),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',182),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',183),
  ('asignacion -> variable ASSIGN asig','asignacion',3,'p_asignacion','parser.py',190),
  ('asig -> llamada','asig',1,'p_asig','parser.py',194),
  ('asig -> exp SEMICOLON','asig',2,'p_asig','parser.py',195),
  ('variable -> ID di','variable',2,'p_variable','parser.py',198),
  ('di -> dim_index','di',1,'p_di','parser.py',202),
  ('di -> empty','di',1,'p_di','parser.py',203),
  ('llamada -> ID LPAREN llamada1 RPAREN SEMICOLON','llamada',5,'p_llamada','parser.py',207),
  ('llamada1 -> exp llamada2','llamada1',2,'p_llamada1','parser.py',211),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',212),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',217),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',218),
  ('retorno -> REGRESA LPAREN exp RPAREN SEMICOLON','retorno',5,'p_retorno','parser.py',222),
  ('lectura -> LEE LPAREN variable RPAREN SEMICOLON','lectura',5,'p_lectura','parser.py',225),
  ('escritura -> ESCRIBE LPAREN esc RPAREN SEMICOLON','escritura',5,'p_escritura','parser.py',228),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',231),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',235),
  ('esc1 -> CTE_STR','esc1',1,'p_esc1','parser.py',236),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',240),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',241),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',245),
  ('ca -> ID','ca',1,'p_ca','parser.py',249),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',250),
  ('decision -> SI LPAREN expresion RPAREN ENTONCES bloque sino','decision',7,'p_decision','parser.py',255),
  ('sino -> SINO bloque','sino',2,'p_sino','parser.py',259),
  ('sino -> empty','sino',1,'p_sino','parser.py',260),
  ('condicional -> MIENTRAS LPAREN expresion RPAREN HAZ bloque','condicional',6,'p_condicional','parser.py',264),
  ('no_condicional -> DESDE variable ASSIGN exp HASTA exp HACER bloque','no_condicional',8,'p_no_condicional','parser.py',267),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',272),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',273),
  ('fev -> DISTRIBUCION','fev',1,'p_fev','parser.py',277),
  ('fev -> TENDENCIA','fev',1,'p_fev','parser.py',278),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',283),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',284),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',288),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',289),
  ('fe -> MODA','fe',1,'p_fe','parser.py',290),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',291),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',294),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','parser.py',301),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','parser.py',302),
  ('var_cte -> CTE_CH','var_cte',1,'p_var_cte','parser.py',303),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',309),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',313),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',314),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',318),
  ('meg -> op_l mega_exp','meg',2,'p_meg','parser.py',322),
  ('meg -> empty','meg',1,'p_meg','parser.py',323),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',327),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',328),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',332),
  ('sp -> op_r exp','sp',2,'p_sp','parser.py',336),
  ('sp -> empty','sp',1,'p_sp','parser.py',337),
  ('op_r -> LT','op_r',1,'p_op_r','parser.py',341),
  ('op_r -> GT','op_r',1,'p_op_r','parser.py',342),
  ('op_r -> LE','op_r',1,'p_op_r','parser.py',343),
  ('op_r -> GE','op_r',1,'p_op_r','parser.py',344),
  ('op_r -> NOT_EQUAL','op_r',1,'p_op_r','parser.py',345),
  ('op_r -> EQUAL','op_r',1,'p_op_r','parser.py',346),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',350),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',354),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',355),
  ('op_a -> ADD','op_a',1,'p_op_a','parser.py',359),
  ('op_a -> SUB','op_a',1,'p_op_a','parser.py',360),
  ('termino -> factor term','termino',2,'p_termino','parser.py',364),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',368),
  ('term -> empty','term',1,'p_term','parser.py',369),
  ('op_a1 -> MUL','op_a1',1,'p_op_a1','parser.py',373),
  ('op_a1 -> DIV','op_a1',1,'p_op_a1','parser.py',374),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',379),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','parser.py',380),
  ('factor -> variable','factor',1,'p_factor','parser.py',381),
  ('factor -> llamada','factor',1,'p_factor','parser.py',382),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',383),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',388),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',405),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',412),
  ('pn_3_addFunction -> <empty>','pn_3_addFunction',0,'p_pn_3_addFunction','parser.py',424),
  ('pn_4_params -> <empty>','pn_4_params',0,'p_pn_4_params','parser.py',437),
  ('pn_5_updateContParams -> <empty>','pn_5_updateContParams',0,'p_pn_5_updateContParams','parser.py',450),
  ('pn_6_end -> <empty>','pn_6_end',0,'p_pn_6_end','parser.py',459),
]
