
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DISTRIBUCION DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TENDENCIA TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 func1 principal\n    var1 : var\n         | empty\n    \n    func1 : funcion\n          | empty\n    principal : PRINCIPAL LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID LPAREN parametros RPAREN var1 bloque\n    tipo_fun : VOID\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT\n                | FLOAT\n                | CHAR\n    \n    tipo_compuesto : DATAFRAME\n                   | STRING\n    lista_ids : lista SEMICOLONlista : ID dd lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN asig\n    asig : llamada\n         | exp SEMICOLON\n    variable : ID di\n    di : dim_index\n       | empty\n    llamada :  ID LPAREN llamada1 RPAREN SEMICOLON\n    llamada1 : exp llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN SEMICOLONlectura : LEE LPAREN lista_ids RPAREN SEMICOLONescritura : ESCRIBE LPAREN esc RPAREN SEMICOLONesc : esc1 esc2\n    esc1 : exp\n         | CTE_STR\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN ENTONCES bloque sino\n    sino : SINO bloque\n         | empty\n    condicional : MIENTRAS LPAREN expresion RPAREN HAZ bloqueno_condicional : DESDE variable ASSIGN exp HASTA exp HACER bloque\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : DISTRIBUCION\n        | TENDENCIA\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_INT\n            | CTE_FLOAT\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l mega_exp\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r exp\n       | empty\n    \n    op_r : LT\n         | GT\n         | LE\n         | GE\n         | NOT_EQUAL\n         | EQUAL\n    exp : termino exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD\n         | SUB\n    termino : factor term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL\n          | DIV\n    \n    factor : var_cte\n           | LPAREN exp RPAREN\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :'
    
_lr_action_items = {'HAZ':([171,],[206,]),'SUB':([70,93,94,97,109,111,113,115,116,122,123,124,127,137,161,164,189,202,205,213,214,216,239,247,256,],[-123,-55,-54,-56,-118,151,-122,-121,-123,-120,-89,-123,-90,-121,-113,-115,-123,-114,-119,-37,-35,-57,-36,-82,-83,]),'VOID':([10,],[25,]),'EQUAL':([93,94,97,109,111,113,115,116,122,123,124,127,128,152,155,161,164,189,200,202,205,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,177,-108,-110,-113,-115,-123,-109,-114,-119,-37,-35,-57,-36,-82,-83,]),'CARGA':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[53,-47,-42,-43,-48,53,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'CHAR':([6,10,30,34,38,101,],[19,19,19,19,-26,19,]),'SINO':([86,231,],[-38,242,]),'CORRELACIONA':([84,85,87,92,95,96,100,121,135,151,153,154,156,158,159,162,163,165,168,172,173,175,176,177,178,179,184,192,212,215,229,],[110,110,110,110,110,110,110,110,110,-112,-111,110,-97,110,-98,-116,-117,110,110,-103,-106,-105,110,-107,-102,-104,110,110,110,110,110,]),'MUL':([70,93,94,97,109,113,115,116,122,123,124,127,137,189,205,213,214,216,239,247,256,],[-123,-55,-54,-56,-118,-122,-121,162,-120,-89,-123,-90,-121,-123,-119,-37,-35,-57,-36,-82,-83,]),'TENDENCIA':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[55,-47,-42,-43,-48,55,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'DIV':([70,93,94,97,109,113,115,116,122,123,124,127,137,189,205,213,214,216,239,247,256,],[-123,-55,-54,-56,-118,-122,-121,163,-120,-89,-123,-90,-121,-123,-119,-37,-35,-57,-36,-82,-83,]),'RBRACE':([43,57,58,60,62,63,65,66,68,71,73,75,77,78,86,89,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[-123,86,-47,-42,-43,-40,-48,-123,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'NOT_EQUAL':([93,94,97,109,111,113,115,116,122,123,124,127,128,152,155,161,164,189,200,202,205,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,173,-108,-110,-113,-115,-123,-109,-114,-119,-37,-35,-57,-36,-82,-83,]),'RPAREN':([28,34,38,46,47,48,79,93,94,96,97,102,103,109,111,112,113,115,116,119,122,123,124,125,127,128,129,130,131,132,133,140,141,142,143,145,146,152,155,157,160,161,164,166,167,170,174,180,183,185,189,191,192,193,200,201,202,203,205,207,210,213,214,216,217,220,233,234,236,237,239,247,250,252,253,256,],[33,-123,-26,-16,80,-17,-123,-55,-54,-123,-56,-18,-20,-118,-123,-123,-122,-121,-123,-123,-120,-89,-123,171,-90,-123,181,182,-123,-67,-66,190,-59,-123,194,196,-19,-108,-110,-94,-96,-113,-115,-91,-93,205,-99,-101,-65,-69,-123,-58,-123,-61,-109,-95,-114,-92,-119,-100,-68,-37,-35,-57,-60,230,-72,-71,247,248,-36,-82,-88,255,256,-83,]),'SEMICOLON':([3,31,32,39,41,42,49,51,70,81,82,93,94,97,105,107,109,111,113,115,116,122,123,124,127,137,138,152,155,161,164,181,182,189,190,194,197,200,202,205,213,214,216,230,239,247,248,255,256,],[4,38,-123,-123,-28,-29,-27,-31,-123,-30,-123,-55,-54,-56,-32,-34,-118,-123,-122,-121,-123,-120,-89,-123,-90,-121,188,-108,-110,-113,-115,208,209,-123,216,218,-33,-109,-114,-119,-37,-35,-57,241,-36,-82,254,257,-83,]),'VARIABLES':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,195,208,209,216,218,223,224,225,231,241,243,244,246,249,251,254,257,],[64,-47,-42,-43,-48,64,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,219,-62,-64,-57,-63,219,219,-76,-123,-79,-73,-75,219,-77,-74,-78,-70,]),'GE':([93,94,97,109,111,113,115,116,122,123,124,127,128,152,155,161,164,189,200,202,205,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,175,-108,-110,-113,-115,-123,-109,-114,-119,-37,-35,-57,-36,-82,-83,]),'DATAFRAME':([6,30,38,],[18,18,-26,]),'ESCRIBE':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[59,-47,-42,-43,-48,59,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'MODA':([84,85,87,92,95,96,100,121,135,151,153,154,156,158,159,162,163,165,168,172,173,175,176,177,178,179,184,192,212,215,229,],[114,114,114,114,114,114,114,114,114,-112,-111,114,-97,114,-98,-116,-117,114,114,-103,-106,-105,114,-107,-102,-104,114,114,114,114,114,]),'LT':([93,94,97,109,111,113,115,116,122,123,124,127,128,152,155,161,164,189,200,202,205,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,178,-108,-110,-113,-115,-123,-109,-114,-119,-37,-35,-57,-36,-82,-83,]),'COMMA':([32,39,41,42,79,82,93,94,97,105,107,108,109,111,113,115,116,122,123,124,127,131,132,133,134,142,144,152,155,161,164,189,197,198,199,200,202,204,205,211,213,214,216,232,233,234,235,239,247,250,256,],[-123,50,-28,-29,101,-123,-55,-54,-56,-32,-34,149,-118,-123,-122,-121,-123,-120,-89,-123,-90,184,-67,-66,186,192,195,-108,-110,-113,-115,-123,-33,222,223,-109,-114,224,-119,226,-37,-35,-57,245,-72,-71,246,-36,-82,-88,-83,]),'DISTRIBUCION':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[61,-47,-42,-43,-48,61,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'MEDIANA':([84,85,87,92,95,96,100,121,135,151,153,154,156,158,159,162,163,165,168,172,173,175,176,177,178,179,184,192,212,215,229,],[117,117,117,117,117,117,117,117,117,-112,-111,117,-97,117,-98,-116,-117,117,117,-103,-106,-105,117,-107,-102,-104,117,117,117,117,117,]),'ASSIGN':([69,70,90,91,93,94,97,109,111,112,113,115,116,119,122,123,124,127,128,152,155,157,160,161,164,174,180,189,200,201,202,205,207,213,214,216,239,247,256,],[92,-123,-123,135,-55,-54,-56,-118,-123,-123,-122,-121,-123,168,-120,-89,-123,-90,-123,-108,-110,-94,-96,-113,-115,-99,-101,-123,-109,-95,-114,-119,-100,-37,-35,-57,-36,-82,-83,]),'$end':([1,23,44,86,],[0,-1,-6,-38,]),'HACER':([93,94,97,109,111,113,115,116,122,123,124,127,152,155,161,164,189,200,202,205,213,214,216,227,239,247,256,],[-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,-108,-110,-113,-115,-123,-109,-114,-119,-37,-35,-57,238,-36,-82,-83,]),'GT':([93,94,97,109,111,113,115,116,122,123,124,127,128,152,155,161,164,189,200,202,205,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,172,-108,-110,-113,-115,-123,-109,-114,-119,-37,-35,-57,-36,-82,-83,]),'STRING':([6,30,38,],[15,15,-26,]),'MEDIA':([84,85,87,92,95,96,100,121,135,151,153,154,156,158,159,162,163,165,168,172,173,175,176,177,178,179,184,192,212,215,229,],[118,118,118,118,118,118,118,118,118,-112,-111,118,-97,118,-98,-116,-117,118,118,-103,-106,-105,118,-107,-102,-104,118,118,118,118,118,]),'REGRESA':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[56,-47,-42,-43,-48,56,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'RBRACK':([52,93,94,97,109,111,113,115,116,122,123,124,127,139,148,152,155,161,164,189,200,202,205,213,214,216,228,239,240,247,256,],[82,-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,189,197,-108,-110,-113,-115,-123,-109,-114,-119,-37,-35,-57,239,-36,250,-82,-83,]),'HASTA':([93,94,97,109,111,113,115,116,122,123,124,127,152,155,161,164,187,189,200,202,205,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,-108,-110,-113,-115,212,-123,-109,-114,-119,-37,-35,-57,-36,-82,-83,]),'MIENTRAS':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[54,-47,-42,-43,-48,54,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'ADD':([70,93,94,97,109,111,113,115,116,122,123,124,127,137,161,164,189,202,205,213,214,216,239,247,256,],[-123,-55,-54,-56,-118,153,-122,-121,-123,-120,-89,-123,-90,-121,-113,-115,-123,-114,-119,-37,-35,-57,-36,-82,-83,]),'LE':([93,94,97,109,111,113,115,116,122,123,124,127,128,152,155,161,164,189,200,202,205,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,-122,-121,-123,-120,-89,-123,-90,179,-108,-110,-113,-115,-123,-109,-114,-119,-37,-35,-57,-36,-82,-83,]),'DESDE':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[67,-47,-42,-43,-48,67,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'LPAREN':([22,29,53,54,55,56,59,61,64,70,72,74,76,84,85,87,92,95,96,100,110,114,117,118,120,121,124,126,135,151,153,154,156,158,159,162,163,165,168,172,173,175,176,177,178,179,184,192,212,215,229,],[28,34,83,84,-81,85,87,-80,88,96,98,99,100,121,121,121,121,121,121,121,150,-86,-85,-84,169,121,96,-87,121,-112,-111,121,-97,121,-98,-116,-117,121,121,-103,-106,-105,121,-107,-102,-104,121,121,121,121,121,]),'VAR':([4,80,],[6,6,]),'CTE_INT':([40,84,85,87,92,95,96,100,106,121,135,151,153,154,156,158,159,162,163,165,168,172,173,175,176,177,178,179,184,192,212,215,222,229,245,],[52,123,123,123,123,123,123,123,148,123,123,-112,-111,123,-97,123,-98,-116,-117,123,123,-103,-106,-105,123,-107,-102,-104,123,123,123,123,233,123,233,]),'ID':([2,14,19,21,24,25,26,27,43,45,50,58,60,62,65,66,67,68,71,73,75,77,78,83,84,85,86,87,88,92,95,96,98,99,100,121,135,136,137,150,151,153,154,156,158,159,162,163,165,168,169,172,173,175,176,177,178,179,184,186,188,192,208,209,212,215,216,218,222,225,226,229,231,241,243,244,245,249,251,254,257,],[3,-22,-23,-21,-15,-14,29,32,70,79,32,-47,-42,-43,-48,70,90,-50,-49,-41,-44,-46,-45,108,124,124,-38,124,134,70,124,124,32,144,124,124,124,-51,-52,199,-112,-111,124,-97,124,-98,-116,-117,124,124,204,-103,-106,-105,124,-107,-102,-104,124,211,-53,124,-62,-64,124,124,-57,-63,234,-76,237,124,-123,-79,-73,-75,234,-77,-74,-78,-70,]),'FUNCION':([4,5,7,8,16,30,35,36,37,38,],[-123,10,-2,-3,-7,-123,-8,-9,-10,-26,]),'AND':([93,94,97,109,111,112,113,115,116,122,123,124,127,128,152,155,161,164,174,180,189,200,202,205,207,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,156,-122,-121,-123,-120,-89,-123,-90,-123,-108,-110,-113,-115,-99,-101,-123,-109,-114,-119,-100,-37,-35,-57,-36,-82,-83,]),'LBRACE':([7,8,16,30,33,35,36,37,38,80,104,206,221,238,242,],[-2,-3,-7,-123,43,-8,-9,-10,-26,-123,43,43,43,43,43,]),'LEE':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[72,-47,-42,-43,-48,72,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'VARIANZA':([84,85,87,92,95,96,100,121,135,151,153,154,156,158,159,162,163,165,168,172,173,175,176,177,178,179,184,192,212,215,229,],[126,126,126,126,126,126,126,126,126,-112,-111,126,-97,126,-98,-116,-117,126,126,-103,-106,-105,126,-107,-102,-104,126,126,126,126,126,]),'CTE_STR':([87,149,184,],[132,198,132,]),'INT':([6,10,30,34,38,101,],[21,21,21,21,-26,21,]),'FLOAT':([6,10,30,34,38,101,],[14,14,14,14,-26,14,]),'CTE_FLOAT':([84,85,87,92,95,96,100,121,135,151,153,154,156,158,159,162,163,165,168,172,173,175,176,177,178,179,184,192,212,215,229,],[127,127,127,127,127,127,127,127,127,-112,-111,127,-97,127,-98,-116,-117,127,127,-103,-106,-105,127,-107,-102,-104,127,127,127,127,127,]),'LBRACK':([32,70,82,90,124,189,219,],[40,95,106,95,95,215,229,]),'ENTONCES':([196,],[221,]),'TWO_DOTS':([13,14,15,17,18,19,20,21,],[-12,-22,-25,-11,-24,-23,27,-21,]),'SI':([43,58,60,62,65,66,68,71,73,75,77,78,86,136,137,188,208,209,216,218,225,231,241,243,244,249,251,254,257,],[76,-47,-42,-43,-48,76,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-123,-79,-73,-75,-77,-74,-78,-70,]),'PROGRAMA':([0,],[2,]),'OR':([93,94,97,109,111,112,113,115,116,122,123,124,127,128,152,155,161,164,174,180,189,200,202,205,207,213,214,216,239,247,256,],[-55,-54,-56,-118,-123,159,-122,-121,-123,-120,-89,-123,-90,-123,-108,-110,-113,-115,-99,-101,-123,-109,-114,-119,-100,-37,-35,-57,-36,-82,-83,]),'PRINCIPAL':([4,5,7,8,9,11,12,16,30,35,36,37,38,86,147,],[-123,-123,-2,-3,22,-4,-5,-7,-123,-8,-9,-10,-26,-38,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion1':([119,],[166,]),'tipo_simple':([6,10,30,34,101,],[17,24,17,45,45,]),'ca':([222,245,],[232,252,]),'exp1':([111,],[152,]),'di':([70,90,124,],[94,94,94,]),'meg':([112,],[157,]),'var_cte':([84,85,87,92,95,96,100,121,135,154,158,165,168,176,184,192,212,215,229,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'op_r':([128,],[176,]),'termino':([84,85,87,92,95,96,100,121,135,154,158,165,168,176,184,192,212,215,229,],[111,111,111,111,111,111,111,111,111,111,111,202,111,111,111,111,111,111,111,]),'llamada2':([142,],[191,]),'bloque':([33,104,206,221,238,242,],[44,147,225,231,249,251,]),'llamada1':([96,192,],[140,217,]),'principal':([9,],[23,]),'super_exp':([84,100,158,168,],[112,112,112,112,]),'funciones_especiales':([84,85,87,92,95,96,100,121,135,154,158,165,168,176,184,192,212,215,229,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'dim_index':([70,90,124,],[93,93,93,]),'est':([43,66,],[57,89,]),'asig':([92,],[136,]),'decision':([43,66,],[58,58,]),'lista_ids':([27,98,],[30,143,]),'param':([34,101,],[46,146,]),'fev':([43,66,],[74,74,]),'llamada':([43,66,84,85,87,92,95,96,100,121,135,154,158,165,168,176,184,192,212,215,229,],[60,60,115,115,115,137,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'esc':([87,184,],[130,210,]),'factor':([84,85,87,92,95,96,100,121,135,154,158,165,168,176,184,192,212,215,229,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'var':([4,80,],[7,7,]),'dim_index1':([189,],[214,]),'v_exp':([195,223,224,246,],[220,235,236,253,]),'dim_dec':([32,],[41,]),'condicional':([43,66,],[65,65,]),'empty':([4,5,30,32,34,39,43,66,70,79,80,82,90,96,111,112,116,119,124,128,131,142,189,192,231,],[8,12,37,42,48,51,63,63,97,103,8,107,97,141,155,160,164,167,97,180,185,193,213,141,244,]),'funcion':([5,],[11,]),'op_l':([112,],[158,]),'expresion':([84,100,168,],[125,145,203,]),'func1':([5,],[9,]),'var1':([4,80,],[5,104,]),'exp':([84,85,87,92,95,96,100,121,135,154,158,168,176,184,192,212,215,229,],[128,129,133,138,139,142,128,170,187,200,128,128,207,133,142,227,228,240,]),'var3':([30,],[35,]),'var2':([6,30,],[16,36,]),'dim_dec1':([82,],[105,]),'dd':([32,],[39,]),'mega_exp':([84,100,158,168,],[119,119,201,119,]),'tipo_fun':([10,],[26,]),'retorno':([43,66,],[62,62,]),'estatutos':([43,66,],[66,66,]),'fe':([84,85,87,92,95,96,100,121,135,154,158,165,168,176,184,192,212,215,229,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'funciones_especiales_void':([43,66,],[68,68,]),'variable':([43,66,67,84,85,87,92,95,96,100,121,135,154,158,165,168,176,184,192,212,215,229,],[69,69,91,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'lista':([27,50,98,],[31,81,31,]),'op_a':([111,],[154,]),'no_condicional':([43,66,],[71,71,]),'tipo_compuesto':([6,30,],[13,13,]),'esc1':([87,184,],[131,131,]),'term':([116,],[161,]),'asignacion':([43,66,],[73,73,]),'sino':([231,],[243,]),'type':([6,30,],[20,20,]),'sp':([128,],[174,]),'lectura':([43,66,],[75,75,]),'esc2':([131,],[183,]),'programa':([0,],[1,]),'param1':([79,],[102,]),'parametros':([34,],[47,]),'op_a1':([116,],[165,]),'lista1':([39,],[49,]),'carga_datos':([43,66,],[77,77,]),'escritura':([43,66,],[78,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 func1 principal','programa',6,'p_programa','parser.py',23),
  ('var1 -> var','var1',1,'p_var1','parser.py',28),
  ('var1 -> empty','var1',1,'p_var1','parser.py',29),
  ('func1 -> funcion','func1',1,'p_func1','parser.py',35),
  ('func1 -> empty','func1',1,'p_func1','parser.py',36),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','parser.py',41),
  ('var -> VAR var2','var',2,'p_var','parser.py',46),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',50),
  ('var3 -> var2','var3',1,'p_var3','parser.py',55),
  ('var3 -> empty','var3',1,'p_var3','parser.py',56),
  ('type -> tipo_simple','type',1,'p_type','parser.py',62),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',63),
  ('funcion -> FUNCION tipo_fun ID LPAREN parametros RPAREN var1 bloque','funcion',8,'p_funcion','parser.py',68),
  ('tipo_fun -> VOID','tipo_fun',1,'p_tipo_fun','parser.py',73),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',74),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',80),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',81),
  ('param -> tipo_simple ID param1','param',3,'p_param','parser.py',86),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',91),
  ('param1 -> empty','param1',1,'p_param1','parser.py',92),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','parser.py',98),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','parser.py',99),
  ('tipo_simple -> CHAR','tipo_simple',1,'p_tipo_simple','parser.py',100),
  ('tipo_compuesto -> DATAFRAME','tipo_compuesto',1,'p_tipo_compuesto','parser.py',105),
  ('tipo_compuesto -> STRING','tipo_compuesto',1,'p_tipo_compuesto','parser.py',106),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',111),
  ('lista -> ID dd lista1','lista',3,'p_lista','parser.py',114),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',118),
  ('dd -> empty','dd',1,'p_dd','parser.py',119),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',124),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',125),
  ('dim_dec -> LBRACK CTE_INT RBRACK dim_dec1','dim_dec',4,'p_dim_dec','parser.py',130),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK','dim_dec1',3,'p_dim_dec1','parser.py',134),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',135),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',139),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',143),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',144),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',150),
  ('est -> estatutos est','est',2,'p_est','parser.py',154),
  ('est -> empty','est',1,'p_est','parser.py',155),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',160),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',161),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',162),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',163),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',164),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',165),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',166),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',167),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',168),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',169),
  ('asignacion -> variable ASSIGN asig','asignacion',3,'p_asignacion','parser.py',176),
  ('asig -> llamada','asig',1,'p_asig','parser.py',180),
  ('asig -> exp SEMICOLON','asig',2,'p_asig','parser.py',181),
  ('variable -> ID di','variable',2,'p_variable','parser.py',184),
  ('di -> dim_index','di',1,'p_di','parser.py',188),
  ('di -> empty','di',1,'p_di','parser.py',189),
  ('llamada -> ID LPAREN llamada1 RPAREN SEMICOLON','llamada',5,'p_llamada','parser.py',193),
  ('llamada1 -> exp llamada2','llamada1',2,'p_llamada1','parser.py',197),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',198),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',203),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',204),
  ('retorno -> REGRESA LPAREN exp RPAREN SEMICOLON','retorno',5,'p_retorno','parser.py',208),
  ('lectura -> LEE LPAREN lista_ids RPAREN SEMICOLON','lectura',5,'p_lectura','parser.py',211),
  ('escritura -> ESCRIBE LPAREN esc RPAREN SEMICOLON','escritura',5,'p_escritura','parser.py',214),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',217),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',221),
  ('esc1 -> CTE_STR','esc1',1,'p_esc1','parser.py',222),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',226),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',227),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',231),
  ('ca -> ID','ca',1,'p_ca','parser.py',235),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',236),
  ('decision -> SI LPAREN expresion RPAREN ENTONCES bloque sino','decision',7,'p_decision','parser.py',241),
  ('sino -> SINO bloque','sino',2,'p_sino','parser.py',245),
  ('sino -> empty','sino',1,'p_sino','parser.py',246),
  ('condicional -> MIENTRAS LPAREN expresion RPAREN HAZ bloque','condicional',6,'p_condicional','parser.py',250),
  ('no_condicional -> DESDE variable ASSIGN exp HASTA exp HACER bloque','no_condicional',8,'p_no_condicional','parser.py',253),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',258),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',259),
  ('fev -> DISTRIBUCION','fev',1,'p_fev','parser.py',263),
  ('fev -> TENDENCIA','fev',1,'p_fev','parser.py',264),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',269),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',270),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',274),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',275),
  ('fe -> MODA','fe',1,'p_fe','parser.py',276),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',277),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',280),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','parser.py',287),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','parser.py',288),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',294),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',298),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',299),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',303),
  ('meg -> op_l mega_exp','meg',2,'p_meg','parser.py',307),
  ('meg -> empty','meg',1,'p_meg','parser.py',308),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',312),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',313),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',317),
  ('sp -> op_r exp','sp',2,'p_sp','parser.py',321),
  ('sp -> empty','sp',1,'p_sp','parser.py',322),
  ('op_r -> LT','op_r',1,'p_op_r','parser.py',326),
  ('op_r -> GT','op_r',1,'p_op_r','parser.py',327),
  ('op_r -> LE','op_r',1,'p_op_r','parser.py',328),
  ('op_r -> GE','op_r',1,'p_op_r','parser.py',329),
  ('op_r -> NOT_EQUAL','op_r',1,'p_op_r','parser.py',330),
  ('op_r -> EQUAL','op_r',1,'p_op_r','parser.py',331),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',335),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',339),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',340),
  ('op_a -> ADD','op_a',1,'p_op_a','parser.py',344),
  ('op_a -> SUB','op_a',1,'p_op_a','parser.py',345),
  ('termino -> factor term','termino',2,'p_termino','parser.py',349),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',353),
  ('term -> empty','term',1,'p_term','parser.py',354),
  ('op_a1 -> MUL','op_a1',1,'p_op_a1','parser.py',358),
  ('op_a1 -> DIV','op_a1',1,'p_op_a1','parser.py',359),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',364),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','parser.py',365),
  ('factor -> variable','factor',1,'p_factor','parser.py',366),
  ('factor -> llamada','factor',1,'p_factor','parser.py',367),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',368),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',373),
]
