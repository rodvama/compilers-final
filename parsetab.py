
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PLOTHIST PLOTLINE PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL pnPrincipal2 LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pnFunDec_2_3 param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID dd pn_2_addVariable lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK pn_8_decColumnas\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN pnSec1 exp SEMICOLON pnSec2variable : ID pnExp1 di\n    di : dim_index\n       | empty\n    llamada :  ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6\n    llamada1 : exp pnFunCall_3 llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLONlectura : LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5escritura : ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5 esc : esc1 esc2\n    esc1 : exp pnSec4 \n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2\n    sino : SINO pnCond3 bloque\n         | empty\n    condicional : MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3no_condicional : DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : PLOTHIST\n        | PLOTLINE\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_CH pnCteChar\n            | CTE_STR pnCteStr\n            | SUB pnNeg var_num\n            | var_num\n    \n    var_num : CTE_INT pnCteInt\n            | CTE_FLOAT pnCteFloat\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l pnExp10 mega_exp pnExp11\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r  exp pnExp9\n       | empty\n    \n    op_r : LT pnExp8\n         | GT pnExp8\n         | LE pnExp8\n         | GE pnExp8\n         | NOT_EQUAL pnExp8\n         | EQUAL pnExp8\n    exp : termino pnExp4 exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD pnExp2\n         | SUB pnExp2\n    termino : factor pnExp5 term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL pnExp3\n          | DIV pnExp3\n    \n    factor : var_cte\n           | LPAREN pnExp6 exp RPAREN pnExp7\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pnGOTOprincipal : \n    \n    pnPrincipal2 :\n    \n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pnFunDec1 : \n    \n    pnFunDec_2_3 :\n    \n    pnFunDec4 :  \n    \n    pnFunDec7 :\n    \n    pn_7_decRenglones :\n    \n    pn_8_decColumnas : \n    \n    pnFunCall_1_2 : \n    \n    pnFunCall_3 :\n    \n    pnFunCall_5_6 : \n    \n    pnNeg :\n    \n    pnCteInt :\n    \n    pnCteFloat :\n    \n    pnCteChar :\n    \n    pnCteStr :\n    \n    pnExp1 : \n    \n    pnExp2 : \n    \n    pnExp3 : \n    \n    pnExp4 : \n    \n    pnExp5 : \n    \n    pnExp6 : \n    \n    pnExp7 : \n    \n    pnExp8 : \n    \n    pnExp9 : \n    \n    pnExp10 : \n    \n    pnExp11 : \n    \n    pnSec1 : \n    \n    pnSec2 : \n    \n    pnSec3 : \n    \n    pnSec4 : \n    \n    pnSec5 : \n    \n    pnCond1 :\n    \n    pnCond2 :\n    \n    pnCond3 :\n    \n    pnCiclos1 :  \n    \n    pnCiclos2 : \n    \n    pnCiclos3 : \n    \n    pnCiclos4 : \n    \n    pnCiclos5 : \n    \n    pnCiclos6 :\n    \n    pnCiclos7 :\n    \n    pnCiclos8 :\n    \n    pnRetorno :\n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,29,59,98,],[0,-1,-6,-38,]),'ID':([2,14,15,16,23,24,25,26,32,33,34,40,56,60,64,68,70,71,72,73,74,75,76,77,78,79,88,98,100,106,107,109,110,111,115,116,120,121,122,123,125,149,170,173,176,178,179,181,183,184,185,186,187,188,194,195,199,200,205,206,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,247,248,250,252,256,257,259,265,266,268,269,274,276,279,280,281,286,293,296,297,298,300,303,304,308,311,312,313,315,318,321,322,],[3,-127,-127,-127,37,-21,-22,-23,39,-127,-15,-14,37,81,94,81,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-165,-38,-154,124,140,151,152,153,140,140,140,140,151,140,-148,140,140,140,-152,-98,-99,140,-150,-150,-150,-150,-150,-150,239,240,-154,243,-155,-137,140,140,-103,-104,-105,-106,-107,-108,140,-144,-144,140,-145,-145,140,-51,-55,140,140,-157,-158,282,-112,-113,-117,-118,292,140,-60,-158,-62,-124,-76,-61,282,-160,-72,-164,-167,-70,-73,140,-75,-71,-67,-169,-74,]),'SEMICOLON':([3,36,37,45,46,47,51,55,57,58,65,66,96,97,102,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,158,159,189,190,191,192,196,197,204,206,208,209,210,211,228,230,233,235,238,248,253,254,255,260,264,267,275,285,295,301,305,314,316,],[4,44,-124,-128,-28,-29,-124,-27,-31,-133,-30,-124,-32,-34,-124,-52,-53,-54,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-134,205,-124,-124,-86,-87,-90,-91,-33,-137,-124,-170,256,257,-109,-111,-114,-116,-88,-55,-35,-37,279,-149,-110,-115,293,-120,-36,-79,313,318,-80,]),'VAR':([4,93,112,],[8,-131,8,]),'FUNCION':([4,5,6,7,9,10,20,35,41,42,43,44,98,202,246,],[-124,-125,-2,-3,22,-7,22,-124,-8,-9,-10,-26,-38,-132,-13,]),'PRINCIPAL':([4,5,6,7,9,10,19,20,21,31,35,41,42,43,44,98,202,246,],[-124,-125,-2,-3,-124,-7,30,-124,-5,-4,-124,-8,-9,-10,-26,-38,-132,-13,]),'LBRACE':([6,7,10,35,41,42,43,44,53,93,112,154,261,290,299,309,320,],[-2,-3,-7,-124,-8,-9,-10,-26,60,-131,-124,60,60,60,-161,60,60,]),'INT':([8,22,35,44,54,156,],[14,14,14,-26,14,14,]),'FLOAT':([8,22,35,44,54,156,],[15,15,15,-26,15,15,]),'CHAR':([8,22,35,44,54,156,],[16,16,16,-26,16,16,]),'DATAFRAME':([8,35,44,],[17,17,-26,]),'STRING':([8,35,44,],[18,18,-26,]),'TWO_DOTS':([11,12,13,14,15,16,17,18,24,25,26,27,28,],[23,-11,-12,-127,-127,-127,-127,-127,-21,-22,-23,-24,-25,]),'VOID':([22,],[33,]),'LPAREN':([30,38,39,50,81,82,83,84,85,86,87,89,90,91,92,100,101,103,104,105,107,108,115,116,120,121,123,125,140,141,142,145,146,147,148,149,170,173,176,178,179,181,183,184,185,186,187,188,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-126,49,-129,54,-135,-156,-156,-156,106,107,-162,110,111,-77,-78,-154,116,121,122,123,125,149,125,125,125,125,125,-148,-135,194,195,-81,-82,-83,-84,125,125,125,-152,-98,-99,125,-150,-150,-150,-150,-150,-150,-154,125,125,-103,-104,-105,-106,-107,-108,125,-144,-144,125,-145,-145,125,125,125,-112,-113,-117,-118,125,-167,125,]),'LBRACK':([37,58,66,81,102,140,151,208,245,],[48,-133,95,-143,120,-143,-143,252,276,]),'COMMA':([37,45,46,47,51,58,66,94,96,97,102,113,117,118,119,124,130,131,132,133,134,135,136,137,139,140,143,144,152,153,158,161,167,168,189,190,191,192,196,197,204,206,207,208,215,216,228,230,233,235,238,239,240,243,248,253,254,260,264,267,282,283,284,285,289,295,301,306,316,],[-124,-128,-28,-29,56,-133,-124,-130,-32,-34,-124,156,-52,-53,-54,169,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,200,201,-134,-136,213,-157,-124,-124,-86,-87,-90,-91,-33,-137,250,-124,-64,259,-109,-111,-114,-116,-88,270,271,274,-55,-35,-37,-149,-110,-115,-68,297,-69,-120,302,-36,-79,-85,-80,]),'CTE_INT':([48,95,100,107,115,116,120,121,123,125,138,149,170,173,176,178,179,181,183,184,185,186,187,188,193,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,259,265,266,268,269,276,297,304,312,],[52,114,-154,143,143,143,143,143,143,-148,-138,143,143,143,-152,-98,-99,143,-150,-150,-150,-150,-150,-150,143,-154,143,143,-103,-104,-105,-106,-107,-108,143,-144,-144,143,-145,-145,143,143,143,284,-112,-113,-117,-118,143,284,-167,143,]),'RPAREN':([49,54,61,62,63,94,102,113,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,137,139,140,143,144,151,155,157,160,161,162,164,165,166,167,168,172,174,175,177,180,182,189,190,191,192,196,197,198,203,206,207,208,212,214,215,217,219,221,228,230,233,235,238,244,248,249,250,251,253,254,258,260,262,263,264,267,277,282,284,285,287,288,292,295,301,306,307,310,316,],[53,-124,93,-16,-17,-130,-124,-124,-124,-52,-53,-54,171,-124,-124,-124,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-143,-18,-20,206,-136,-57,209,210,211,-124,-157,-92,-94,-95,-97,-100,-102,-124,-124,-86,-87,-90,-91,241,-19,-137,-124,-124,-63,-66,-64,260,-93,-151,-109,-111,-114,-116,-88,275,-55,-56,-124,-59,-35,-37,-65,-149,-153,-101,-110,-115,-58,-68,-69,-120,-96,301,305,-36,-79,-85,314,316,-80,]),'RBRACK':([52,102,114,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,163,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,278,285,294,295,301,316,],[58,-124,158,-52,-53,-54,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,208,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,295,-120,306,-36,-79,-80,]),'RBRACE':([60,67,68,69,70,71,72,73,74,75,76,77,78,79,98,99,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[-124,98,-124,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-39,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'REGRESA':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[82,82,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'LEE':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[83,83,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'ESCRIBE':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[84,84,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'CARGA':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[85,85,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'SI':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[86,86,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'MIENTRAS':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[87,87,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'DESDE':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[88,88,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'VARIABLES':([60,68,70,71,72,73,74,75,76,77,78,79,98,201,205,206,247,248,256,257,270,271,279,280,281,286,293,296,298,300,302,303,308,311,313,315,318,321,322,],[89,89,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,245,-155,-137,-51,-55,-157,-158,245,245,-60,-158,-62,-124,-76,-61,-160,-72,245,-164,-70,-73,-75,-71,-67,-169,-74,]),'PLOTHIST':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[91,91,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'PLOTLINE':([60,68,70,71,72,73,74,75,76,77,78,79,98,205,206,247,248,256,257,279,280,281,286,293,296,298,300,303,308,311,313,315,318,321,322,],[92,92,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-155,-137,-51,-55,-157,-158,-60,-158,-62,-124,-76,-61,-160,-72,-164,-70,-73,-75,-71,-67,-169,-74,]),'ASSIGN':([80,81,102,117,118,119,127,128,129,130,131,132,133,134,135,136,137,139,140,143,144,150,151,175,177,180,182,189,190,191,192,196,197,206,208,221,228,230,233,235,238,248,253,254,260,262,263,264,267,285,287,295,301,316,],[100,-143,-124,-52,-53,-54,173,-124,-124,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,199,-143,-95,-97,-100,-102,-124,-124,-86,-87,-90,-91,-137,-124,-151,-109,-111,-114,-116,-88,-55,-35,-37,-149,-153,-101,-110,-115,-120,-96,-36,-79,-80,]),'SINO':([98,286,],[-38,299,]),'CTE_CH':([100,107,115,116,120,121,123,125,149,170,173,176,178,179,181,183,184,185,186,187,188,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-154,136,136,136,136,136,136,-148,136,136,136,-152,-98,-99,136,-150,-150,-150,-150,-150,-150,-154,136,136,-103,-104,-105,-106,-107,-108,136,-144,-144,136,-145,-145,136,136,136,-112,-113,-117,-118,136,-167,136,]),'CTE_STR':([100,107,115,116,120,121,123,125,149,169,170,173,176,178,179,181,183,184,185,186,187,188,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-154,137,137,137,137,137,137,-148,137,216,137,137,-152,-98,-99,137,-150,-150,-150,-150,-150,-150,-154,137,137,-103,-104,-105,-106,-107,-108,137,-144,-144,137,-145,-145,137,137,137,-112,-113,-117,-118,137,-167,137,]),'SUB':([100,102,107,115,116,117,118,119,120,121,123,125,130,131,132,133,134,135,136,137,139,140,143,144,149,170,173,176,178,179,181,183,184,185,186,187,188,189,190,191,192,196,197,199,206,208,213,220,222,223,224,225,226,227,229,231,232,233,234,235,236,237,238,242,248,250,252,253,254,260,265,266,267,268,269,276,285,295,301,304,312,316,],[-154,-124,138,138,138,-52,-53,-54,138,138,138,-148,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,138,138,138,-152,-98,-99,138,-150,-150,-150,-150,-150,-150,232,-124,-86,-87,-90,-91,-154,-137,-124,138,138,-103,-104,-105,-106,-107,-108,138,-144,-144,-114,138,-116,-145,-145,-88,138,-55,138,138,-35,-37,-149,-112,-113,-115,-117,-118,138,-120,-36,-79,-167,138,-80,]),'CORRELACIONA':([100,107,115,116,120,121,123,125,149,170,173,176,178,179,181,183,184,185,186,187,188,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-154,142,142,142,142,142,142,-148,142,142,142,-152,-98,-99,142,-150,-150,-150,-150,-150,-150,-154,142,142,-103,-104,-105,-106,-107,-108,142,-144,-144,142,-145,-145,142,142,142,-112,-113,-117,-118,142,-167,142,]),'CTE_FLOAT':([100,107,115,116,120,121,123,125,138,149,170,173,176,178,179,181,183,184,185,186,187,188,193,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-154,144,144,144,144,144,144,-148,-138,144,144,144,-152,-98,-99,144,-150,-150,-150,-150,-150,-150,144,-154,144,144,-103,-104,-105,-106,-107,-108,144,-144,-144,144,-145,-145,144,144,144,-112,-113,-117,-118,144,-167,144,]),'MEDIA':([100,107,115,116,120,121,123,125,149,170,173,176,178,179,181,183,184,185,186,187,188,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-154,145,145,145,145,145,145,-148,145,145,145,-152,-98,-99,145,-150,-150,-150,-150,-150,-150,-154,145,145,-103,-104,-105,-106,-107,-108,145,-144,-144,145,-145,-145,145,145,145,-112,-113,-117,-118,145,-167,145,]),'MEDIANA':([100,107,115,116,120,121,123,125,149,170,173,176,178,179,181,183,184,185,186,187,188,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-154,146,146,146,146,146,146,-148,146,146,146,-152,-98,-99,146,-150,-150,-150,-150,-150,-150,-154,146,146,-103,-104,-105,-106,-107,-108,146,-144,-144,146,-145,-145,146,146,146,-112,-113,-117,-118,146,-167,146,]),'MODA':([100,107,115,116,120,121,123,125,149,170,173,176,178,179,181,183,184,185,186,187,188,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-154,147,147,147,147,147,147,-148,147,147,147,-152,-98,-99,147,-150,-150,-150,-150,-150,-150,-154,147,147,-103,-104,-105,-106,-107,-108,147,-144,-144,147,-145,-145,147,147,147,-112,-113,-117,-118,147,-167,147,]),'VARIANZA':([100,107,115,116,120,121,123,125,149,170,173,176,178,179,181,183,184,185,186,187,188,199,213,220,222,223,224,225,226,227,229,231,232,234,236,237,242,250,252,265,266,268,269,276,304,312,],[-154,148,148,148,148,148,148,-148,148,148,148,-152,-98,-99,148,-150,-150,-150,-150,-150,-150,-154,148,148,-103,-104,-105,-106,-107,-108,148,-144,-144,148,-145,-145,148,148,148,-112,-113,-117,-118,148,-167,148,]),'MUL':([102,117,118,119,131,132,133,134,135,136,137,139,140,143,144,190,191,192,196,197,206,208,238,248,253,254,260,285,295,301,316,],[-124,-52,-53,-54,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,236,-86,-87,-90,-91,-137,-124,-88,-55,-35,-37,-149,-120,-36,-79,-80,]),'DIV':([102,117,118,119,131,132,133,134,135,136,137,139,140,143,144,190,191,192,196,197,206,208,238,248,253,254,260,285,295,301,316,],[-124,-52,-53,-54,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,237,-86,-87,-90,-91,-137,-124,-88,-55,-35,-37,-149,-120,-36,-79,-80,]),'ADD':([102,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,233,235,238,248,253,254,260,267,285,295,301,316,],[-124,-52,-53,-54,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,231,-124,-86,-87,-90,-91,-137,-124,-114,-116,-88,-55,-35,-37,-149,-115,-120,-36,-79,-80,]),'LT':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,285,295,301,316,],[-124,-52,-53,-54,183,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,-120,-36,-79,-80,]),'GT':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,285,295,301,316,],[-124,-52,-53,-54,184,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,-120,-36,-79,-80,]),'LE':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,285,295,301,316,],[-124,-52,-53,-54,185,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,-120,-36,-79,-80,]),'GE':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,285,295,301,316,],[-124,-52,-53,-54,186,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,-120,-36,-79,-80,]),'NOT_EQUAL':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,285,295,301,316,],[-124,-52,-53,-54,187,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,-120,-36,-79,-80,]),'EQUAL':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,285,295,301,316,],[-124,-52,-53,-54,188,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,-120,-36,-79,-80,]),'AND':([102,117,118,119,128,129,130,131,132,133,134,135,136,137,139,140,143,144,180,182,189,190,191,192,196,197,206,208,221,228,230,233,235,238,248,253,254,260,263,264,267,285,295,301,316,],[-124,-52,-53,-54,178,-124,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-100,-102,-124,-124,-86,-87,-90,-91,-137,-124,-151,-109,-111,-114,-116,-88,-55,-35,-37,-149,-101,-110,-115,-120,-36,-79,-80,]),'OR':([102,117,118,119,128,129,130,131,132,133,134,135,136,137,139,140,143,144,180,182,189,190,191,192,196,197,206,208,221,228,230,233,235,238,248,253,254,260,263,264,267,285,295,301,316,],[-124,-52,-53,-54,179,-124,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-100,-102,-124,-124,-86,-87,-90,-91,-137,-124,-151,-109,-111,-114,-116,-88,-55,-35,-37,-149,-101,-110,-115,-120,-36,-79,-80,]),'HASTA':([102,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,273,285,291,295,301,316,],[-124,-52,-53,-54,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,-166,-120,304,-36,-79,-80,]),'HACER':([102,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,189,190,191,192,196,197,206,208,228,230,233,235,238,248,253,254,260,264,267,285,295,301,316,317,319,],[-124,-52,-53,-54,-146,-147,-119,-121,-122,-123,-141,-142,-89,-143,-139,-140,-124,-124,-86,-87,-90,-91,-137,-124,-109,-111,-114,-116,-88,-55,-35,-37,-149,-110,-115,-120,-36,-79,-80,-168,320,]),'ENTONCES':([171,218,],[-159,261,]),'HAZ':([241,272,],[-163,290,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'var1':([4,112,],[5,154,]),'var':([4,112,],[6,6,]),'empty':([4,9,20,35,37,51,54,60,66,68,102,112,113,116,127,128,129,167,189,190,207,208,250,286,],[7,21,21,43,47,57,63,69,97,69,119,7,157,162,174,177,182,214,230,235,251,254,162,300,]),'pnGOTOprincipal':([5,],[9,]),'var2':([8,35,],[10,42,]),'type':([8,35,],[11,11,]),'tipo_simple':([8,22,35,54,156,],[12,34,12,64,64,]),'tipo_compuesto':([8,35,],[13,13,]),'func1':([9,20,],[19,31,]),'funcion':([9,20,],[20,20,]),'pn_1_setCurrentType':([14,15,16,17,18,33,],[24,25,26,27,28,40,]),'principal':([19,],[29,]),'tipo_fun':([22,],[32,]),'lista_ids':([23,],[35,]),'lista':([23,56,],[36,65,]),'pnPrincipal2':([30,],[38,]),'var3':([35,],[41,]),'dd':([37,],[45,]),'dim_dec':([37,],[46,]),'pnFunDec1':([39,],[50,]),'pn_2_addVariable':([45,],[51,]),'lista1':([51,],[55,]),'bloque':([53,154,261,290,309,320,],[59,202,286,303,315,321,]),'parametros':([54,],[61,]),'param':([54,156,],[62,203,]),'pn_7_decRenglones':([58,],[66,]),'est':([60,68,],[67,99,]),'estatutos':([60,68,],[68,68,]),'asignacion':([60,68,],[70,70,]),'llamada':([60,68,107,115,116,120,121,123,149,170,173,181,213,220,229,234,242,250,252,276,312,],[71,71,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'retorno':([60,68,],[72,72,]),'lectura':([60,68,],[73,73,]),'escritura':([60,68,],[74,74,]),'carga_datos':([60,68,],[75,75,]),'decision':([60,68,],[76,76,]),'condicional':([60,68,],[77,77,]),'no_condicional':([60,68,],[78,78,]),'funciones_especiales_void':([60,68,],[79,79,]),'variable':([60,68,107,109,115,116,120,121,122,123,149,170,173,181,213,220,229,234,242,250,252,276,312,],[80,80,133,150,133,133,133,133,165,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'fev':([60,68,],[90,90,]),'dim_dec1':([66,],[96,]),'pnFunCall_1_2':([81,140,],[101,101,]),'pnExp1':([81,140,151,],[102,102,102,]),'pnSec3':([82,83,84,],[103,104,105,]),'pnCiclos1':([87,],[108,]),'pnCiclos4':([88,],[109,]),'pnFunDec4':([93,],[112,]),'pnFunDec_2_3':([94,],[113,]),'pnSec1':([100,199,],[115,242,]),'di':([102,],[117,]),'dim_index':([102,],[118,]),'expresion':([107,149,173,],[126,198,219,]),'mega_exp':([107,149,173,220,],[127,127,127,262,]),'super_exp':([107,149,173,220,],[128,128,128,128,]),'exp':([107,115,116,120,121,123,149,170,173,181,213,220,229,242,250,252,276,312,],[129,159,161,163,164,168,129,217,129,221,168,129,264,273,161,278,294,317,]),'termino':([107,115,116,120,121,123,149,170,173,181,213,220,229,234,242,250,252,276,312,],[130,130,130,130,130,130,130,130,130,130,130,130,130,267,130,130,130,130,130,]),'factor':([107,115,116,120,121,123,149,170,173,181,213,220,229,234,242,250,252,276,312,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'var_cte':([107,115,116,120,121,123,149,170,173,181,213,220,229,234,242,250,252,276,312,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'funciones_especiales':([107,115,116,120,121,123,149,170,173,181,213,220,229,234,242,250,252,276,312,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'var_num':([107,115,116,120,121,123,149,170,173,181,193,213,220,229,234,242,250,252,276,312,],[139,139,139,139,139,139,139,139,139,139,238,139,139,139,139,139,139,139,139,139,]),'fe':([107,115,116,120,121,123,149,170,173,181,213,220,229,234,242,250,252,276,312,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'param1':([113,],[155,]),'llamada1':([116,250,],[160,277,]),'esc':([123,213,],[166,258,]),'esc1':([123,213,],[167,167,]),'pnExp6':([125,],[170,]),'expresion1':([127,],[172,]),'meg':([128,],[175,]),'op_l':([128,],[176,]),'sp':([129,],[180,]),'op_r':([129,],[181,]),'pnExp4':([130,],[189,]),'pnExp5':([131,],[190,]),'pnCteChar':([136,],[191,]),'pnCteStr':([137,],[192,]),'pnNeg':([138,],[193,]),'pnCteInt':([143,],[196,]),'pnCteFloat':([144,],[197,]),'pn_8_decColumnas':([158,],[204,]),'pnFunCall_3':([161,],[207,]),'esc2':([167,],[212,]),'pnSec4':([168,256,],[215,280,]),'pnCond1':([171,],[218,]),'pnExp10':([176,],[220,]),'pnExp8':([183,184,185,186,187,188,],[222,223,224,225,226,227,]),'exp1':([189,],[228,]),'op_a':([189,],[229,]),'term':([190,],[233,]),'op_a1':([190,],[234,]),'v_exp':([201,270,271,302,],[244,288,289,310,]),'pnFunDec7':([202,],[246,]),'pnSec2':([205,],[247,]),'pnFunCall_5_6':([206,],[248,]),'llamada2':([207,],[249,]),'dim_index1':([208,],[253,]),'pnRetorno':([209,],[255,]),'pnExp9':([221,],[263,]),'pnExp2':([231,232,],[265,266,]),'pnExp3':([236,237,],[268,269,]),'pnCiclos2':([241,],[272,]),'pnSec5':([257,280,],[281,296,]),'ca':([259,297,],[283,307,]),'pnExp7':([260,],[285,]),'pnExp11':([262,],[287,]),'pnCiclos5':([273,],[291,]),'sino':([286,],[298,]),'pnCond2':([298,],[308,]),'pnCond3':([299,],[309,]),'pnCiclos3':([303,],[311,]),'pnCiclos6':([304,],[312,]),'pnCiclos7':([317,],[319,]),'pnCiclos8':([321,],[322,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal','programa',7,'p_programa','parser.py',178),
  ('var1 -> var','var1',1,'p_var1','parser.py',188),
  ('var1 -> empty','var1',1,'p_var1','parser.py',189),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',195),
  ('func1 -> empty','func1',1,'p_func1','parser.py',196),
  ('principal -> PRINCIPAL pnPrincipal2 LPAREN RPAREN bloque','principal',5,'p_principal','parser.py',201),
  ('var -> VAR var2','var',2,'p_var','parser.py',206),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',210),
  ('var3 -> var2','var3',1,'p_var3','parser.py',215),
  ('var3 -> empty','var3',1,'p_var3','parser.py',216),
  ('type -> tipo_simple','type',1,'p_type','parser.py',222),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',223),
  ('funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7','funcion',11,'p_funcion','parser.py',228),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',233),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',234),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',240),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',241),
  ('param -> tipo_simple ID pnFunDec_2_3 param1','param',4,'p_param','parser.py',246),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',251),
  ('param1 -> empty','param1',1,'p_param1','parser.py',252),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',258),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',259),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',260),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',265),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',266),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',271),
  ('lista -> ID dd pn_2_addVariable lista1','lista',4,'p_lista','parser.py',274),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',278),
  ('dd -> empty','dd',1,'p_dd','parser.py',279),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',284),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',285),
  ('dim_dec -> LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1','dim_dec',5,'p_dim_dec','parser.py',290),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK pn_8_decColumnas','dim_dec1',4,'p_dim_dec1','parser.py',294),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',295),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',299),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',303),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',304),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',310),
  ('est -> estatutos est','est',2,'p_est','parser.py',315),
  ('est -> empty','est',1,'p_est','parser.py',316),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',322),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',323),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',324),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',325),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',326),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',327),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',328),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',329),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',330),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',331),
  ('asignacion -> variable ASSIGN pnSec1 exp SEMICOLON pnSec2','asignacion',6,'p_asignacion','parser.py',338),
  ('variable -> ID pnExp1 di','variable',3,'p_variable','parser.py',346),
  ('di -> dim_index','di',1,'p_di','parser.py',350),
  ('di -> empty','di',1,'p_di','parser.py',351),
  ('llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6','llamada',6,'p_llamada','parser.py',355),
  ('llamada1 -> exp pnFunCall_3 llamada2','llamada1',3,'p_llamada1','parser.py',361),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',362),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',368),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',369),
  ('retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON','retorno',7,'p_retorno','parser.py',374),
  ('lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4 pnSec5','lectura',8,'p_lectura','parser.py',377),
  ('escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec5','escritura',7,'p_escritura','parser.py',380),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',383),
  ('esc1 -> exp pnSec4','esc1',2,'p_esc1','parser.py',387),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',391),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',392),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',396),
  ('ca -> ID','ca',1,'p_ca','parser.py',400),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',401),
  ('decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2','decision',9,'p_decision','parser.py',406),
  ('sino -> SINO pnCond3 bloque','sino',3,'p_sino','parser.py',410),
  ('sino -> empty','sino',1,'p_sino','parser.py',411),
  ('condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3','condicional',9,'p_condicional','parser.py',416),
  ('no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8','no_condicional',14,'p_no_condicional','parser.py',419),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',424),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',425),
  ('fev -> PLOTHIST','fev',1,'p_fev','parser.py',429),
  ('fev -> PLOTLINE','fev',1,'p_fev','parser.py',430),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',435),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',436),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',440),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',441),
  ('fe -> MODA','fe',1,'p_fe','parser.py',442),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',443),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',446),
  ('var_cte -> CTE_CH pnCteChar','var_cte',2,'p_var_cte','parser.py',453),
  ('var_cte -> CTE_STR pnCteStr','var_cte',2,'p_var_cte','parser.py',454),
  ('var_cte -> SUB pnNeg var_num','var_cte',3,'p_var_cte','parser.py',455),
  ('var_cte -> var_num','var_cte',1,'p_var_cte','parser.py',456),
  ('var_num -> CTE_INT pnCteInt','var_num',2,'p_var_num','parser.py',469),
  ('var_num -> CTE_FLOAT pnCteFloat','var_num',2,'p_var_num','parser.py',470),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',477),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',481),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',482),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',486),
  ('meg -> op_l pnExp10 mega_exp pnExp11','meg',4,'p_meg','parser.py',490),
  ('meg -> empty','meg',1,'p_meg','parser.py',491),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',495),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',496),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',500),
  ('sp -> op_r exp pnExp9','sp',3,'p_sp','parser.py',504),
  ('sp -> empty','sp',1,'p_sp','parser.py',505),
  ('op_r -> LT pnExp8','op_r',2,'p_op_r','parser.py',509),
  ('op_r -> GT pnExp8','op_r',2,'p_op_r','parser.py',510),
  ('op_r -> LE pnExp8','op_r',2,'p_op_r','parser.py',511),
  ('op_r -> GE pnExp8','op_r',2,'p_op_r','parser.py',512),
  ('op_r -> NOT_EQUAL pnExp8','op_r',2,'p_op_r','parser.py',513),
  ('op_r -> EQUAL pnExp8','op_r',2,'p_op_r','parser.py',514),
  ('exp -> termino pnExp4 exp1','exp',3,'p_exp','parser.py',518),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',522),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',523),
  ('op_a -> ADD pnExp2','op_a',2,'p_op_a','parser.py',527),
  ('op_a -> SUB pnExp2','op_a',2,'p_op_a','parser.py',528),
  ('termino -> factor pnExp5 term','termino',3,'p_termino','parser.py',532),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',536),
  ('term -> empty','term',1,'p_term','parser.py',537),
  ('op_a1 -> MUL pnExp3','op_a1',2,'p_op_a1','parser.py',541),
  ('op_a1 -> DIV pnExp3','op_a1',2,'p_op_a1','parser.py',542),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',547),
  ('factor -> LPAREN pnExp6 exp RPAREN pnExp7','factor',5,'p_factor','parser.py',548),
  ('factor -> variable','factor',1,'p_factor','parser.py',549),
  ('factor -> llamada','factor',1,'p_factor','parser.py',550),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',551),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',556),
  ('pnGOTOprincipal -> <empty>','pnGOTOprincipal',0,'p_pnGOTOprincipal','parser.py',858),
  ('pnPrincipal2 -> <empty>','pnPrincipal2',0,'p_pnPrincipal2','parser.py',865),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',884),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',894),
  ('pnFunDec1 -> <empty>','pnFunDec1',0,'p_pnFunDec1','parser.py',915),
  ('pnFunDec_2_3 -> <empty>','pnFunDec_2_3',0,'p_pnFunDec_2_3','parser.py',945),
  ('pnFunDec4 -> <empty>','pnFunDec4',0,'p_pnFunDec4','parser.py',966),
  ('pnFunDec7 -> <empty>','pnFunDec7',0,'p_pnFunDec7','parser.py',978),
  ('pn_7_decRenglones -> <empty>','pn_7_decRenglones',0,'p_pn_7_decRenglones','parser.py',999),
  ('pn_8_decColumnas -> <empty>','pn_8_decColumnas',0,'p_pn_8_decColumnas','parser.py',1010),
  ('pnFunCall_1_2 -> <empty>','pnFunCall_1_2',0,'p_pnFunCall_1_2','parser.py',1034),
  ('pnFunCall_3 -> <empty>','pnFunCall_3',0,'p_pnFunCall_3','parser.py',1057),
  ('pnFunCall_5_6 -> <empty>','pnFunCall_5_6',0,'p_pnFunCall_5_6','parser.py',1091),
  ('pnNeg -> <empty>','pnNeg',0,'p_pnNeg','parser.py',1113),
  ('pnCteInt -> <empty>','pnCteInt',0,'p_pnCteInt','parser.py',1123),
  ('pnCteFloat -> <empty>','pnCteFloat',0,'p_pnCteFloat','parser.py',1135),
  ('pnCteChar -> <empty>','pnCteChar',0,'p_pnCteChar','parser.py',1147),
  ('pnCteStr -> <empty>','pnCteStr',0,'p_pnCteStr','parser.py',1156),
  ('pnExp1 -> <empty>','pnExp1',0,'p_pnExp1','parser.py',1167),
  ('pnExp2 -> <empty>','pnExp2',0,'p_pnExp2','parser.py',1198),
  ('pnExp3 -> <empty>','pnExp3',0,'p_pnExp3','parser.py',1211),
  ('pnExp4 -> <empty>','pnExp4',0,'p_pnExp4','parser.py',1224),
  ('pnExp5 -> <empty>','pnExp5',0,'p_pnExp5','parser.py',1248),
  ('pnExp6 -> <empty>','pnExp6',0,'p_pnExp6','parser.py',1272),
  ('pnExp7 -> <empty>','pnExp7',0,'p_pnExp7','parser.py',1282),
  ('pnExp8 -> <empty>','pnExp8',0,'p_pnExp8','parser.py',1290),
  ('pnExp9 -> <empty>','pnExp9',0,'p_pnExp9','parser.py',1301),
  ('pnExp10 -> <empty>','pnExp10',0,'p_pnExp10','parser.py',1326),
  ('pnExp11 -> <empty>','pnExp11',0,'p_pnExp11','parser.py',1338),
  ('pnSec1 -> <empty>','pnSec1',0,'p_pnSec1','parser.py',1364),
  ('pnSec2 -> <empty>','pnSec2',0,'p_pnSec2','parser.py',1376),
  ('pnSec3 -> <empty>','pnSec3',0,'p_pnSec3','parser.py',1405),
  ('pnSec4 -> <empty>','pnSec4',0,'p_pnSec4','parser.py',1417),
  ('pnSec5 -> <empty>','pnSec5',0,'p_pnSec5','parser.py',1440),
  ('pnCond1 -> <empty>','pnCond1',0,'p_pnCond1','parser.py',1451),
  ('pnCond2 -> <empty>','pnCond2',0,'p_pnCond2','parser.py',1469),
  ('pnCond3 -> <empty>','pnCond3',0,'p_pnCond3','parser.py',1483),
  ('pnCiclos1 -> <empty>','pnCiclos1',0,'p_pnCiclos1','parser.py',1497),
  ('pnCiclos2 -> <empty>','pnCiclos2',0,'p_pnCiclos2','parser.py',1507),
  ('pnCiclos3 -> <empty>','pnCiclos3',0,'p_pnCiclos3','parser.py',1522),
  ('pnCiclos4 -> <empty>','pnCiclos4',0,'p_pnCiclos4','parser.py',1536),
  ('pnCiclos5 -> <empty>','pnCiclos5',0,'p_pnCiclos5','parser.py',1546),
  ('pnCiclos6 -> <empty>','pnCiclos6',0,'p_pnCiclos6','parser.py',1573),
  ('pnCiclos7 -> <empty>','pnCiclos7',0,'p_pnCiclos7','parser.py',1594),
  ('pnCiclos8 -> <empty>','pnCiclos8',0,'p_pnCiclos8','parser.py',1627),
  ('pnRetorno -> <empty>','pnRetorno',0,'p_pnRetorno','parser.py',1640),
]
