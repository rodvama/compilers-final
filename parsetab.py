
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DISTRIBUCION DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TENDENCIA TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL pn_9_setCurrentFuncGl LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pn_4_params param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID dd pn_2_addVariable lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK pn_8_decColumnas\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN pnQuadGenSec1 asig\n    asig : llamada\n         | exp SEMICOLON pnQuadGenSec2\n    variable : ID pnQuadGenExp1 di\n    di : dim_index\n       | empty\n    llamada :  ID LPAREN llamada1 RPAREN SEMICOLON\n    llamada1 : exp llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN SEMICOLONlectura : LEE pnQuadGenSec3 LPAREN variable RPAREN SEMICOLON pnQuadGenSec4escritura : ESCRIBE pnQuadGenSec3 LPAREN esc RPAREN SEMICOLON pnQuadGenSec4esc : esc1 esc2\n    esc1 : exp\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN pnQuadGenCond1 ENTONCES bloque sino pnQuadGenCond3\n    sino : SINO pnQuadGenCond2 bloque\n         | empty\n    condicional : MIENTRAS LPAREN expresion RPAREN HAZ bloqueno_condicional : DESDE variable ASSIGN exp HASTA exp HACER bloque\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : DISTRIBUCION\n        | TENDENCIA\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_INT pnQuadGenCteInt\n            | CTE_FLOAT pnQuadGenCteFloat\n            | CTE_CH pnQuadGenCteChar\n            | CTE_STR pnQuadGenCteStr\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l pnQuadGenExp10 mega_exp pnQuadGenExp11\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r  exp pnQuadGenExp9\n       | empty\n    \n    op_r : LT pnQuadGenExp8\n         | GT pnQuadGenExp8\n         | LE pnQuadGenExp8\n         | GE pnQuadGenExp8\n         | NOT_EQUAL pnQuadGenExp8\n         | EQUAL pnQuadGenExp8\n    exp : termino pnQuadGenExp4 exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD pnQuadGenExp2\n         | SUB pnQuadGenExp2\n    termino : factor pnQuadGenExp5 term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL pnQuadGenExp3\n          | DIV pnQuadGenExp3\n    \n    factor : var_cte\n           | LPAREN pnQuadGenExp6 exp RPAREN pnQuadGenExp7\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pn_3_addFunction : \n    \n    pn_4_params :\n    \n    pn_5_updateContParams :  \n    \n    pn_6_end :\n    \n    pn_7_decRenglones :\n    \n    pn_8_decColumnas : \n    \n    pn_9_setCurrentFuncGl :\n    \n    pnQuadGenCteInt :\n    \n    pnQuadGenCteFloat :\n    \n    pnQuadGenCteChar :\n    \n    pnQuadGenCteStr :\n    \n    pnQuadGenExp1 : \n    \n    pnQuadGenExp2 : \n    \n    pnQuadGenExp3 : \n    \n    pnQuadGenExp4 : \n    \n    pnQuadGenExp5 : \n    \n    pnQuadGenExp6 : \n    \n    pnQuadGenExp7 : \n    \n    pnQuadGenExp8 : \n    \n    pnQuadGenExp9 : \n    \n    pnQuadGenExp10 : \n    \n    pnQuadGenExp11 : \n    \n    pnQuadGenSec1 : \n    \n    pnQuadGenSec2 : \n    \n    pnQuadGenSec3 : \n    \n    pnQuadGenSec4 : \n    \n    pnQuadGenCond1 :\n    \n    pnQuadGenCond2 :\n    \n    pnQuadGenCond3 :\n    '
    
_lr_action_items = {'HAZ':([173,],[221,]),'SUB':([82,105,116,117,118,121,123,124,130,131,132,134,136,143,144,146,159,160,166,172,174,176,193,213,216,238,239,253,255,264,265,276,287,291,302,],[-138,-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,-55,-54,-56,-90,211,-124,-88,-89,-91,-122,-114,-116,-124,-57,-115,-144,-37,-35,-120,-81,-36,-82,]),'VOID':([10,],[25,]),'EQUAL':([105,116,117,118,121,123,124,130,131,132,134,136,137,143,144,146,159,160,166,172,174,176,207,210,213,216,238,239,248,253,255,264,265,276,287,291,302,],[-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,182,-55,-54,-56,-90,-124,-124,-88,-89,-91,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'CARGA':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[65,-47,-42,-43,-48,65,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'CHAR':([6,10,38,46,52,153,],[19,19,19,-26,19,19,]),'SINO':([98,285,],[-38,293,]),'CORRELACIONA':([96,97,104,106,109,129,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[135,135,-149,135,135,-143,135,135,135,135,-98,-147,-99,135,135,-145,-145,-145,135,-145,-145,-145,135,-139,135,-139,135,-140,-140,135,-104,-107,-106,-108,-103,-105,135,135,-112,-113,-117,-118,135,135,]),'CTE_CH':([96,97,104,106,109,129,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[117,117,-149,117,117,-143,117,117,117,117,-98,-147,-99,117,117,-145,-145,-145,117,-145,-145,-145,117,-139,117,-139,117,-140,-140,117,-104,-107,-106,-108,-103,-105,117,117,-112,-113,-117,-118,117,117,]),'MUL':([82,105,116,117,121,123,124,130,131,132,134,136,143,144,146,159,166,172,174,176,193,238,239,255,264,265,276,287,291,302,],[-138,-124,-119,-136,-123,-122,-142,-121,-134,-138,-135,-137,-55,-54,-56,-90,214,-88,-89,-91,-122,-124,-57,-144,-37,-35,-120,-81,-36,-82,]),'TENDENCIA':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[67,-47,-42,-43,-48,67,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'DIV':([82,105,116,117,121,123,124,130,131,132,134,136,143,144,146,159,166,172,174,176,193,238,239,255,264,265,276,287,291,302,],[-138,-124,-119,-136,-123,-122,-142,-121,-134,-138,-135,-137,-55,-54,-56,-90,215,-88,-89,-91,-122,-124,-57,-144,-37,-35,-120,-81,-36,-82,]),'RBRACE':([55,69,70,72,74,75,77,78,80,83,85,87,89,90,98,101,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[-124,98,-47,-42,-43,-40,-48,-124,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'NOT_EQUAL':([105,116,117,118,121,123,124,130,131,132,134,136,137,143,144,146,159,160,166,172,174,176,207,210,213,216,238,239,248,253,255,264,265,276,287,291,302,],[-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,178,-55,-54,-56,-90,-124,-124,-88,-89,-91,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'RPAREN':([41,52,58,59,60,91,102,105,106,110,116,117,118,120,121,123,124,127,130,131,132,133,134,136,137,138,143,144,146,147,148,149,152,154,155,159,160,162,165,166,167,168,172,174,176,179,185,187,188,189,197,198,199,200,203,207,210,213,216,218,220,226,232,234,238,239,240,243,248,250,253,255,258,260,264,265,272,273,274,275,276,279,287,291,292,296,297,302,],[51,-124,-16,92,-17,-128,-138,-124,-124,-124,-119,-136,-141,-124,-123,-122,-142,-124,-121,-134,-138,173,-135,-137,-124,186,-55,-54,-56,196,-59,-124,202,-18,-20,-90,-124,-95,-97,-124,-92,-94,-88,-89,-91,-100,-102,231,-124,-66,-58,-124,-61,241,-19,-109,-111,-114,-116,-93,255,-146,-65,-68,-124,-57,-60,269,-110,-148,-115,-144,-101,-67,-37,-35,-71,-70,-96,287,-120,289,-81,-36,-87,301,302,-82,]),'SEMICOLON':([3,39,40,47,49,50,53,61,63,64,82,93,94,105,112,114,116,117,118,121,123,124,130,131,132,134,136,143,144,146,159,160,166,172,174,176,186,193,194,196,205,207,210,213,216,231,238,239,241,245,248,253,255,264,265,269,276,287,289,291,301,302,],[4,46,-124,-126,-28,-29,-124,-27,-31,-131,-138,-30,-124,-124,-32,-34,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,-55,-54,-56,-90,-124,-124,-88,-89,-91,230,-122,237,239,-132,-109,-111,-114,-116,259,-124,-57,267,-33,-110,-115,-144,-37,-35,284,-120,-81,298,-36,304,-82,]),'VARIABLES':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,201,230,237,239,254,256,257,259,263,267,278,282,284,285,288,290,294,295,298,300,303,304,],[76,-47,-42,-43,-48,76,-50,-49,-41,-44,-46,-45,-38,-51,-52,242,-62,-150,-57,242,-75,242,-152,-53,-152,-64,-63,-78,-124,242,-76,-155,-74,-77,-72,-73,-69,]),'GE':([105,116,117,118,121,123,124,130,131,132,134,136,137,143,144,146,159,160,166,172,174,176,207,210,213,216,238,239,248,253,255,264,265,276,287,291,302,],[-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,180,-55,-54,-56,-90,-124,-124,-88,-89,-91,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'DATAFRAME':([6,38,46,],[18,18,-26,]),'ESCRIBE':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[71,-47,-42,-43,-48,71,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'MODA':([96,97,104,106,109,129,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[122,122,-149,122,122,-143,122,122,122,122,-98,-147,-99,122,122,-145,-145,-145,122,-145,-145,-145,122,-139,122,-139,122,-140,-140,122,-104,-107,-106,-108,-103,-105,122,122,-112,-113,-117,-118,122,122,]),'LT':([105,116,117,118,121,123,124,130,131,132,134,136,137,143,144,146,159,160,166,172,174,176,207,210,213,216,238,239,248,253,255,264,265,276,287,291,302,],[-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,183,-55,-54,-56,-90,-124,-124,-88,-89,-91,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'COMMA':([40,47,49,50,53,64,91,94,105,110,112,114,115,116,117,118,121,123,124,130,131,132,134,136,140,143,144,146,149,151,159,160,166,172,174,176,188,189,205,206,207,210,213,216,219,222,235,238,239,245,248,253,255,264,265,271,272,273,276,277,287,291,292,302,],[-124,-126,-28,-29,62,-131,-128,-124,-124,153,-32,-34,158,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,190,-55,-54,-56,198,201,-90,-124,-124,-88,-89,-91,233,-66,-132,246,-109,-111,-114,-116,254,257,261,-124,-57,-33,-110,-115,-144,-37,-35,286,-71,-70,-120,288,-81,-36,-87,-82,]),'DISTRIBUCION':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[73,-47,-42,-43,-48,73,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'MEDIANA':([96,97,104,106,109,129,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[125,125,-149,125,125,-143,125,125,125,125,-98,-147,-99,125,125,-145,-145,-145,125,-145,-145,-145,125,-139,125,-139,125,-140,-140,125,-104,-107,-106,-108,-103,-105,125,125,-112,-113,-117,-118,125,125,]),'ASSIGN':([81,82,102,103,105,116,117,118,120,121,123,124,127,130,131,132,134,136,137,143,144,146,159,160,162,165,166,172,174,176,179,185,207,210,213,216,226,238,239,248,250,253,255,258,264,265,274,276,287,291,302,],[104,-138,-138,141,-124,-119,-136,-141,-124,-123,-122,-142,169,-121,-134,-138,-135,-137,-124,-55,-54,-56,-90,-124,-95,-97,-124,-88,-89,-91,-100,-102,-109,-111,-114,-116,-146,-124,-57,-110,-148,-115,-144,-101,-37,-35,-96,-120,-81,-36,-82,]),'$end':([1,23,35,56,98,],[0,-130,-1,-6,-38,]),'HACER':([105,116,117,118,121,123,124,130,131,132,134,136,143,144,146,159,160,166,172,174,176,207,210,213,216,238,239,248,253,255,262,264,265,276,287,291,302,],[-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,-55,-54,-56,-90,-124,-124,-88,-89,-91,-109,-111,-114,-116,-124,-57,-110,-115,-144,280,-37,-35,-120,-81,-36,-82,]),'GT':([105,116,117,118,121,123,124,130,131,132,134,136,137,143,144,146,159,160,166,172,174,176,207,210,213,216,238,239,248,253,255,264,265,276,287,291,302,],[-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,177,-55,-54,-56,-90,-124,-124,-88,-89,-91,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'STRING':([6,38,46,],[15,15,-26,]),'MEDIA':([96,97,104,106,109,129,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[126,126,-149,126,126,-143,126,126,126,126,-98,-147,-99,126,126,-145,-145,-145,126,-145,-145,-145,126,-139,126,-139,126,-140,-140,126,-104,-107,-106,-108,-103,-105,126,126,-112,-113,-117,-118,126,126,]),'REGRESA':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[68,-47,-42,-43,-48,68,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'RBRACK':([54,105,116,117,118,121,123,124,130,131,132,134,136,143,144,146,157,159,160,166,172,174,176,195,207,210,213,216,238,239,248,253,255,264,265,276,281,283,287,291,302,],[64,-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,-55,-54,-56,205,-90,-124,-124,-88,-89,-91,238,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,291,292,-81,-36,-82,]),'HASTA':([105,116,117,118,121,123,124,130,131,132,134,136,143,144,146,159,160,166,172,174,176,191,207,210,213,216,238,239,248,253,255,264,265,276,287,291,302,],[-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,-55,-54,-56,-90,-124,-124,-88,-89,-91,236,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'MIENTRAS':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[66,-47,-42,-43,-48,66,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'ADD':([82,105,116,117,118,121,123,124,130,131,132,134,136,143,144,146,159,160,166,172,174,176,193,213,216,238,239,253,255,264,265,276,287,291,302,],[-138,-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,-55,-54,-56,-90,208,-124,-88,-89,-91,-122,-114,-116,-124,-57,-115,-144,-37,-35,-120,-81,-36,-82,]),'LE':([105,116,117,118,121,123,124,130,131,132,134,136,137,143,144,146,159,160,166,172,174,176,207,210,213,216,238,239,248,253,255,264,265,276,287,291,302,],[-124,-119,-136,-141,-123,-122,-142,-121,-134,-138,-135,-137,184,-55,-54,-56,-90,-124,-124,-88,-89,-91,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'DESDE':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[79,-47,-42,-43,-48,79,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'LPAREN':([22,34,37,42,65,66,67,68,71,73,76,82,84,86,88,96,97,99,104,106,107,109,119,122,125,126,128,129,132,135,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[-133,41,-127,52,95,96,-80,97,-151,-79,100,106,-151,108,109,129,129,139,-149,129,150,129,-86,-85,-84,-83,170,-143,106,175,129,129,129,129,-98,-147,-99,129,129,-145,-145,-145,129,-145,-145,-145,129,-139,129,-139,129,-140,-140,129,-104,-107,-106,-108,-103,-105,129,129,-112,-113,-117,-118,129,129,]),'VAR':([4,92,111,],[6,-129,6,]),'CTE_INT':([48,96,97,104,106,109,113,129,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,246,247,249,251,252,266,268,286,],[54,131,131,-149,131,131,157,-143,131,131,131,131,-98,-147,-99,131,131,-145,-145,-145,131,-145,-145,-145,131,-139,131,-139,131,-140,-140,131,-104,-107,-106,-108,-103,-105,131,131,272,-112,-113,-117,-118,131,131,272,]),'ID':([2,14,19,21,24,25,26,28,31,32,33,36,55,57,62,70,72,74,77,78,79,80,83,85,87,89,90,95,96,97,98,100,104,106,108,109,129,139,141,142,145,150,161,163,164,169,170,171,175,177,178,180,181,182,183,184,190,192,193,198,208,209,211,212,214,215,217,223,224,225,227,228,229,230,233,236,237,239,246,247,249,251,252,256,259,261,263,266,267,268,278,282,284,285,286,290,294,295,298,300,303,304,],[3,-125,-125,-125,-15,-125,37,-22,-23,40,-21,-14,82,91,40,-47,-42,-43,-48,82,102,-50,-49,-41,-44,-46,-45,115,132,132,-38,140,-149,132,151,132,-143,132,132,82,132,102,-98,-147,-99,132,219,132,222,-145,-145,-145,132,-145,-145,-145,235,-51,-52,132,-139,132,-139,132,-140,-140,132,-104,-107,-106,-108,-103,-105,-62,132,132,-150,-57,273,-112,-113,-117,-118,-75,-152,279,-53,132,-152,132,-64,-63,-78,-124,273,-76,-155,-74,-77,-72,-73,-69,]),'FUNCION':([4,5,7,8,11,16,38,43,44,45,46,98,204,],[-124,10,-2,-3,10,-7,-124,-8,-9,-10,-26,-38,-13,]),'AND':([105,116,117,118,120,121,123,124,130,131,132,134,136,137,143,144,146,159,160,166,172,174,176,179,185,207,210,213,216,226,238,239,248,253,255,258,264,265,276,287,291,302,],[-124,-119,-136,-141,161,-123,-122,-142,-121,-134,-138,-135,-137,-124,-55,-54,-56,-90,-124,-124,-88,-89,-91,-100,-102,-109,-111,-114,-116,-146,-124,-57,-110,-115,-144,-101,-37,-35,-120,-81,-36,-82,]),'LBRACE':([7,8,16,38,43,44,45,46,51,92,111,156,221,270,280,293,299,],[-2,-3,-7,-124,-8,-9,-10,-26,55,-129,-124,55,55,55,55,-154,55,]),'LEE':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[84,-47,-42,-43,-48,84,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'VARIANZA':([96,97,104,106,109,129,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[119,119,-149,119,119,-143,119,119,119,119,-98,-147,-99,119,119,-145,-145,-145,119,-145,-145,-145,119,-139,119,-139,119,-140,-140,119,-104,-107,-106,-108,-103,-105,119,119,-112,-113,-117,-118,119,119,]),'CTE_STR':([96,97,104,106,109,129,139,141,142,145,158,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[136,136,-149,136,136,-143,136,136,136,136,206,-98,-147,-99,136,136,-145,-145,-145,136,-145,-145,-145,136,-139,136,-139,136,-140,-140,136,-104,-107,-106,-108,-103,-105,136,136,-112,-113,-117,-118,136,136,]),'INT':([6,10,38,46,52,153,],[21,21,21,-26,21,21,]),'FLOAT':([6,10,38,46,52,153,],[14,14,14,-26,14,14,]),'CTE_FLOAT':([96,97,104,106,109,129,139,141,142,145,161,163,164,169,171,177,178,180,181,182,183,184,198,208,209,211,212,214,215,217,223,224,225,227,228,229,233,236,247,249,251,252,266,268,],[134,134,-149,134,134,-143,134,134,134,134,-98,-147,-99,134,134,-145,-145,-145,134,-145,-145,-145,134,-139,134,-139,134,-140,-140,134,-104,-107,-106,-108,-103,-105,134,134,-112,-113,-117,-118,134,134,]),'LBRACK':([40,64,82,94,102,105,132,238,242,],[48,-131,-138,113,-138,145,-138,266,268,]),'ENTONCES':([202,244,],[-153,270,]),'TWO_DOTS':([13,14,15,17,18,19,20,21,28,29,30,31,33,],[-12,-125,-125,-11,-125,-125,32,-125,-22,-25,-24,-23,-21,]),'SI':([55,70,72,74,77,78,80,83,85,87,89,90,98,192,193,230,237,239,256,259,263,267,278,282,284,285,290,294,295,298,300,303,304,],[88,-47,-42,-43,-48,88,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-75,-152,-53,-152,-64,-63,-78,-124,-76,-155,-74,-77,-72,-73,-69,]),'PROGRAMA':([0,],[2,]),'OR':([105,116,117,118,120,121,123,124,130,131,132,134,136,137,143,144,146,159,160,166,172,174,176,179,185,207,210,213,216,226,238,239,248,253,255,258,264,265,276,287,291,302,],[-124,-119,-136,-141,164,-123,-122,-142,-121,-134,-138,-135,-137,-124,-55,-54,-56,-90,-124,-124,-88,-89,-91,-100,-102,-109,-111,-114,-116,-146,-124,-57,-110,-115,-144,-101,-37,-35,-120,-81,-36,-82,]),'PRINCIPAL':([4,5,7,8,9,11,12,16,27,38,43,44,45,46,98,204,],[-124,-124,-2,-3,22,-124,-5,-7,-4,-124,-8,-9,-10,-26,-38,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque':([51,156,221,270,280,299,],[56,204,256,285,290,303,]),'principal':([9,],[23,]),'funciones_especiales':([96,97,106,109,139,141,142,145,169,171,181,198,209,212,217,233,236,266,268,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'param':([52,153,],[58,203,]),'pnQuadGenCond3':([294,],[300,]),'pnQuadGenCond2':([293,],[299,]),'pnQuadGenCond1':([202,],[244,]),'factor':([96,97,106,109,139,141,142,145,169,171,181,198,209,212,217,233,236,266,268,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'dim_dec':([40,],[49,]),'pn_9_setCurrentFuncGl':([22,],[34,]),'func1':([5,11,],[9,27,]),'var1':([4,111,],[5,156,]),'var3':([38,],[43,]),'di':([105,],[144,]),'condicional':([55,78,],[77,77,]),'tipo_fun':([10,],[26,]),'pnQuadGenExp11':([250,],[274,]),'estatutos':([55,78,],[78,78,]),'tipo_compuesto':([6,38,],[13,13,]),'expresion':([96,109,169,],[133,152,218,]),'term':([166,],[213,]),'pnQuadGenExp7':([255,],[276,]),'pnQuadGenCteInt':([131,],[172,]),'parametros':([52,],[59,]),'lista1':([53,],[61,]),'carga_datos':([55,78,],[89,89,]),'op_a1':([166,],[217,]),'pn_1_setCurrentType':([14,15,18,19,21,25,],[28,29,30,31,33,36,]),'var_cte':([96,97,106,109,139,141,142,145,169,171,181,198,209,212,217,233,236,266,268,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'super_exp':([96,109,169,212,],[120,120,120,120,]),'dim_index':([105,],[143,]),'est':([55,78,],[69,101,]),'asig':([142,],[192,]),'decision':([55,78,],[70,70,]),'lista_ids':([32,],[38,]),'llamada':([55,78,96,97,106,109,139,141,142,145,169,171,181,198,209,212,217,233,236,266,268,],[72,72,123,123,123,123,123,123,193,123,123,123,123,123,123,123,123,123,123,123,123,]),'esc':([139,233,],[187,260,]),'lectura':([55,78,],[87,87,]),'pnQuadGenCteFloat':([134,],[174,]),'meg':([120,],[162,]),'sino':([285,],[294,]),'funciones_especiales_void':([55,78,],[80,80,]),'pn_2_addVariable':([47,],[53,]),'dim_index1':([238,],[265,]),'fe':([96,97,106,109,139,141,142,145,169,171,181,198,209,212,217,233,236,266,268,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'pn_3_addFunction':([37,],[42,]),'tipo_simple':([6,10,38,52,153,],[17,24,17,57,57,]),'ca':([246,286,],[271,296,]),'termino':([96,97,106,109,139,141,142,145,169,171,181,198,209,212,217,233,236,266,268,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,253,118,118,118,118,]),'exp1':([160,],[207,]),'fev':([55,78,],[86,86,]),'var':([4,111,],[7,7,]),'pn_5_updateContParams':([92,],[111,]),'type':([6,38,],[20,20,]),'empty':([4,5,11,38,40,52,53,55,78,94,105,106,110,111,120,127,137,149,160,166,188,198,238,285,],[8,12,12,45,50,60,63,75,75,114,146,148,155,8,165,168,185,199,210,216,234,148,264,295,]),'expresion1':([127,],[167,]),'dim_dec1':([94,],[112,]),'pnQuadGenSec2':([237,],[263,]),'pnQuadGenSec1':([104,],[142,]),'op_r':([137,],[181,]),'pnQuadGenSec4':([259,267,],[278,282,]),'op_l':([120,],[163,]),'lista':([32,62,],[39,93,]),'op_a':([160,],[209,]),'no_condicional':([55,78,],[83,83,]),'pnQuadGenExp1':([82,102,132,],[105,105,105,]),'pnQuadGenExp3':([214,215,],[251,252,]),'pnQuadGenExp2':([208,211,],[247,249,]),'pnQuadGenExp5':([124,],[166,]),'pnQuadGenExp4':([118,],[160,]),'asignacion':([55,78,],[85,85,]),'pnQuadGenExp6':([129,],[171,]),'pnQuadGenExp9':([226,],[258,]),'pnQuadGenExp8':([177,178,180,182,183,184,],[223,224,225,227,228,229,]),'param1':([110,],[154,]),'pnQuadGenCteChar':([117,],[159,]),'llamada2':([149,],[197,]),'pnQuadGenCteStr':([136,],[176,]),'v_exp':([201,254,257,288,],[243,275,277,297,]),'llamada1':([106,198,],[147,240,]),'pn_8_decColumnas':([205,],[245,]),'var2':([6,38,],[16,44,]),'pnQuadGenSec3':([71,84,],[99,107,]),'retorno':([55,78,],[74,74,]),'pnQuadGenExp10':([163,],[212,]),'dd':([40,],[47,]),'funcion':([5,11,],[11,11,]),'pn_6_end':([23,],[35,]),'escritura':([55,78,],[90,90,]),'esc1':([139,233,],[188,188,]),'esc2':([188,],[232,]),'mega_exp':([96,109,169,212,],[127,127,127,250,]),'variable':([55,78,79,96,97,106,109,139,141,142,145,150,169,171,181,198,209,212,217,233,236,266,268,],[81,81,103,130,130,130,130,130,130,130,130,200,130,130,130,130,130,130,130,130,130,130,130,]),'sp':([137,],[179,]),'pn_4_params':([91,],[110,]),'programa':([0,],[1,]),'exp':([96,97,106,109,139,141,142,145,169,171,181,198,209,212,233,236,266,268,],[137,138,149,137,189,191,194,195,137,220,226,149,248,137,189,262,281,283,]),'pn_7_decRenglones':([64,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end','programa',7,'p_programa','parser.py',78),
  ('var1 -> var','var1',1,'p_var1','parser.py',83),
  ('var1 -> empty','var1',1,'p_var1','parser.py',84),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',90),
  ('func1 -> empty','func1',1,'p_func1','parser.py',91),
  ('principal -> PRINCIPAL pn_9_setCurrentFuncGl LPAREN RPAREN bloque','principal',5,'p_principal','parser.py',96),
  ('var -> VAR var2','var',2,'p_var','parser.py',101),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',105),
  ('var3 -> var2','var3',1,'p_var3','parser.py',110),
  ('var3 -> empty','var3',1,'p_var3','parser.py',111),
  ('type -> tipo_simple','type',1,'p_type','parser.py',117),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',118),
  ('funcion -> FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque','funcion',10,'p_funcion','parser.py',123),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',128),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',129),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',135),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',136),
  ('param -> tipo_simple ID pn_4_params param1','param',4,'p_param','parser.py',141),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',146),
  ('param1 -> empty','param1',1,'p_param1','parser.py',147),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',153),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',154),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',155),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',160),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',161),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',166),
  ('lista -> ID dd pn_2_addVariable lista1','lista',4,'p_lista','parser.py',169),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',173),
  ('dd -> empty','dd',1,'p_dd','parser.py',174),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',179),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',180),
  ('dim_dec -> LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1','dim_dec',5,'p_dim_dec','parser.py',185),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK pn_8_decColumnas','dim_dec1',4,'p_dim_dec1','parser.py',189),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',190),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',194),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',198),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',199),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',205),
  ('est -> estatutos est','est',2,'p_est','parser.py',210),
  ('est -> empty','est',1,'p_est','parser.py',211),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',217),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',218),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',219),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',220),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',221),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',222),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',223),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',224),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',225),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',226),
  ('asignacion -> variable ASSIGN pnQuadGenSec1 asig','asignacion',4,'p_asignacion','parser.py',233),
  ('asig -> llamada','asig',1,'p_asig','parser.py',237),
  ('asig -> exp SEMICOLON pnQuadGenSec2','asig',3,'p_asig','parser.py',238),
  ('variable -> ID pnQuadGenExp1 di','variable',3,'p_variable','parser.py',241),
  ('di -> dim_index','di',1,'p_di','parser.py',245),
  ('di -> empty','di',1,'p_di','parser.py',246),
  ('llamada -> ID LPAREN llamada1 RPAREN SEMICOLON','llamada',5,'p_llamada','parser.py',250),
  ('llamada1 -> exp llamada2','llamada1',2,'p_llamada1','parser.py',254),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',255),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',260),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',261),
  ('retorno -> REGRESA LPAREN exp RPAREN SEMICOLON','retorno',5,'p_retorno','parser.py',265),
  ('lectura -> LEE pnQuadGenSec3 LPAREN variable RPAREN SEMICOLON pnQuadGenSec4','lectura',7,'p_lectura','parser.py',268),
  ('escritura -> ESCRIBE pnQuadGenSec3 LPAREN esc RPAREN SEMICOLON pnQuadGenSec4','escritura',7,'p_escritura','parser.py',271),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',274),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',278),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',282),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',283),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',287),
  ('ca -> ID','ca',1,'p_ca','parser.py',291),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',292),
  ('decision -> SI LPAREN expresion RPAREN pnQuadGenCond1 ENTONCES bloque sino pnQuadGenCond3','decision',9,'p_decision','parser.py',297),
  ('sino -> SINO pnQuadGenCond2 bloque','sino',3,'p_sino','parser.py',301),
  ('sino -> empty','sino',1,'p_sino','parser.py',302),
  ('condicional -> MIENTRAS LPAREN expresion RPAREN HAZ bloque','condicional',6,'p_condicional','parser.py',306),
  ('no_condicional -> DESDE variable ASSIGN exp HASTA exp HACER bloque','no_condicional',8,'p_no_condicional','parser.py',309),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',314),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',315),
  ('fev -> DISTRIBUCION','fev',1,'p_fev','parser.py',319),
  ('fev -> TENDENCIA','fev',1,'p_fev','parser.py',320),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',325),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',326),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',330),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',331),
  ('fe -> MODA','fe',1,'p_fe','parser.py',332),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',333),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',336),
  ('var_cte -> CTE_INT pnQuadGenCteInt','var_cte',2,'p_var_cte','parser.py',343),
  ('var_cte -> CTE_FLOAT pnQuadGenCteFloat','var_cte',2,'p_var_cte','parser.py',344),
  ('var_cte -> CTE_CH pnQuadGenCteChar','var_cte',2,'p_var_cte','parser.py',345),
  ('var_cte -> CTE_STR pnQuadGenCteStr','var_cte',2,'p_var_cte','parser.py',346),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',352),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',356),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',357),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',361),
  ('meg -> op_l pnQuadGenExp10 mega_exp pnQuadGenExp11','meg',4,'p_meg','parser.py',365),
  ('meg -> empty','meg',1,'p_meg','parser.py',366),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',370),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',371),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',375),
  ('sp -> op_r exp pnQuadGenExp9','sp',3,'p_sp','parser.py',379),
  ('sp -> empty','sp',1,'p_sp','parser.py',380),
  ('op_r -> LT pnQuadGenExp8','op_r',2,'p_op_r','parser.py',384),
  ('op_r -> GT pnQuadGenExp8','op_r',2,'p_op_r','parser.py',385),
  ('op_r -> LE pnQuadGenExp8','op_r',2,'p_op_r','parser.py',386),
  ('op_r -> GE pnQuadGenExp8','op_r',2,'p_op_r','parser.py',387),
  ('op_r -> NOT_EQUAL pnQuadGenExp8','op_r',2,'p_op_r','parser.py',388),
  ('op_r -> EQUAL pnQuadGenExp8','op_r',2,'p_op_r','parser.py',389),
  ('exp -> termino pnQuadGenExp4 exp1','exp',3,'p_exp','parser.py',393),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',397),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',398),
  ('op_a -> ADD pnQuadGenExp2','op_a',2,'p_op_a','parser.py',402),
  ('op_a -> SUB pnQuadGenExp2','op_a',2,'p_op_a','parser.py',403),
  ('termino -> factor pnQuadGenExp5 term','termino',3,'p_termino','parser.py',407),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',411),
  ('term -> empty','term',1,'p_term','parser.py',412),
  ('op_a1 -> MUL pnQuadGenExp3','op_a1',2,'p_op_a1','parser.py',416),
  ('op_a1 -> DIV pnQuadGenExp3','op_a1',2,'p_op_a1','parser.py',417),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',422),
  ('factor -> LPAREN pnQuadGenExp6 exp RPAREN pnQuadGenExp7','factor',5,'p_factor','parser.py',423),
  ('factor -> variable','factor',1,'p_factor','parser.py',424),
  ('factor -> llamada','factor',1,'p_factor','parser.py',425),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',426),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',431),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',560),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',567),
  ('pn_3_addFunction -> <empty>','pn_3_addFunction',0,'p_pn_3_addFunction','parser.py',583),
  ('pn_4_params -> <empty>','pn_4_params',0,'p_pn_4_params','parser.py',596),
  ('pn_5_updateContParams -> <empty>','pn_5_updateContParams',0,'p_pn_5_updateContParams','parser.py',610),
  ('pn_6_end -> <empty>','pn_6_end',0,'p_pn_6_end','parser.py',619),
  ('pn_7_decRenglones -> <empty>','pn_7_decRenglones',0,'p_pn_7_decRenglones','parser.py',625),
  ('pn_8_decColumnas -> <empty>','pn_8_decColumnas',0,'p_pn_8_decColumnas','parser.py',633),
  ('pn_9_setCurrentFuncGl -> <empty>','pn_9_setCurrentFuncGl',0,'p_pn_9_setCurrentFuncGl','parser.py',640),
  ('pnQuadGenCteInt -> <empty>','pnQuadGenCteInt',0,'p_pnQuadGenCteInt','parser.py',651),
  ('pnQuadGenCteFloat -> <empty>','pnQuadGenCteFloat',0,'p_pnQuadGenCteFloat','parser.py',658),
  ('pnQuadGenCteChar -> <empty>','pnQuadGenCteChar',0,'p_pnQuadGenCteChar','parser.py',665),
  ('pnQuadGenCteStr -> <empty>','pnQuadGenCteStr',0,'p_pnQuadGenCteStr','parser.py',672),
  ('pnQuadGenExp1 -> <empty>','pnQuadGenExp1',0,'p_pnQuadGenExp1','parser.py',683),
  ('pnQuadGenExp2 -> <empty>','pnQuadGenExp2',0,'p_pnQuadGenExp2','parser.py',709),
  ('pnQuadGenExp3 -> <empty>','pnQuadGenExp3',0,'p_pnQuadGenExp3','parser.py',723),
  ('pnQuadGenExp4 -> <empty>','pnQuadGenExp4',0,'p_pnQuadGenExp4','parser.py',737),
  ('pnQuadGenExp5 -> <empty>','pnQuadGenExp5',0,'p_pnQuadGenExp5','parser.py',761),
  ('pnQuadGenExp6 -> <empty>','pnQuadGenExp6',0,'p_pnQuadGenExp6','parser.py',785),
  ('pnQuadGenExp7 -> <empty>','pnQuadGenExp7',0,'p_pnQuadGenExp7','parser.py',792),
  ('pnQuadGenExp8 -> <empty>','pnQuadGenExp8',0,'p_pnQuadGenExp8','parser.py',799),
  ('pnQuadGenExp9 -> <empty>','pnQuadGenExp9',0,'p_pnQuadGenExp9','parser.py',811),
  ('pnQuadGenExp10 -> <empty>','pnQuadGenExp10',0,'p_pnQuadGenExp10','parser.py',836),
  ('pnQuadGenExp11 -> <empty>','pnQuadGenExp11',0,'p_pnQuadGenExp11','parser.py',848),
  ('pnQuadGenSec1 -> <empty>','pnQuadGenSec1',0,'p_pnQuadGenSec1','parser.py',874),
  ('pnQuadGenSec2 -> <empty>','pnQuadGenSec2',0,'p_pnQuadGenSec2','parser.py',886),
  ('pnQuadGenSec3 -> <empty>','pnQuadGenSec3',0,'p_pnQuadGenSec3','parser.py',915),
  ('pnQuadGenSec4 -> <empty>','pnQuadGenSec4',0,'p_pnQuadGenSec4','parser.py',927),
  ('pnQuadGenCond1 -> <empty>','pnQuadGenCond1',0,'p_pnQuadGenCond1','parser.py',950),
  ('pnQuadGenCond2 -> <empty>','pnQuadGenCond2',0,'p_pnQuadGenCond2','parser.py',967),
  ('pnQuadGenCond3 -> <empty>','pnQuadGenCond3',0,'p_pnQuadGenCond3','parser.py',976),
]
