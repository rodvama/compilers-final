
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PLOTHIST PLOTLINE PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL pnPrincipal2 LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pnFunDec_2_3 param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID dd pn_2_addVariable lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK pn_8_decColumnas\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN pnSec1 asig\n    asig : llamada \n         | exp SEMICOLON pnSec2\n    variable : ID pnExp1 di\n    di : dim_index\n       | empty\n    llamada :  ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6 SEMICOLON\n    llamada1 : exp pnFunCall_3 llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLONlectura : LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4escritura : ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec4esc : esc1 esc2\n    esc1 : exp\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2\n    sino : SINO pnCond3 bloque\n         | empty\n    condicional : MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3no_condicional : DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : PLOTHIST\n        | PLOTLINE\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_CH pnCteChar\n            | CTE_STR pnCteStr\n            | SUB pnNeg var_num\n            | var_num\n    \n    var_num : CTE_INT pnCteInt\n            | CTE_FLOAT pnCteFloat\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l pnExp10 mega_exp pnExp11\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r  exp pnExp9\n       | empty\n    \n    op_r : LT pnExp8\n         | GT pnExp8\n         | LE pnExp8\n         | GE pnExp8\n         | NOT_EQUAL pnExp8\n         | EQUAL pnExp8\n    exp : termino pnExp4 exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD pnExp2\n         | SUB pnExp2\n    termino : factor pnExp5 term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL pnExp3\n          | DIV pnExp3\n    \n    factor : var_cte\n           | LPAREN pnExp6 exp RPAREN pnExp7\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pnGOTOprincipal : \n    \n    pnPrincipal2 :\n    \n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pnFunDec1 : \n    \n    pnFunDec_2_3 :\n    \n    pnFunDec4 :  \n    \n    pnFunDec7 :\n    \n    pn_7_decRenglones :\n    \n    pn_8_decColumnas : \n    \n    pnFunCall_1_2 : \n    \n    pnFunCall_3 :\n    \n    pnFunCall_5_6 : \n    \n    pnNeg :\n    \n    pnCteInt :\n    \n    pnCteFloat :\n    \n    pnCteChar :\n    \n    pnCteStr :\n    \n    pnExp1 : \n    \n    pnExp2 : \n    \n    pnExp3 : \n    \n    pnExp4 : \n    \n    pnExp5 : \n    \n    pnExp6 : \n    \n    pnExp7 : \n    \n    pnExp8 : \n    \n    pnExp9 : \n    \n    pnExp10 : \n    \n    pnExp11 : \n    \n    pnSec1 : \n    \n    pnSec2 : \n    \n    pnSec3 : \n    \n    pnSec4 : \n    \n    pnCond1 :\n    \n    pnCond2 :\n    \n    pnCond3 :\n    \n    pnCiclos1 :  \n    \n    pnCiclos2 : \n    \n    pnCiclos3 : \n    \n    pnCiclos4 : \n    \n    pnCiclos5 : \n    \n    pnCiclos6 :\n    \n    pnCiclos7 :\n    \n    pnCiclos8 :\n    \n    pnRetorno :\n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,29,59,98,],[0,-1,-6,-38,]),'ID':([2,14,15,16,23,24,25,26,32,33,34,40,56,60,64,68,70,71,72,73,74,75,76,77,78,79,88,98,100,106,107,109,110,111,115,116,120,121,122,123,125,149,159,160,172,175,178,180,181,183,185,186,187,188,189,190,196,197,201,202,207,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,248,251,253,257,258,260,266,267,269,270,275,277,278,281,282,283,288,295,298,299,301,304,305,309,312,313,314,316,319,322,323,],[3,-129,-129,-129,37,-21,-22,-23,39,-129,-15,-14,37,81,94,81,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-166,-38,-156,124,140,151,152,153,81,140,140,140,151,140,-150,140,-51,-52,140,140,-154,-100,-101,140,-152,-152,-152,-152,-152,-152,240,241,-156,244,-157,140,140,-105,-106,-107,-108,-109,-110,140,-146,-146,140,-147,-147,140,-53,140,140,-159,-159,284,-114,-115,-119,-120,294,140,-57,-62,-63,-64,-126,-78,284,-161,-74,-165,-168,-72,-75,140,-77,-73,-69,-170,-76,]),'SEMICOLON':([3,36,37,45,46,47,51,55,57,58,65,66,81,96,97,102,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,158,160,161,191,192,193,194,198,199,206,208,210,211,212,213,229,231,234,236,239,249,254,255,256,261,265,268,276,278,287,297,302,306,315,317,],[4,44,-126,-130,-28,-29,-126,-27,-31,-135,-30,-126,-145,-32,-34,-126,-54,-55,-56,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-136,-124,207,-126,-126,-88,-89,-92,-93,-33,-139,-126,-171,257,258,-111,-113,-116,-118,-90,278,-35,-37,281,-151,-112,-117,295,-57,-122,-36,-81,314,319,-82,]),'VAR':([4,93,112,],[8,-133,8,]),'FUNCION':([4,5,6,7,9,10,20,35,41,42,43,44,98,204,247,],[-126,-127,-2,-3,22,-7,22,-126,-8,-9,-10,-26,-38,-134,-13,]),'PRINCIPAL':([4,5,6,7,9,10,19,20,21,31,35,41,42,43,44,98,204,247,],[-126,-127,-2,-3,-126,-7,30,-126,-5,-4,-126,-8,-9,-10,-26,-38,-134,-13,]),'LBRACE':([6,7,10,35,41,42,43,44,53,93,112,154,262,292,300,310,321,],[-2,-3,-7,-126,-8,-9,-10,-26,60,-133,-126,60,60,60,-162,60,60,]),'INT':([8,22,35,44,54,156,],[14,14,14,-26,14,14,]),'FLOAT':([8,22,35,44,54,156,],[15,15,15,-26,15,15,]),'CHAR':([8,22,35,44,54,156,],[16,16,16,-26,16,16,]),'DATAFRAME':([8,35,44,],[17,17,-26,]),'STRING':([8,35,44,],[18,18,-26,]),'TWO_DOTS':([11,12,13,14,15,16,17,18,24,25,26,27,28,],[23,-11,-12,-129,-129,-129,-129,-129,-21,-22,-23,-24,-25,]),'VOID':([22,],[33,]),'LPAREN':([30,38,39,50,81,82,83,84,85,86,87,89,90,91,92,100,101,103,104,105,107,108,115,116,120,121,123,125,140,141,142,145,146,147,148,149,172,175,178,180,181,183,185,186,187,188,189,190,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-128,49,-131,54,-137,-158,-158,-158,106,107,-163,110,111,-79,-80,-156,116,121,122,123,125,149,125,125,125,125,125,-150,-137,196,197,-83,-84,-85,-86,125,125,125,-154,-100,-101,125,-152,-152,-152,-152,-152,-152,-156,125,125,-105,-106,-107,-108,-109,-110,125,-146,-146,125,-147,-147,125,125,125,-114,-115,-119,-120,125,-168,125,]),'LBRACK':([37,58,66,81,102,140,151,210,246,],[48,-135,95,-145,120,-145,-145,253,277,]),'COMMA':([37,45,46,47,51,58,66,94,96,97,102,113,117,118,119,124,130,131,132,133,134,135,136,137,139,140,143,144,152,153,158,163,169,170,191,192,193,194,198,199,206,209,210,217,229,231,234,236,239,240,241,244,254,255,261,265,268,278,284,285,286,287,291,297,302,307,317,],[-126,-130,-28,-29,56,-135,-126,-132,-32,-34,-126,156,-54,-55,-56,171,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,202,203,-136,-138,215,-66,-126,-126,-88,-89,-92,-93,-33,251,-126,260,-111,-113,-116,-118,-90,271,272,275,-35,-37,-151,-112,-117,-57,-70,298,-71,-122,303,-36,-81,-87,-82,]),'CTE_INT':([48,95,100,107,115,116,120,121,123,125,138,149,172,175,178,180,181,183,185,186,187,188,189,190,195,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,260,266,267,269,270,277,298,305,313,],[52,114,-156,143,143,143,143,143,143,-150,-140,143,143,143,-154,-100,-101,143,-152,-152,-152,-152,-152,-152,143,-156,143,143,-105,-106,-107,-108,-109,-110,143,-146,-146,143,-147,-147,143,143,143,286,-114,-115,-119,-120,143,286,-168,143,]),'RPAREN':([49,54,61,62,63,94,102,113,116,117,118,119,126,127,128,129,130,131,132,133,134,135,136,137,139,140,143,144,151,155,157,162,163,164,166,167,168,169,170,174,176,177,179,182,184,191,192,193,194,198,199,200,205,209,210,214,216,218,220,222,229,231,234,236,239,245,250,251,252,254,255,259,261,263,264,265,268,278,279,284,286,287,289,290,294,297,302,307,308,311,317,],[53,-126,93,-16,-17,-132,-126,-126,-126,-54,-55,-56,173,-126,-126,-126,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-145,-18,-20,208,-138,-59,211,212,213,-126,-66,-94,-96,-97,-99,-102,-104,-126,-126,-88,-89,-92,-93,242,-19,-126,-126,-65,-68,261,-95,-153,-111,-113,-116,-118,-90,276,-58,-126,-61,-35,-37,-67,-151,-155,-103,-112,-117,-57,-60,-70,-71,-122,-98,302,306,-36,-81,-87,315,317,-82,]),'RBRACK':([52,102,114,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,165,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,278,280,287,296,297,302,317,],[58,-126,158,-54,-55,-56,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,210,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-57,297,-122,307,-36,-81,-82,]),'RBRACE':([60,67,68,69,70,71,72,73,74,75,76,77,78,79,98,99,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[-126,98,-126,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-39,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'REGRESA':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[82,82,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'LEE':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[83,83,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'ESCRIBE':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[84,84,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'CARGA':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[85,85,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'SI':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[86,86,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'MIENTRAS':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[87,87,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'DESDE':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[88,88,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'VARIABLES':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,203,207,248,257,258,271,272,278,281,282,283,288,295,299,301,303,304,309,312,314,316,319,322,323,],[89,89,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,246,-157,-53,-159,-159,246,246,-57,-62,-63,-64,-126,-78,-161,-74,246,-165,-72,-75,-77,-73,-69,-170,-76,]),'PLOTHIST':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[91,91,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'PLOTLINE':([60,68,70,71,72,73,74,75,76,77,78,79,98,159,160,207,248,257,258,278,281,282,283,288,295,299,301,304,309,312,314,316,319,322,323,],[92,92,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-38,-51,-52,-157,-53,-159,-159,-57,-62,-63,-64,-126,-78,-161,-74,-165,-72,-75,-77,-73,-69,-170,-76,]),'ASSIGN':([80,81,102,117,118,119,127,128,129,130,131,132,133,134,135,136,137,139,140,143,144,150,151,177,179,182,184,191,192,193,194,198,199,210,222,229,231,234,236,239,254,255,261,263,264,265,268,278,287,289,297,302,317,],[100,-145,-126,-54,-55,-56,175,-126,-126,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,201,-145,-97,-99,-102,-104,-126,-126,-88,-89,-92,-93,-126,-153,-111,-113,-116,-118,-90,-35,-37,-151,-155,-103,-112,-117,-57,-122,-98,-36,-81,-82,]),'MUL':([81,102,117,118,119,131,132,133,134,135,136,137,139,140,143,144,160,192,193,194,198,199,210,239,254,255,261,278,287,297,302,317,],[-145,-126,-54,-55,-56,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-124,237,-88,-89,-92,-93,-126,-90,-35,-37,-151,-57,-122,-36,-81,-82,]),'DIV':([81,102,117,118,119,131,132,133,134,135,136,137,139,140,143,144,160,192,193,194,198,199,210,239,254,255,261,278,287,297,302,317,],[-145,-126,-54,-55,-56,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-124,238,-88,-89,-92,-93,-126,-90,-35,-37,-151,-57,-122,-36,-81,-82,]),'ADD':([81,102,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,160,191,192,193,194,198,199,210,234,236,239,254,255,261,268,278,287,297,302,317,],[-145,-126,-54,-55,-56,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-124,232,-126,-88,-89,-92,-93,-126,-116,-118,-90,-35,-37,-151,-117,-57,-122,-36,-81,-82,]),'SUB':([81,100,102,107,115,116,117,118,119,120,121,123,125,130,131,132,133,134,135,136,137,139,140,143,144,149,160,172,175,178,180,181,183,185,186,187,188,189,190,191,192,193,194,198,199,201,210,215,221,223,224,225,226,227,228,230,232,233,234,235,236,237,238,239,243,251,253,254,255,261,266,267,268,269,270,277,278,287,297,302,305,313,317,],[-145,-156,-126,138,138,138,-54,-55,-56,138,138,138,-150,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,138,-124,138,138,-154,-100,-101,138,-152,-152,-152,-152,-152,-152,233,-126,-88,-89,-92,-93,-156,-126,138,138,-105,-106,-107,-108,-109,-110,138,-146,-146,-116,138,-118,-147,-147,-90,138,138,138,-35,-37,-151,-114,-115,-117,-119,-120,138,-57,-122,-36,-81,-168,138,-82,]),'SINO':([98,288,],[-38,300,]),'CTE_CH':([100,107,115,116,120,121,123,125,149,172,175,178,180,181,183,185,186,187,188,189,190,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-156,136,136,136,136,136,136,-150,136,136,136,-154,-100,-101,136,-152,-152,-152,-152,-152,-152,-156,136,136,-105,-106,-107,-108,-109,-110,136,-146,-146,136,-147,-147,136,136,136,-114,-115,-119,-120,136,-168,136,]),'CTE_STR':([100,107,115,116,120,121,123,125,149,171,172,175,178,180,181,183,185,186,187,188,189,190,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-156,137,137,137,137,137,137,-150,137,217,137,137,-154,-100,-101,137,-152,-152,-152,-152,-152,-152,-156,137,137,-105,-106,-107,-108,-109,-110,137,-146,-146,137,-147,-147,137,137,137,-114,-115,-119,-120,137,-168,137,]),'CORRELACIONA':([100,107,115,116,120,121,123,125,149,172,175,178,180,181,183,185,186,187,188,189,190,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-156,142,142,142,142,142,142,-150,142,142,142,-154,-100,-101,142,-152,-152,-152,-152,-152,-152,-156,142,142,-105,-106,-107,-108,-109,-110,142,-146,-146,142,-147,-147,142,142,142,-114,-115,-119,-120,142,-168,142,]),'CTE_FLOAT':([100,107,115,116,120,121,123,125,138,149,172,175,178,180,181,183,185,186,187,188,189,190,195,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-156,144,144,144,144,144,144,-150,-140,144,144,144,-154,-100,-101,144,-152,-152,-152,-152,-152,-152,144,-156,144,144,-105,-106,-107,-108,-109,-110,144,-146,-146,144,-147,-147,144,144,144,-114,-115,-119,-120,144,-168,144,]),'MEDIA':([100,107,115,116,120,121,123,125,149,172,175,178,180,181,183,185,186,187,188,189,190,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-156,145,145,145,145,145,145,-150,145,145,145,-154,-100,-101,145,-152,-152,-152,-152,-152,-152,-156,145,145,-105,-106,-107,-108,-109,-110,145,-146,-146,145,-147,-147,145,145,145,-114,-115,-119,-120,145,-168,145,]),'MEDIANA':([100,107,115,116,120,121,123,125,149,172,175,178,180,181,183,185,186,187,188,189,190,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-156,146,146,146,146,146,146,-150,146,146,146,-154,-100,-101,146,-152,-152,-152,-152,-152,-152,-156,146,146,-105,-106,-107,-108,-109,-110,146,-146,-146,146,-147,-147,146,146,146,-114,-115,-119,-120,146,-168,146,]),'MODA':([100,107,115,116,120,121,123,125,149,172,175,178,180,181,183,185,186,187,188,189,190,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-156,147,147,147,147,147,147,-150,147,147,147,-154,-100,-101,147,-152,-152,-152,-152,-152,-152,-156,147,147,-105,-106,-107,-108,-109,-110,147,-146,-146,147,-147,-147,147,147,147,-114,-115,-119,-120,147,-168,147,]),'VARIANZA':([100,107,115,116,120,121,123,125,149,172,175,178,180,181,183,185,186,187,188,189,190,201,215,221,223,224,225,226,227,228,230,232,233,235,237,238,243,251,253,266,267,269,270,277,305,313,],[-156,148,148,148,148,148,148,-150,148,148,148,-154,-100,-101,148,-152,-152,-152,-152,-152,-152,-156,148,148,-105,-106,-107,-108,-109,-110,148,-146,-146,148,-147,-147,148,148,148,-114,-115,-119,-120,148,-168,148,]),'LT':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,278,287,297,302,317,],[-126,-54,-55,-56,185,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-57,-122,-36,-81,-82,]),'GT':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,278,287,297,302,317,],[-126,-54,-55,-56,186,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-57,-122,-36,-81,-82,]),'LE':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,278,287,297,302,317,],[-126,-54,-55,-56,187,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-57,-122,-36,-81,-82,]),'GE':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,278,287,297,302,317,],[-126,-54,-55,-56,188,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-57,-122,-36,-81,-82,]),'NOT_EQUAL':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,278,287,297,302,317,],[-126,-54,-55,-56,189,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-57,-122,-36,-81,-82,]),'EQUAL':([102,117,118,119,129,130,131,132,133,134,135,136,137,139,140,143,144,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,278,287,297,302,317,],[-126,-54,-55,-56,190,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-57,-122,-36,-81,-82,]),'AND':([102,117,118,119,128,129,130,131,132,133,134,135,136,137,139,140,143,144,182,184,191,192,193,194,198,199,210,222,229,231,234,236,239,254,255,261,264,265,268,278,287,297,302,317,],[-126,-54,-55,-56,180,-126,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-102,-104,-126,-126,-88,-89,-92,-93,-126,-153,-111,-113,-116,-118,-90,-35,-37,-151,-103,-112,-117,-57,-122,-36,-81,-82,]),'OR':([102,117,118,119,128,129,130,131,132,133,134,135,136,137,139,140,143,144,182,184,191,192,193,194,198,199,210,222,229,231,234,236,239,254,255,261,264,265,268,278,287,297,302,317,],[-126,-54,-55,-56,181,-126,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-102,-104,-126,-126,-88,-89,-92,-93,-126,-153,-111,-113,-116,-118,-90,-35,-37,-151,-103,-112,-117,-57,-122,-36,-81,-82,]),'HASTA':([102,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,274,278,287,293,297,302,317,],[-126,-54,-55,-56,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-167,-57,-122,305,-36,-81,-82,]),'HACER':([102,117,118,119,130,131,132,133,134,135,136,137,139,140,143,144,191,192,193,194,198,199,210,229,231,234,236,239,254,255,261,265,268,278,287,297,302,317,318,320,],[-126,-54,-55,-56,-148,-149,-121,-123,-124,-125,-143,-144,-91,-145,-141,-142,-126,-126,-88,-89,-92,-93,-126,-111,-113,-116,-118,-90,-35,-37,-151,-112,-117,-57,-122,-36,-81,-82,-169,321,]),'ENTONCES':([173,219,],[-160,262,]),'HAZ':([242,273,],[-164,292,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'var1':([4,112,],[5,154,]),'var':([4,112,],[6,6,]),'empty':([4,9,20,35,37,51,54,60,66,68,102,112,113,116,127,128,129,169,191,192,209,210,251,288,],[7,21,21,43,47,57,63,69,97,69,119,7,157,164,176,179,184,216,231,236,252,255,164,301,]),'pnGOTOprincipal':([5,],[9,]),'var2':([8,35,],[10,42,]),'type':([8,35,],[11,11,]),'tipo_simple':([8,22,35,54,156,],[12,34,12,64,64,]),'tipo_compuesto':([8,35,],[13,13,]),'func1':([9,20,],[19,31,]),'funcion':([9,20,],[20,20,]),'pn_1_setCurrentType':([14,15,16,17,18,33,],[24,25,26,27,28,40,]),'principal':([19,],[29,]),'tipo_fun':([22,],[32,]),'lista_ids':([23,],[35,]),'lista':([23,56,],[36,65,]),'pnPrincipal2':([30,],[38,]),'var3':([35,],[41,]),'dd':([37,],[45,]),'dim_dec':([37,],[46,]),'pnFunDec1':([39,],[50,]),'pn_2_addVariable':([45,],[51,]),'lista1':([51,],[55,]),'bloque':([53,154,262,292,310,321,],[59,204,288,304,316,322,]),'parametros':([54,],[61,]),'param':([54,156,],[62,205,]),'pn_7_decRenglones':([58,],[66,]),'est':([60,68,],[67,99,]),'estatutos':([60,68,],[68,68,]),'asignacion':([60,68,],[70,70,]),'llamada':([60,68,107,115,116,120,121,123,149,172,175,183,215,221,230,235,243,251,253,277,313,],[71,71,134,160,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'retorno':([60,68,],[72,72,]),'lectura':([60,68,],[73,73,]),'escritura':([60,68,],[74,74,]),'carga_datos':([60,68,],[75,75,]),'decision':([60,68,],[76,76,]),'condicional':([60,68,],[77,77,]),'no_condicional':([60,68,],[78,78,]),'funciones_especiales_void':([60,68,],[79,79,]),'variable':([60,68,107,109,115,116,120,121,122,123,149,172,175,183,215,221,230,235,243,251,253,277,313,],[80,80,133,150,133,133,133,133,167,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'fev':([60,68,],[90,90,]),'dim_dec1':([66,],[96,]),'pnFunCall_1_2':([81,140,],[101,101,]),'pnExp1':([81,140,151,],[102,102,102,]),'pnSec3':([82,83,84,],[103,104,105,]),'pnCiclos1':([87,],[108,]),'pnCiclos4':([88,],[109,]),'pnFunDec4':([93,],[112,]),'pnFunDec_2_3':([94,],[113,]),'pnSec1':([100,201,],[115,243,]),'di':([102,],[117,]),'dim_index':([102,],[118,]),'expresion':([107,149,175,],[126,200,220,]),'mega_exp':([107,149,175,221,],[127,127,127,263,]),'super_exp':([107,149,175,221,],[128,128,128,128,]),'exp':([107,115,116,120,121,123,149,172,175,183,215,221,230,243,251,253,277,313,],[129,161,163,165,166,170,129,218,129,222,170,129,265,274,163,280,296,318,]),'termino':([107,115,116,120,121,123,149,172,175,183,215,221,230,235,243,251,253,277,313,],[130,130,130,130,130,130,130,130,130,130,130,130,130,268,130,130,130,130,130,]),'factor':([107,115,116,120,121,123,149,172,175,183,215,221,230,235,243,251,253,277,313,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'var_cte':([107,115,116,120,121,123,149,172,175,183,215,221,230,235,243,251,253,277,313,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'funciones_especiales':([107,115,116,120,121,123,149,172,175,183,215,221,230,235,243,251,253,277,313,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'var_num':([107,115,116,120,121,123,149,172,175,183,195,215,221,230,235,243,251,253,277,313,],[139,139,139,139,139,139,139,139,139,139,239,139,139,139,139,139,139,139,139,139,]),'fe':([107,115,116,120,121,123,149,172,175,183,215,221,230,235,243,251,253,277,313,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'param1':([113,],[155,]),'asig':([115,],[159,]),'llamada1':([116,251,],[162,279,]),'esc':([123,215,],[168,259,]),'esc1':([123,215,],[169,169,]),'pnExp6':([125,],[172,]),'expresion1':([127,],[174,]),'meg':([128,],[177,]),'op_l':([128,],[178,]),'sp':([129,],[182,]),'op_r':([129,],[183,]),'pnExp4':([130,],[191,]),'pnExp5':([131,],[192,]),'pnCteChar':([136,],[193,]),'pnCteStr':([137,],[194,]),'pnNeg':([138,],[195,]),'pnCteInt':([143,],[198,]),'pnCteFloat':([144,],[199,]),'pn_8_decColumnas':([158,],[206,]),'pnFunCall_3':([163,],[209,]),'esc2':([169,],[214,]),'pnCond1':([173,],[219,]),'pnExp10':([178,],[221,]),'pnExp8':([185,186,187,188,189,190,],[223,224,225,226,227,228,]),'exp1':([191,],[229,]),'op_a':([191,],[230,]),'term':([192,],[234,]),'op_a1':([192,],[235,]),'v_exp':([203,271,272,303,],[245,290,291,311,]),'pnFunDec7':([204,],[247,]),'pnSec2':([207,],[248,]),'pnFunCall_5_6':([208,],[249,]),'llamada2':([209,],[250,]),'dim_index1':([210,],[254,]),'pnRetorno':([211,],[256,]),'pnExp9':([222,],[264,]),'pnExp2':([232,233,],[266,267,]),'pnExp3':([237,238,],[269,270,]),'pnCiclos2':([242,],[273,]),'pnSec4':([257,258,],[282,283,]),'ca':([260,298,],[285,308,]),'pnExp7':([261,],[287,]),'pnExp11':([263,],[289,]),'pnCiclos5':([274,],[293,]),'sino':([288,],[299,]),'pnCond2':([299,],[309,]),'pnCond3':([300,],[310,]),'pnCiclos3':([304,],[312,]),'pnCiclos6':([305,],[313,]),'pnCiclos7':([318,],[320,]),'pnCiclos8':([322,],[323,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal','programa',7,'p_programa','parser.py',176),
  ('var1 -> var','var1',1,'p_var1','parser.py',182),
  ('var1 -> empty','var1',1,'p_var1','parser.py',183),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',189),
  ('func1 -> empty','func1',1,'p_func1','parser.py',190),
  ('principal -> PRINCIPAL pnPrincipal2 LPAREN RPAREN bloque','principal',5,'p_principal','parser.py',195),
  ('var -> VAR var2','var',2,'p_var','parser.py',200),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',204),
  ('var3 -> var2','var3',1,'p_var3','parser.py',209),
  ('var3 -> empty','var3',1,'p_var3','parser.py',210),
  ('type -> tipo_simple','type',1,'p_type','parser.py',216),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',217),
  ('funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7','funcion',11,'p_funcion','parser.py',222),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',227),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',228),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',234),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',235),
  ('param -> tipo_simple ID pnFunDec_2_3 param1','param',4,'p_param','parser.py',240),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',245),
  ('param1 -> empty','param1',1,'p_param1','parser.py',246),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',252),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',253),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',254),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',259),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',260),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',265),
  ('lista -> ID dd pn_2_addVariable lista1','lista',4,'p_lista','parser.py',268),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',272),
  ('dd -> empty','dd',1,'p_dd','parser.py',273),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',278),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',279),
  ('dim_dec -> LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1','dim_dec',5,'p_dim_dec','parser.py',284),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK pn_8_decColumnas','dim_dec1',4,'p_dim_dec1','parser.py',288),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',289),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',293),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',297),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',298),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',304),
  ('est -> estatutos est','est',2,'p_est','parser.py',309),
  ('est -> empty','est',1,'p_est','parser.py',310),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',316),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',317),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',318),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',319),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',320),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',321),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',322),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',323),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',324),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',325),
  ('asignacion -> variable ASSIGN pnSec1 asig','asignacion',4,'p_asignacion','parser.py',332),
  ('asig -> llamada','asig',1,'p_asig','parser.py',336),
  ('asig -> exp SEMICOLON pnSec2','asig',3,'p_asig','parser.py',337),
  ('variable -> ID pnExp1 di','variable',3,'p_variable','parser.py',340),
  ('di -> dim_index','di',1,'p_di','parser.py',344),
  ('di -> empty','di',1,'p_di','parser.py',345),
  ('llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6 SEMICOLON','llamada',7,'p_llamada','parser.py',349),
  ('llamada1 -> exp pnFunCall_3 llamada2','llamada1',3,'p_llamada1','parser.py',354),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',355),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',361),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',362),
  ('retorno -> REGRESA pnSec3 LPAREN exp RPAREN pnRetorno SEMICOLON','retorno',7,'p_retorno','parser.py',367),
  ('lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4','lectura',7,'p_lectura','parser.py',370),
  ('escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec4','escritura',7,'p_escritura','parser.py',373),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',376),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',380),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',384),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',385),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',389),
  ('ca -> ID','ca',1,'p_ca','parser.py',393),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',394),
  ('decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2','decision',9,'p_decision','parser.py',399),
  ('sino -> SINO pnCond3 bloque','sino',3,'p_sino','parser.py',403),
  ('sino -> empty','sino',1,'p_sino','parser.py',404),
  ('condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3','condicional',9,'p_condicional','parser.py',409),
  ('no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8','no_condicional',14,'p_no_condicional','parser.py',412),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',417),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',418),
  ('fev -> PLOTHIST','fev',1,'p_fev','parser.py',422),
  ('fev -> PLOTLINE','fev',1,'p_fev','parser.py',423),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',428),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',429),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',433),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',434),
  ('fe -> MODA','fe',1,'p_fe','parser.py',435),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',436),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',439),
  ('var_cte -> CTE_CH pnCteChar','var_cte',2,'p_var_cte','parser.py',446),
  ('var_cte -> CTE_STR pnCteStr','var_cte',2,'p_var_cte','parser.py',447),
  ('var_cte -> SUB pnNeg var_num','var_cte',3,'p_var_cte','parser.py',448),
  ('var_cte -> var_num','var_cte',1,'p_var_cte','parser.py',449),
  ('var_num -> CTE_INT pnCteInt','var_num',2,'p_var_num','parser.py',462),
  ('var_num -> CTE_FLOAT pnCteFloat','var_num',2,'p_var_num','parser.py',463),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',470),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',474),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',475),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',479),
  ('meg -> op_l pnExp10 mega_exp pnExp11','meg',4,'p_meg','parser.py',483),
  ('meg -> empty','meg',1,'p_meg','parser.py',484),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',488),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',489),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',493),
  ('sp -> op_r exp pnExp9','sp',3,'p_sp','parser.py',497),
  ('sp -> empty','sp',1,'p_sp','parser.py',498),
  ('op_r -> LT pnExp8','op_r',2,'p_op_r','parser.py',502),
  ('op_r -> GT pnExp8','op_r',2,'p_op_r','parser.py',503),
  ('op_r -> LE pnExp8','op_r',2,'p_op_r','parser.py',504),
  ('op_r -> GE pnExp8','op_r',2,'p_op_r','parser.py',505),
  ('op_r -> NOT_EQUAL pnExp8','op_r',2,'p_op_r','parser.py',506),
  ('op_r -> EQUAL pnExp8','op_r',2,'p_op_r','parser.py',507),
  ('exp -> termino pnExp4 exp1','exp',3,'p_exp','parser.py',511),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',515),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',516),
  ('op_a -> ADD pnExp2','op_a',2,'p_op_a','parser.py',520),
  ('op_a -> SUB pnExp2','op_a',2,'p_op_a','parser.py',521),
  ('termino -> factor pnExp5 term','termino',3,'p_termino','parser.py',525),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',529),
  ('term -> empty','term',1,'p_term','parser.py',530),
  ('op_a1 -> MUL pnExp3','op_a1',2,'p_op_a1','parser.py',534),
  ('op_a1 -> DIV pnExp3','op_a1',2,'p_op_a1','parser.py',535),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',540),
  ('factor -> LPAREN pnExp6 exp RPAREN pnExp7','factor',5,'p_factor','parser.py',541),
  ('factor -> variable','factor',1,'p_factor','parser.py',542),
  ('factor -> llamada','factor',1,'p_factor','parser.py',543),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',544),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',549),
  ('pnGOTOprincipal -> <empty>','pnGOTOprincipal',0,'p_pnGOTOprincipal','parser.py',851),
  ('pnPrincipal2 -> <empty>','pnPrincipal2',0,'p_pnPrincipal2','parser.py',858),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',877),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',887),
  ('pnFunDec1 -> <empty>','pnFunDec1',0,'p_pnFunDec1','parser.py',908),
  ('pnFunDec_2_3 -> <empty>','pnFunDec_2_3',0,'p_pnFunDec_2_3','parser.py',938),
  ('pnFunDec4 -> <empty>','pnFunDec4',0,'p_pnFunDec4','parser.py',959),
  ('pnFunDec7 -> <empty>','pnFunDec7',0,'p_pnFunDec7','parser.py',971),
  ('pn_7_decRenglones -> <empty>','pn_7_decRenglones',0,'p_pn_7_decRenglones','parser.py',992),
  ('pn_8_decColumnas -> <empty>','pn_8_decColumnas',0,'p_pn_8_decColumnas','parser.py',1003),
  ('pnFunCall_1_2 -> <empty>','pnFunCall_1_2',0,'p_pnFunCall_1_2','parser.py',1027),
  ('pnFunCall_3 -> <empty>','pnFunCall_3',0,'p_pnFunCall_3','parser.py',1050),
  ('pnFunCall_5_6 -> <empty>','pnFunCall_5_6',0,'p_pnFunCall_5_6','parser.py',1084),
  ('pnNeg -> <empty>','pnNeg',0,'p_pnNeg','parser.py',1105),
  ('pnCteInt -> <empty>','pnCteInt',0,'p_pnCteInt','parser.py',1115),
  ('pnCteFloat -> <empty>','pnCteFloat',0,'p_pnCteFloat','parser.py',1127),
  ('pnCteChar -> <empty>','pnCteChar',0,'p_pnCteChar','parser.py',1139),
  ('pnCteStr -> <empty>','pnCteStr',0,'p_pnCteStr','parser.py',1148),
  ('pnExp1 -> <empty>','pnExp1',0,'p_pnExp1','parser.py',1158),
  ('pnExp2 -> <empty>','pnExp2',0,'p_pnExp2','parser.py',1189),
  ('pnExp3 -> <empty>','pnExp3',0,'p_pnExp3','parser.py',1202),
  ('pnExp4 -> <empty>','pnExp4',0,'p_pnExp4','parser.py',1215),
  ('pnExp5 -> <empty>','pnExp5',0,'p_pnExp5','parser.py',1239),
  ('pnExp6 -> <empty>','pnExp6',0,'p_pnExp6','parser.py',1263),
  ('pnExp7 -> <empty>','pnExp7',0,'p_pnExp7','parser.py',1273),
  ('pnExp8 -> <empty>','pnExp8',0,'p_pnExp8','parser.py',1281),
  ('pnExp9 -> <empty>','pnExp9',0,'p_pnExp9','parser.py',1292),
  ('pnExp10 -> <empty>','pnExp10',0,'p_pnExp10','parser.py',1317),
  ('pnExp11 -> <empty>','pnExp11',0,'p_pnExp11','parser.py',1329),
  ('pnSec1 -> <empty>','pnSec1',0,'p_pnSec1','parser.py',1355),
  ('pnSec2 -> <empty>','pnSec2',0,'p_pnSec2','parser.py',1367),
  ('pnSec3 -> <empty>','pnSec3',0,'p_pnSec3','parser.py',1396),
  ('pnSec4 -> <empty>','pnSec4',0,'p_pnSec4','parser.py',1408),
  ('pnCond1 -> <empty>','pnCond1',0,'p_pnCond1','parser.py',1436),
  ('pnCond2 -> <empty>','pnCond2',0,'p_pnCond2','parser.py',1454),
  ('pnCond3 -> <empty>','pnCond3',0,'p_pnCond3','parser.py',1468),
  ('pnCiclos1 -> <empty>','pnCiclos1',0,'p_pnCiclos1','parser.py',1482),
  ('pnCiclos2 -> <empty>','pnCiclos2',0,'p_pnCiclos2','parser.py',1492),
  ('pnCiclos3 -> <empty>','pnCiclos3',0,'p_pnCiclos3','parser.py',1507),
  ('pnCiclos4 -> <empty>','pnCiclos4',0,'p_pnCiclos4','parser.py',1521),
  ('pnCiclos5 -> <empty>','pnCiclos5',0,'p_pnCiclos5','parser.py',1531),
  ('pnCiclos6 -> <empty>','pnCiclos6',0,'p_pnCiclos6','parser.py',1558),
  ('pnCiclos7 -> <empty>','pnCiclos7',0,'p_pnCiclos7','parser.py',1579),
  ('pnCiclos8 -> <empty>','pnCiclos8',0,'p_pnCiclos8','parser.py',1612),
  ('pnRetorno -> <empty>','pnRetorno',0,'p_pnRetorno','parser.py',1625),
]
