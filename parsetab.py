
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DISTRIBUCION DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TENDENCIA TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pn_4_params param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID dd pn_2_addVariable lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK pn_8_decColumnas\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN pnQuadGenSec1 asig\n    asig : llamada\n         | exp SEMICOLON pnQuadGenSec2\n    variable : ID pnQuadGenExp1 di\n    di : dim_index\n       | empty\n    llamada :  ID LPAREN llamada1 RPAREN SEMICOLON\n    llamada1 : exp llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN SEMICOLONlectura : LEE LPAREN variable RPAREN SEMICOLONescritura : ESCRIBE LPAREN esc RPAREN SEMICOLONesc : esc1 esc2\n    esc1 : exp\n         | CTE_STR\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN ENTONCES bloque sino\n    sino : SINO bloque\n         | empty\n    condicional : MIENTRAS LPAREN expresion RPAREN HAZ bloqueno_condicional : DESDE variable ASSIGN exp HASTA exp HACER bloque\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : DISTRIBUCION\n        | TENDENCIA\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_INT pnQuadGenExp1\n            | CTE_FLOAT pnQuadGenExp1\n            | CTE_CH \n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l pnQuadGenExp10 mega_exp pnQuadGenExp11\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r  exp pnQuadGenExp9\n       | empty\n    \n    op_r : LT pnQuadGenExp8\n         | GT pnQuadGenExp8\n         | LE pnQuadGenExp8\n         | GE pnQuadGenExp8\n         | NOT_EQUAL pnQuadGenExp8\n         | EQUAL pnQuadGenExp8\n    exp : termino pnQuadGenExp4 exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD pnQuadGenExp2\n         | SUB pnQuadGenExp2\n    termino : factor pnQuadGenExp5 term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL pnQuadGenExp3\n          | DIV pnQuadGenExp3\n    \n    factor : var_cte\n           | LPAREN pnQuadGenExp6 exp RPAREN pnQuadGenExp7\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pn_3_addFunction : \n    \n    pn_4_params :\n    \n    pn_5_updateContParams :  \n    \n    pn_6_end :\n    \n    pn_7_decRenglones :\n    \n    pn_8_decColumnas : \n    \n    pnQuadGenExp8 : \n    \n    pnQuadGenExp9 : \n    \n    pnQuadGenExp4 : \n    \n    pnQuadGenExp2 : \n    \n    pnQuadGenExp5 : \n    \n    pnQuadGenExp3 : \n    \n    pnQuadGenExp1 : \n    \n    pnQuadGenExp6 : \n    \n    pnQuadGenExp7 : \n    \n    pnQuadGenExp10 : \n    \n    pnQuadGenExp11 : \n    \n    pnQuadGenSec1 : \n    \n    pnQuadGenSec2 : \n    '
    
_lr_action_items = {'HAZ':([168,],[218,]),'SUB':([73,100,110,111,112,115,117,118,124,125,126,128,139,140,142,155,161,167,169,188,210,213,233,234,250,252,259,260,271,282,286,293,],[-139,-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,-55,-54,-56,208,-124,-89,-90,-122,-114,-116,-124,-57,-115,-141,-37,-35,-120,-82,-36,-83,]),'VOID':([10,],[25,]),'EQUAL':([100,110,111,112,115,117,118,124,125,126,128,130,139,140,142,155,161,167,169,204,207,210,213,233,234,245,250,252,259,260,271,282,286,293,],[-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,176,-55,-54,-56,-124,-124,-89,-90,-109,-111,-114,-116,-124,-57,-110,-115,-141,-37,-35,-120,-82,-36,-83,]),'CARGA':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[56,-47,-42,-43,-48,56,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'CHAR':([6,10,38,46,53,198,],[19,19,19,-26,19,19,]),'SINO':([93,264,],[-38,278,]),'CORRELACIONA':([91,92,94,99,101,104,123,137,138,141,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,244,246,248,249,261,262,],[129,129,129,-144,129,129,-140,129,129,129,-98,-142,-99,129,129,-133,-133,-133,129,-133,-133,-133,129,129,-136,129,-136,129,-138,-138,129,-104,-107,-106,-108,-103,-105,129,-112,-113,-117,-118,129,129,]),'CTE_CH':([91,92,94,99,101,104,123,137,138,141,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,244,246,248,249,261,262,],[111,111,111,-144,111,111,-140,111,111,111,-98,-142,-99,111,111,-133,-133,-133,111,-133,-133,-133,111,111,-136,111,-136,111,-138,-138,111,-104,-107,-106,-108,-103,-105,111,-112,-113,-117,-118,111,111,]),'MUL':([73,100,110,111,115,117,118,124,125,126,128,139,140,142,161,167,169,188,233,234,252,259,260,271,282,286,293,],[-139,-124,-119,-91,-123,-122,-137,-121,-139,-139,-139,-55,-54,-56,211,-89,-90,-122,-124,-57,-141,-37,-35,-120,-82,-36,-83,]),'TENDENCIA':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[58,-47,-42,-43,-48,58,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'DIV':([73,100,110,111,115,117,118,124,125,126,128,139,140,142,161,167,169,188,233,234,252,259,260,271,282,286,293,],[-139,-124,-119,-91,-123,-122,-137,-121,-139,-139,-139,-55,-54,-56,212,-89,-90,-122,-124,-57,-141,-37,-35,-120,-82,-36,-83,]),'RBRACE':([51,60,61,63,65,66,68,69,71,74,76,78,80,81,93,96,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[-124,93,-47,-42,-43,-40,-48,-124,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'NOT_EQUAL':([100,110,111,112,115,117,118,124,125,126,128,130,139,140,142,155,161,167,169,204,207,210,213,233,234,245,250,252,259,260,271,282,286,293,],[-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,172,-55,-54,-56,-124,-124,-89,-90,-109,-111,-114,-116,-124,-57,-110,-115,-141,-37,-35,-120,-82,-36,-83,]),'RPAREN':([34,53,83,84,85,97,100,101,105,110,111,112,114,115,117,118,121,124,125,126,127,128,130,131,132,133,134,135,139,140,142,143,144,145,146,148,149,155,157,160,161,162,163,167,169,173,179,182,184,192,193,194,199,200,204,207,210,213,215,217,223,229,233,234,235,238,240,245,247,250,252,255,259,260,267,268,269,270,271,273,282,286,287,289,290,293,],[41,-124,-16,106,-17,-139,-124,-124,-128,-119,-91,-135,-124,-123,-122,-137,-124,-121,-139,-139,168,-139,-124,180,181,-124,-67,-66,-55,-54,-56,191,-59,-124,195,197,-124,-124,-95,-97,-124,-92,-94,-89,-90,-100,-102,-65,-69,-58,-124,-61,-18,-20,-109,-111,-114,-116,-93,252,-134,-68,-124,-57,-60,263,-19,-110,-143,-115,-141,-101,-37,-35,-72,-71,-96,282,-120,284,-82,-36,-88,292,293,-83,]),'SEMICOLON':([3,39,40,47,49,50,54,73,86,88,89,100,107,108,110,111,112,115,117,118,124,125,126,128,139,140,142,151,153,155,161,167,169,180,181,188,189,191,195,204,207,210,213,233,234,242,245,250,252,259,260,263,265,271,282,284,286,292,293,],[4,46,-124,-126,-28,-29,-124,-139,-27,-31,-131,-124,-30,-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,-55,-54,-56,-32,-34,-124,-124,-89,-90,227,228,-122,232,234,236,-109,-111,-114,-116,-124,-57,-132,-110,-115,-141,-37,-35,277,-33,-120,-82,291,-36,294,-83,]),'VARIABLES':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,196,227,228,232,234,236,251,253,254,258,264,277,279,280,283,285,288,291,294,],[67,-47,-42,-43,-48,67,-50,-49,-41,-44,-46,-45,-38,-51,-52,237,-62,-64,-145,-57,-63,237,-76,237,-53,-124,-79,-73,-75,237,-77,-74,-78,-70,]),'GE':([100,110,111,112,115,117,118,124,125,126,128,130,139,140,142,155,161,167,169,204,207,210,213,233,234,245,250,252,259,260,271,282,286,293,],[-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,174,-55,-54,-56,-124,-124,-89,-90,-109,-111,-114,-116,-124,-57,-110,-115,-141,-37,-35,-120,-82,-36,-83,]),'DATAFRAME':([6,38,46,],[18,18,-26,]),'ESCRIBE':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[62,-47,-42,-43,-48,62,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'MODA':([91,92,94,99,101,104,123,137,138,141,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,244,246,248,249,261,262,],[116,116,116,-144,116,116,-140,116,116,116,-98,-142,-99,116,116,-133,-133,-133,116,-133,-133,-133,116,116,-136,116,-136,116,-138,-138,116,-104,-107,-106,-108,-103,-105,116,-112,-113,-117,-118,116,116,]),'LT':([100,110,111,112,115,117,118,124,125,126,128,130,139,140,142,155,161,167,169,204,207,210,213,233,234,245,250,252,259,260,271,282,286,293,],[-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,177,-55,-54,-56,-124,-124,-89,-90,-109,-111,-114,-116,-124,-57,-110,-115,-141,-37,-35,-120,-82,-36,-83,]),'COMMA':([40,47,49,50,54,89,100,105,108,109,110,111,112,115,117,118,124,125,126,128,133,134,135,136,139,140,142,145,147,149,151,153,155,161,167,169,203,204,207,210,213,216,219,230,233,234,242,245,250,252,259,260,265,266,267,268,271,272,282,286,287,293,],[-124,-126,-28,-29,87,-131,-124,-128,-124,154,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,183,-67,-66,185,-55,-54,-56,193,196,198,-32,-34,-124,-124,-89,-90,243,-109,-111,-114,-116,251,254,256,-124,-57,-132,-110,-115,-141,-37,-35,-33,281,-72,-71,-120,283,-82,-36,-88,-83,]),'DISTRIBUCION':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[64,-47,-42,-43,-48,64,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'MEDIANA':([91,92,94,99,101,104,123,137,138,141,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,244,246,248,249,261,262,],[119,119,119,-144,119,119,-140,119,119,119,-98,-142,-99,119,119,-133,-133,-133,119,-133,-133,-133,119,119,-136,119,-136,119,-138,-138,119,-104,-107,-106,-108,-103,-105,119,-112,-113,-117,-118,119,119,]),'ASSIGN':([72,73,97,98,100,110,111,112,114,115,117,118,121,124,125,126,128,130,139,140,142,155,157,160,161,167,169,173,179,204,207,210,213,223,233,234,245,247,250,252,255,259,260,269,271,282,286,293,],[99,-139,-139,137,-124,-119,-91,-135,-124,-123,-122,-137,164,-121,-139,-139,-139,-124,-55,-54,-56,-124,-95,-97,-124,-89,-90,-100,-102,-109,-111,-114,-116,-134,-124,-57,-110,-143,-115,-141,-101,-37,-35,-96,-120,-82,-36,-83,]),'$end':([1,23,35,52,93,],[0,-130,-1,-6,-38,]),'HACER':([100,110,111,112,115,117,118,124,125,126,128,139,140,142,155,161,167,169,204,207,210,213,233,234,245,250,252,257,259,260,271,282,286,293,],[-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,-55,-54,-56,-124,-124,-89,-90,-109,-111,-114,-116,-124,-57,-110,-115,-141,274,-37,-35,-120,-82,-36,-83,]),'GT':([100,110,111,112,115,117,118,124,125,126,128,130,139,140,142,155,161,167,169,204,207,210,213,233,234,245,250,252,259,260,271,282,286,293,],[-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,171,-55,-54,-56,-124,-124,-89,-90,-109,-111,-114,-116,-124,-57,-110,-115,-141,-37,-35,-120,-82,-36,-83,]),'STRING':([6,38,46,],[15,15,-26,]),'MEDIA':([91,92,94,99,101,104,123,137,138,141,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,244,246,248,249,261,262,],[120,120,120,-144,120,120,-140,120,120,120,-98,-142,-99,120,120,-133,-133,-133,120,-133,-133,-133,120,120,-136,120,-136,120,-138,-138,120,-104,-107,-106,-108,-103,-105,120,-112,-113,-117,-118,120,120,]),'REGRESA':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[59,-47,-42,-43,-48,59,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'RBRACK':([55,100,110,111,112,115,117,118,124,125,126,128,139,140,142,155,161,167,169,190,202,204,207,210,213,233,234,245,250,252,259,260,271,275,276,282,286,293,],[89,-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,-55,-54,-56,-124,-124,-89,-90,233,242,-109,-111,-114,-116,-124,-57,-110,-115,-141,-37,-35,-120,286,287,-82,-36,-83,]),'HASTA':([100,110,111,112,115,117,118,124,125,126,128,139,140,142,155,161,167,169,186,204,207,210,213,233,234,245,250,252,259,260,271,282,286,293,],[-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,-55,-54,-56,-124,-124,-89,-90,231,-109,-111,-114,-116,-124,-57,-110,-115,-141,-37,-35,-120,-82,-36,-83,]),'MIENTRAS':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[57,-47,-42,-43,-48,57,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'ADD':([73,100,110,111,112,115,117,118,124,125,126,128,139,140,142,155,161,167,169,188,210,213,233,234,250,252,259,260,271,282,286,293,],[-139,-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,-55,-54,-56,205,-124,-89,-90,-122,-114,-116,-124,-57,-115,-141,-37,-35,-120,-82,-36,-83,]),'LE':([100,110,111,112,115,117,118,124,125,126,128,130,139,140,142,155,161,167,169,204,207,210,213,233,234,245,250,252,259,260,271,282,286,293,],[-124,-119,-91,-135,-123,-122,-137,-121,-139,-139,-139,178,-55,-54,-56,-124,-124,-89,-90,-109,-111,-114,-116,-124,-57,-110,-115,-141,-37,-35,-120,-82,-36,-83,]),'DESDE':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[70,-47,-42,-43,-48,70,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'LPAREN':([22,37,42,56,57,58,59,62,64,67,73,75,77,79,91,92,94,99,101,104,113,116,119,120,122,123,126,129,137,138,141,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,244,246,248,249,261,262,],[34,-127,53,90,91,-81,92,94,-80,95,101,102,103,104,123,123,123,-144,123,123,-87,-86,-85,-84,165,-140,101,170,123,123,123,-98,-142,-99,123,123,-133,-133,-133,123,-133,-133,-133,123,123,-136,123,-136,123,-138,-138,123,-104,-107,-106,-108,-103,-105,123,-112,-113,-117,-118,123,123,]),'VAR':([4,106,150,],[6,-129,6,]),'CTE_INT':([48,91,92,94,99,101,104,123,137,138,141,152,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,243,244,246,248,249,261,262,281,],[55,125,125,125,-144,125,125,-140,125,125,125,202,-98,-142,-99,125,125,-133,-133,-133,125,-133,-133,-133,125,125,-136,125,-136,125,-138,-138,125,-104,-107,-106,-108,-103,-105,125,267,-112,-113,-117,-118,125,125,267,]),'ID':([2,14,19,21,24,25,26,28,31,32,33,36,51,61,63,65,68,69,70,71,74,76,78,80,81,82,87,90,91,92,93,94,95,99,101,102,103,104,123,137,138,141,156,158,159,164,165,166,170,171,172,174,175,176,177,178,183,185,187,188,193,205,206,208,209,211,212,214,220,221,222,224,225,226,227,228,231,232,234,236,243,244,246,248,249,253,256,258,261,262,264,277,279,280,281,285,288,291,294,],[3,-125,-125,-125,-15,-125,37,-22,-23,40,-21,-14,73,-47,-42,-43,-48,73,97,-50,-49,-41,-44,-46,-45,105,40,109,126,126,-38,126,136,-144,126,97,147,126,-140,126,73,126,-98,-142,-99,126,216,126,219,-133,-133,-133,126,-133,-133,-133,126,230,-51,-52,126,-136,126,-136,126,-138,-138,126,-104,-107,-106,-108,-103,-105,-62,-64,126,-145,-57,-63,268,-112,-113,-117,-118,-76,273,-53,126,126,-124,-79,-73,-75,268,-77,-74,-78,-70,]),'FUNCION':([4,5,7,8,11,16,38,43,44,45,46,93,241,],[-124,10,-2,-3,10,-7,-124,-8,-9,-10,-26,-38,-13,]),'AND':([100,110,111,112,114,115,117,118,124,125,126,128,130,139,140,142,155,161,167,169,173,179,204,207,210,213,223,233,234,245,250,252,255,259,260,271,282,286,293,],[-124,-119,-91,-135,156,-123,-122,-137,-121,-139,-139,-139,-124,-55,-54,-56,-124,-124,-89,-90,-100,-102,-109,-111,-114,-116,-134,-124,-57,-110,-115,-141,-101,-37,-35,-120,-82,-36,-83,]),'LBRACE':([7,8,16,38,41,43,44,45,46,106,150,201,218,239,274,278,],[-2,-3,-7,-124,51,-8,-9,-10,-26,-129,-124,51,51,51,51,51,]),'LEE':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[75,-47,-42,-43,-48,75,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'VARIANZA':([91,92,94,99,101,104,123,137,138,141,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,244,246,248,249,261,262,],[113,113,113,-144,113,113,-140,113,113,113,-98,-142,-99,113,113,-133,-133,-133,113,-133,-133,-133,113,113,-136,113,-136,113,-138,-138,113,-104,-107,-106,-108,-103,-105,113,-112,-113,-117,-118,113,113,]),'CTE_STR':([94,154,183,],[134,203,134,]),'INT':([6,10,38,46,53,198,],[21,21,21,-26,21,21,]),'FLOAT':([6,10,38,46,53,198,],[14,14,14,-26,14,14,]),'CTE_FLOAT':([91,92,94,99,101,104,123,137,138,141,156,158,159,164,166,171,172,174,175,176,177,178,183,193,205,206,208,209,211,212,214,220,221,222,224,225,226,231,244,246,248,249,261,262,],[128,128,128,-144,128,128,-140,128,128,128,-98,-142,-99,128,128,-133,-133,-133,128,-133,-133,-133,128,128,-136,128,-136,128,-138,-138,128,-104,-107,-106,-108,-103,-105,128,-112,-113,-117,-118,128,128,]),'LBRACK':([40,73,89,97,100,108,126,233,237,],[48,-139,-131,-139,141,152,-139,261,262,]),'ENTONCES':([197,],[239,]),'TWO_DOTS':([13,14,15,17,18,19,20,21,28,29,30,31,33,],[-12,-125,-125,-11,-125,-125,32,-125,-22,-25,-24,-23,-21,]),'SI':([51,61,63,65,68,69,71,74,76,78,80,81,93,187,188,227,228,232,234,236,253,258,264,277,279,280,285,288,291,294,],[79,-47,-42,-43,-48,79,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-64,-145,-57,-63,-76,-53,-124,-79,-73,-75,-77,-74,-78,-70,]),'PROGRAMA':([0,],[2,]),'OR':([100,110,111,112,114,115,117,118,124,125,126,128,130,139,140,142,155,161,167,169,173,179,204,207,210,213,223,233,234,245,250,252,255,259,260,271,282,286,293,],[-124,-119,-91,-135,159,-123,-122,-137,-121,-139,-139,-139,-124,-55,-54,-56,-124,-124,-89,-90,-100,-102,-109,-111,-114,-116,-134,-124,-57,-110,-115,-141,-101,-37,-35,-120,-82,-36,-83,]),'PRINCIPAL':([4,5,7,8,9,11,12,16,27,38,43,44,45,46,93,241,],[-124,-124,-2,-3,22,-124,-5,-7,-4,-124,-8,-9,-10,-26,-38,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque':([41,201,218,239,274,278,],[52,241,253,264,285,288,]),'principal':([9,],[23,]),'funciones_especiales':([91,92,94,101,104,137,138,141,164,166,175,183,193,206,209,214,231,261,262,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'param':([53,198,],[83,240,]),'factor':([91,92,94,101,104,137,138,141,164,166,175,183,193,206,209,214,231,261,262,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'dim_dec':([40,],[49,]),'tipo_compuesto':([6,38,],[13,13,]),'func1':([5,11,],[9,27,]),'var1':([4,150,],[5,201,]),'var3':([38,],[43,]),'di':([100,],[140,]),'condicional':([51,69,],[68,68,]),'tipo_fun':([10,],[26,]),'retorno':([51,69,],[65,65,]),'estatutos':([51,69,],[69,69,]),'expresion':([91,104,164,],[127,148,215,]),'term':([161,],[210,]),'pnQuadGenExp7':([252,],[271,]),'parametros':([53,],[84,]),'lista1':([54,],[86,]),'carga_datos':([51,69,],[80,80,]),'op_a1':([161,],[214,]),'pn_1_setCurrentType':([14,15,18,19,21,25,],[28,29,30,31,33,36,]),'var_cte':([91,92,94,101,104,137,138,141,164,166,175,183,193,206,209,214,231,261,262,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'super_exp':([91,104,164,209,],[114,114,114,114,]),'dim_index':([100,],[139,]),'est':([51,69,],[60,96,]),'asig':([138,],[187,]),'decision':([51,69,],[61,61,]),'lista_ids':([32,],[38,]),'llamada':([51,69,91,92,94,101,104,137,138,141,164,166,175,183,193,206,209,214,231,261,262,],[63,63,117,117,117,117,117,117,188,117,117,117,117,117,117,117,117,117,117,117,117,]),'esc':([94,183,],[132,229,]),'lectura':([51,69,],[78,78,]),'meg':([114,],[157,]),'sino':([264,],[279,]),'funciones_especiales_void':([51,69,],[71,71,]),'pn_2_addVariable':([47,],[54,]),'dim_index1':([233,],[260,]),'fe':([91,92,94,101,104,137,138,141,164,166,175,183,193,206,209,214,231,261,262,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'pn_3_addFunction':([37,],[42,]),'tipo_simple':([6,10,38,53,198,],[17,24,17,82,82,]),'ca':([243,281,],[266,289,]),'termino':([91,92,94,101,104,137,138,141,164,166,175,183,193,206,209,214,231,261,262,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,250,112,112,112,]),'exp1':([155,],[204,]),'fev':([51,69,],[77,77,]),'var':([4,150,],[7,7,]),'pn_5_updateContParams':([106,],[150,]),'type':([6,38,],[20,20,]),'empty':([4,5,11,38,40,51,53,54,69,100,101,108,114,121,130,133,145,149,150,155,161,193,233,264,],[8,12,12,45,50,66,85,88,66,142,144,153,160,163,179,184,194,200,8,207,213,144,259,280,]),'expresion1':([121,],[162,]),'dim_dec1':([108,],[151,]),'pnQuadGenSec2':([232,],[258,]),'pnQuadGenSec1':([99,],[138,]),'op_r':([130,],[175,]),'op_l':([114,],[158,]),'lista':([32,87,],[39,107,]),'op_a':([155,],[206,]),'no_condicional':([51,69,],[74,74,]),'pnQuadGenExp1':([73,97,125,126,128,],[100,100,167,100,169,]),'pnQuadGenExp3':([211,212,],[248,249,]),'pnQuadGenExp2':([205,208,],[244,246,]),'pnQuadGenExp5':([118,],[161,]),'pnQuadGenExp4':([112,],[155,]),'asignacion':([51,69,],[76,76,]),'pnQuadGenExp6':([123,],[166,]),'pnQuadGenExp9':([223,],[255,]),'pnQuadGenExp8':([171,172,174,176,177,178,],[220,221,222,224,225,226,]),'param1':([149,],[199,]),'llamada2':([145,],[192,]),'llamada1':([101,193,],[143,235,]),'v_exp':([196,251,254,283,],[238,270,272,290,]),'pn_8_decColumnas':([242,],[265,]),'var2':([6,38,],[16,44,]),'pnQuadGenExp11':([247,],[269,]),'pnQuadGenExp10':([158,],[209,]),'dd':([40,],[47,]),'funcion':([5,11,],[11,11,]),'pn_6_end':([23,],[35,]),'escritura':([51,69,],[81,81,]),'esc1':([94,183,],[133,133,]),'esc2':([133,],[182,]),'mega_exp':([91,104,164,209,],[121,121,121,247,]),'variable':([51,69,70,91,92,94,101,102,104,137,138,141,164,166,175,183,193,206,209,214,231,261,262,],[72,72,98,124,124,124,124,146,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'sp':([130,],[173,]),'pn_4_params':([105,],[149,]),'programa':([0,],[1,]),'exp':([91,92,94,101,104,137,138,141,164,166,175,183,193,206,209,231,261,262,],[130,131,135,145,130,186,189,190,130,217,223,135,145,245,130,257,275,276,]),'pn_7_decRenglones':([89,],[108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end','programa',7,'p_programa','parser.py',67),
  ('var1 -> var','var1',1,'p_var1','parser.py',72),
  ('var1 -> empty','var1',1,'p_var1','parser.py',73),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',79),
  ('func1 -> empty','func1',1,'p_func1','parser.py',80),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','parser.py',85),
  ('var -> VAR var2','var',2,'p_var','parser.py',90),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',94),
  ('var3 -> var2','var3',1,'p_var3','parser.py',99),
  ('var3 -> empty','var3',1,'p_var3','parser.py',100),
  ('type -> tipo_simple','type',1,'p_type','parser.py',106),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',107),
  ('funcion -> FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque','funcion',10,'p_funcion','parser.py',112),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',117),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',118),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',124),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',125),
  ('param -> tipo_simple ID pn_4_params param1','param',4,'p_param','parser.py',130),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',135),
  ('param1 -> empty','param1',1,'p_param1','parser.py',136),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',142),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',143),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',144),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',149),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',150),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',155),
  ('lista -> ID dd pn_2_addVariable lista1','lista',4,'p_lista','parser.py',158),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',162),
  ('dd -> empty','dd',1,'p_dd','parser.py',163),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',168),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',169),
  ('dim_dec -> LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1','dim_dec',5,'p_dim_dec','parser.py',174),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK pn_8_decColumnas','dim_dec1',4,'p_dim_dec1','parser.py',178),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',179),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',183),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',187),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',188),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',194),
  ('est -> estatutos est','est',2,'p_est','parser.py',199),
  ('est -> empty','est',1,'p_est','parser.py',200),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',206),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',207),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',208),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',209),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',210),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',211),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',212),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',213),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',214),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',215),
  ('asignacion -> variable ASSIGN pnQuadGenSec1 asig','asignacion',4,'p_asignacion','parser.py',222),
  ('asig -> llamada','asig',1,'p_asig','parser.py',226),
  ('asig -> exp SEMICOLON pnQuadGenSec2','asig',3,'p_asig','parser.py',227),
  ('variable -> ID pnQuadGenExp1 di','variable',3,'p_variable','parser.py',230),
  ('di -> dim_index','di',1,'p_di','parser.py',234),
  ('di -> empty','di',1,'p_di','parser.py',235),
  ('llamada -> ID LPAREN llamada1 RPAREN SEMICOLON','llamada',5,'p_llamada','parser.py',239),
  ('llamada1 -> exp llamada2','llamada1',2,'p_llamada1','parser.py',243),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',244),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',249),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',250),
  ('retorno -> REGRESA LPAREN exp RPAREN SEMICOLON','retorno',5,'p_retorno','parser.py',254),
  ('lectura -> LEE LPAREN variable RPAREN SEMICOLON','lectura',5,'p_lectura','parser.py',257),
  ('escritura -> ESCRIBE LPAREN esc RPAREN SEMICOLON','escritura',5,'p_escritura','parser.py',260),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',263),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',267),
  ('esc1 -> CTE_STR','esc1',1,'p_esc1','parser.py',268),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',272),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',273),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',277),
  ('ca -> ID','ca',1,'p_ca','parser.py',281),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',282),
  ('decision -> SI LPAREN expresion RPAREN ENTONCES bloque sino','decision',7,'p_decision','parser.py',287),
  ('sino -> SINO bloque','sino',2,'p_sino','parser.py',291),
  ('sino -> empty','sino',1,'p_sino','parser.py',292),
  ('condicional -> MIENTRAS LPAREN expresion RPAREN HAZ bloque','condicional',6,'p_condicional','parser.py',296),
  ('no_condicional -> DESDE variable ASSIGN exp HASTA exp HACER bloque','no_condicional',8,'p_no_condicional','parser.py',299),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',304),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',305),
  ('fev -> DISTRIBUCION','fev',1,'p_fev','parser.py',309),
  ('fev -> TENDENCIA','fev',1,'p_fev','parser.py',310),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',315),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',316),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',320),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',321),
  ('fe -> MODA','fe',1,'p_fe','parser.py',322),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',323),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',326),
  ('var_cte -> CTE_INT pnQuadGenExp1','var_cte',2,'p_var_cte','parser.py',333),
  ('var_cte -> CTE_FLOAT pnQuadGenExp1','var_cte',2,'p_var_cte','parser.py',334),
  ('var_cte -> CTE_CH','var_cte',1,'p_var_cte','parser.py',335),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',341),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',345),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',346),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',350),
  ('meg -> op_l pnQuadGenExp10 mega_exp pnQuadGenExp11','meg',4,'p_meg','parser.py',354),
  ('meg -> empty','meg',1,'p_meg','parser.py',355),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',359),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',360),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',364),
  ('sp -> op_r exp pnQuadGenExp9','sp',3,'p_sp','parser.py',368),
  ('sp -> empty','sp',1,'p_sp','parser.py',369),
  ('op_r -> LT pnQuadGenExp8','op_r',2,'p_op_r','parser.py',373),
  ('op_r -> GT pnQuadGenExp8','op_r',2,'p_op_r','parser.py',374),
  ('op_r -> LE pnQuadGenExp8','op_r',2,'p_op_r','parser.py',375),
  ('op_r -> GE pnQuadGenExp8','op_r',2,'p_op_r','parser.py',376),
  ('op_r -> NOT_EQUAL pnQuadGenExp8','op_r',2,'p_op_r','parser.py',377),
  ('op_r -> EQUAL pnQuadGenExp8','op_r',2,'p_op_r','parser.py',378),
  ('exp -> termino pnQuadGenExp4 exp1','exp',3,'p_exp','parser.py',382),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',386),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',387),
  ('op_a -> ADD pnQuadGenExp2','op_a',2,'p_op_a','parser.py',391),
  ('op_a -> SUB pnQuadGenExp2','op_a',2,'p_op_a','parser.py',392),
  ('termino -> factor pnQuadGenExp5 term','termino',3,'p_termino','parser.py',396),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',400),
  ('term -> empty','term',1,'p_term','parser.py',401),
  ('op_a1 -> MUL pnQuadGenExp3','op_a1',2,'p_op_a1','parser.py',405),
  ('op_a1 -> DIV pnQuadGenExp3','op_a1',2,'p_op_a1','parser.py',406),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',411),
  ('factor -> LPAREN pnQuadGenExp6 exp RPAREN pnQuadGenExp7','factor',5,'p_factor','parser.py',412),
  ('factor -> variable','factor',1,'p_factor','parser.py',413),
  ('factor -> llamada','factor',1,'p_factor','parser.py',414),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',415),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',420),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',512),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',519),
  ('pn_3_addFunction -> <empty>','pn_3_addFunction',0,'p_pn_3_addFunction','parser.py',535),
  ('pn_4_params -> <empty>','pn_4_params',0,'p_pn_4_params','parser.py',548),
  ('pn_5_updateContParams -> <empty>','pn_5_updateContParams',0,'p_pn_5_updateContParams','parser.py',561),
  ('pn_6_end -> <empty>','pn_6_end',0,'p_pn_6_end','parser.py',570),
  ('pn_7_decRenglones -> <empty>','pn_7_decRenglones',0,'p_pn_7_decRenglones','parser.py',576),
  ('pn_8_decColumnas -> <empty>','pn_8_decColumnas',0,'p_pn_8_decColumnas','parser.py',584),
  ('pnQuadGenExp8 -> <empty>','pnQuadGenExp8',0,'p_pnQuadGenExp8','parser.py',593),
  ('pnQuadGenExp9 -> <empty>','pnQuadGenExp9',0,'p_pnQuadGenExp9','parser.py',605),
  ('pnQuadGenExp4 -> <empty>','pnQuadGenExp4',0,'p_pnQuadGenExp4','parser.py',628),
  ('pnQuadGenExp2 -> <empty>','pnQuadGenExp2',0,'p_pnQuadGenExp2','parser.py',651),
  ('pnQuadGenExp5 -> <empty>','pnQuadGenExp5',0,'p_pnQuadGenExp5','parser.py',665),
  ('pnQuadGenExp3 -> <empty>','pnQuadGenExp3',0,'p_pnQuadGenExp3','parser.py',692),
  ('pnQuadGenExp1 -> <empty>','pnQuadGenExp1',0,'p_pnQuadGenExp1','parser.py',707),
  ('pnQuadGenExp6 -> <empty>','pnQuadGenExp6',0,'p_pnQuadGenExp6','parser.py',731),
  ('pnQuadGenExp7 -> <empty>','pnQuadGenExp7',0,'p_pnQuadGenExp7','parser.py',738),
  ('pnQuadGenExp10 -> <empty>','pnQuadGenExp10',0,'p_pnQuadGenExp10','parser.py',748),
  ('pnQuadGenExp11 -> <empty>','pnQuadGenExp11',0,'p_pnQuadGenExp11','parser.py',760),
  ('pnQuadGenSec1 -> <empty>','pnQuadGenSec1',0,'p_pnQuadGenSec1','parser.py',786),
  ('pnQuadGenSec2 -> <empty>','pnQuadGenSec2',0,'p_pnQuadGenSec2','parser.py',798),
]
