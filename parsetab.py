
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DISTRIBUCION DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TENDENCIA TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL pn_9_setCurrentFuncGl LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pn_4_params param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID dd pn_2_addVariable lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK pn_8_decColumnas\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN pnQuadGenSec1 asig\n    asig : llamada\n         | exp SEMICOLON pnQuadGenSec2\n    variable : ID pnQuadGenExp1 di\n    di : dim_index\n       | empty\n    llamada :  ID LPAREN llamada1 RPAREN SEMICOLON\n    llamada1 : exp llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN SEMICOLONlectura : LEE pnQuadGenSec3 LPAREN variable RPAREN SEMICOLON pnQuadGenSec4escritura : ESCRIBE pnQuadGenSec3 LPAREN esc RPAREN SEMICOLON pnQuadGenSec4esc : esc1 esc2\n    esc1 : exp\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN pnQuadGenCond1 ENTONCES bloque sino pnQuadGenCond2\n    sino : SINO pnQuadGenCond3 bloque\n         | empty\n    condicional : MIENTRAS pnQuadGenCiclos1 LPAREN expresion RPAREN pnQuadGenCiclos2 HAZ bloque pnQuadGenCiclos3no_condicional : DESDE pnQuadGenCiclos4 variable ASSIGN pnQuadGenSec1 exp pnQuadGenCiclos5 HASTA pnQuadGenCiclos6 exp pnQuadGenCiclos7 HACER bloque pnQuadGenCiclos8\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : DISTRIBUCION\n        | TENDENCIA\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_INT pnQuadGenCteInt\n            | CTE_FLOAT pnQuadGenCteFloat\n            | CTE_CH pnQuadGenCteChar\n            | CTE_STR pnQuadGenCteStr\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l pnQuadGenExp10 mega_exp pnQuadGenExp11\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r  exp pnQuadGenExp9\n       | empty\n    \n    op_r : LT pnQuadGenExp8\n         | GT pnQuadGenExp8\n         | LE pnQuadGenExp8\n         | GE pnQuadGenExp8\n         | NOT_EQUAL pnQuadGenExp8\n         | EQUAL pnQuadGenExp8\n    exp : termino pnQuadGenExp4 exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD pnQuadGenExp2\n         | SUB pnQuadGenExp2\n    termino : factor pnQuadGenExp5 term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL pnQuadGenExp3\n          | DIV pnQuadGenExp3\n    \n    factor : var_cte\n           | LPAREN pnQuadGenExp6 exp RPAREN pnQuadGenExp7\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pn_3_addFunction : \n    \n    pn_4_params :\n    \n    pn_5_updateContParams :  \n    \n    pn_6_end :\n    \n    pn_7_decRenglones :\n    \n    pn_8_decColumnas : \n    \n    pn_9_setCurrentFuncGl :\n    \n    pnQuadGenCteInt :\n    \n    pnQuadGenCteFloat :\n    \n    pnQuadGenCteChar :\n    \n    pnQuadGenCteStr :\n    \n    pnQuadGenExp1 : \n    \n    pnQuadGenExp2 : \n    \n    pnQuadGenExp3 : \n    \n    pnQuadGenExp4 : \n    \n    pnQuadGenExp5 : \n    \n    pnQuadGenExp6 : \n    \n    pnQuadGenExp7 : \n    \n    pnQuadGenExp8 : \n    \n    pnQuadGenExp9 : \n    \n    pnQuadGenExp10 : \n    \n    pnQuadGenExp11 : \n    \n    pnQuadGenSec1 : \n    \n    pnQuadGenSec2 : \n    \n    pnQuadGenSec3 : \n    \n    pnQuadGenSec4 : \n    \n    pnQuadGenCond1 :\n    \n    pnQuadGenCond2 :\n    \n    pnQuadGenCond3 :\n    \n    pnQuadGenCiclos1 :  \n    \n    pnQuadGenCiclos2 : \n    \n    pnQuadGenCiclos3 : \n    \n    pnQuadGenCiclos4 : \n    \n    pnQuadGenCiclos5 : \n    \n    pnQuadGenCiclos6 :\n    \n    pnQuadGenCiclos7 :\n    \n    pnQuadGenCiclos8 :\n    '
    
_lr_action_items = {'HAZ':([207,247,],[-157,274,]),'SUB':([82,104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,161,162,163,166,167,168,176,214,217,229,230,254,256,262,263,277,290,293,306,],[-138,-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,213,-124,-91,-88,-90,-89,-122,-114,-116,-124,-57,-115,-144,-37,-35,-120,-81,-36,-82,]),'VOID':([10,],[25,]),'EQUAL':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,152,161,162,163,166,167,168,209,212,214,217,229,230,250,254,256,262,263,277,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,199,-124,-124,-91,-88,-90,-89,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'CARGA':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[65,-47,-42,-43,-48,65,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'CHAR':([6,10,38,46,52,153,],[19,19,19,-26,19,19,]),'SINO':([98,286,],[-38,295,]),'CORRELACIONA':([97,103,105,108,115,128,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[117,-149,117,117,117,-143,117,117,117,117,-149,117,-98,-147,-99,117,-145,-145,-145,117,-145,-145,-145,-139,117,-139,-140,-140,117,117,117,117,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,117,117,-161,117,]),'CTE_CH':([97,103,105,108,115,128,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[132,-149,132,132,132,-143,132,132,132,132,-149,132,-98,-147,-99,132,-145,-145,-145,132,-145,-145,-145,-139,132,-139,-140,-140,132,132,132,132,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,132,132,-161,132,]),'MUL':([82,104,116,120,122,123,126,129,130,131,132,133,140,141,143,162,163,166,167,168,176,229,230,256,262,263,277,290,293,306,],[-138,-124,-119,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,215,-91,-88,-90,-89,-122,-124,-57,-144,-37,-35,-120,-81,-36,-82,]),'TENDENCIA':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[67,-47,-42,-43,-48,67,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'DIV':([82,104,116,120,122,123,126,129,130,131,132,133,140,141,143,162,163,166,167,168,176,229,230,256,262,263,277,290,293,306,],[-138,-124,-119,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,216,-91,-88,-90,-89,-122,-124,-57,-144,-37,-35,-120,-81,-36,-82,]),'RBRACE':([55,69,70,72,73,74,76,78,80,83,85,87,89,90,98,101,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[-124,98,-47,-42,-43,-40,-48,-124,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'NOT_EQUAL':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,152,161,162,163,166,167,168,209,212,214,217,229,230,250,254,256,262,263,277,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,195,-124,-124,-91,-88,-90,-89,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'RPAREN':([41,52,58,59,60,91,104,105,109,116,118,120,122,123,126,129,130,131,132,133,134,137,140,141,143,144,145,146,149,150,151,152,154,155,159,161,162,163,166,167,168,170,171,172,180,181,182,183,186,189,190,191,196,202,203,209,212,214,217,220,223,225,229,230,231,234,236,241,250,254,256,258,262,263,268,270,272,273,276,277,279,285,290,293,294,298,300,306,],[51,-124,-16,92,-17,-128,-124,-124,-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,169,-138,-55,-54,-56,179,-59,-124,-124,-124,193,-124,-18,-20,207,-124,-124,-91,-88,-90,-89,222,-124,-66,-58,-124,-61,232,-95,-97,-92,-94,-100,-102,-19,-109,-111,-114,-116,256,-65,-68,-124,-57,-60,267,-93,-146,-110,-115,-144,-67,-37,-35,-148,-101,-71,-70,290,-120,291,-96,-81,-36,-87,305,306,-82,]),'SEMICOLON':([3,39,40,47,49,50,53,61,63,64,82,93,94,104,111,113,116,118,120,122,123,126,129,130,131,132,133,140,141,143,161,162,163,166,167,168,169,176,177,179,205,209,212,214,217,222,229,230,232,245,250,254,256,262,263,267,277,290,291,293,305,306,],[4,46,-124,-126,-28,-29,-124,-27,-31,-131,-138,-30,-124,-124,-32,-34,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,-124,-124,-91,-88,-90,-89,221,-122,228,230,-132,-109,-111,-114,-116,257,-124,-57,265,-33,-110,-115,-144,-37,-35,284,-120,-81,301,-36,309,-82,]),'VARIABLES':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,184,221,228,230,248,255,257,261,265,278,282,284,286,288,289,296,297,299,301,304,308,309,312,313,],[75,-47,-42,-43,-48,75,-50,-49,-41,-44,-46,-45,-38,-51,-52,233,-62,-150,-57,233,233,-152,-53,-152,-64,-63,-78,-124,-158,233,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'GE':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,152,161,162,163,166,167,168,209,212,214,217,229,230,250,254,256,262,263,277,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,197,-124,-124,-91,-88,-90,-89,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'DATAFRAME':([6,38,46,],[18,18,-26,]),'ESCRIBE':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[71,-47,-42,-43,-48,71,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'MODA':([97,103,105,108,115,128,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[121,-149,121,121,121,-143,121,121,121,121,-149,121,-98,-147,-99,121,-145,-145,-145,121,-145,-145,-145,-139,121,-139,-140,-140,121,121,121,121,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,121,121,-161,121,]),'LT':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,152,161,162,163,166,167,168,209,212,214,217,229,230,250,254,256,262,263,277,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,200,-124,-124,-91,-88,-90,-89,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'COMMA':([40,47,49,50,53,64,91,94,104,109,111,113,114,116,118,120,122,123,126,129,130,131,132,133,136,140,141,143,146,148,161,162,163,166,167,168,171,172,205,206,208,209,212,214,217,219,226,229,230,245,250,254,256,262,263,271,272,273,275,277,290,293,294,306,],[-124,-126,-28,-29,62,-131,-128,-124,-124,153,-32,-34,158,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,173,-55,-54,-56,181,184,-124,-124,-91,-88,-90,-89,224,-66,-132,246,248,-109,-111,-114,-116,255,259,-124,-57,-33,-110,-115,-144,-37,-35,287,-71,-70,289,-120,-81,-36,-87,-82,]),'DISTRIBUCION':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[77,-47,-42,-43,-48,77,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'MEDIANA':([97,103,105,108,115,128,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[124,-149,124,124,124,-143,124,124,124,124,-149,124,-98,-147,-99,124,-145,-145,-145,124,-145,-145,-145,-139,124,-139,-140,-140,124,124,124,124,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,124,124,-161,124,]),'ASSIGN':([81,82,104,116,118,120,122,123,126,129,130,131,132,133,137,138,140,141,143,149,150,152,161,162,163,166,167,168,186,189,196,202,209,212,214,217,229,230,241,250,254,256,262,263,268,270,277,285,290,293,306,],[103,-138,-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-138,174,-55,-54,-56,-124,192,-124,-124,-124,-91,-88,-90,-89,-95,-97,-100,-102,-109,-111,-114,-116,-124,-57,-146,-110,-115,-144,-37,-35,-148,-101,-120,-96,-81,-36,-82,]),'$end':([1,23,35,56,98,],[0,-130,-1,-6,-38,]),'HACER':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,161,162,163,166,167,168,209,212,214,217,229,230,250,254,256,262,263,277,290,293,306,307,310,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,-124,-124,-91,-88,-90,-89,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,-162,311,]),'GT':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,152,161,162,163,166,167,168,209,212,214,217,229,230,250,254,256,262,263,277,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,194,-124,-124,-91,-88,-90,-89,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'STRING':([6,38,46,],[15,15,-26,]),'MEDIA':([97,103,105,108,115,128,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[125,-149,125,125,125,-143,125,125,125,125,-149,125,-98,-147,-99,125,-145,-145,-145,125,-145,-145,-145,-139,125,-139,-140,-140,125,125,125,125,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,125,125,-161,125,]),'REGRESA':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[68,-47,-42,-43,-48,68,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'RBRACK':([54,104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,157,161,162,163,166,167,168,178,209,212,214,217,229,230,250,254,256,262,263,277,281,283,290,293,306,],[64,-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,205,-124,-124,-91,-88,-90,-89,229,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,293,294,-81,-36,-82,]),'HASTA':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,161,162,163,166,167,168,209,212,214,217,229,230,250,254,256,260,262,263,277,280,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,-124,-124,-91,-88,-90,-89,-109,-111,-114,-116,-124,-57,-110,-115,-144,-160,-37,-35,-120,292,-81,-36,-82,]),'MIENTRAS':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[66,-47,-42,-43,-48,66,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'ADD':([82,104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,161,162,163,166,167,168,176,214,217,229,230,254,256,262,263,277,290,293,306,],[-138,-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,210,-124,-91,-88,-90,-89,-122,-114,-116,-124,-57,-115,-144,-37,-35,-120,-81,-36,-82,]),'LE':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,152,161,162,163,166,167,168,209,212,214,217,229,230,250,254,256,262,263,277,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,201,-124,-124,-91,-88,-90,-89,-109,-111,-114,-116,-124,-57,-110,-115,-144,-37,-35,-120,-81,-36,-82,]),'DESDE':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[79,-47,-42,-43,-48,79,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'LPAREN':([22,34,37,42,65,66,67,68,71,75,77,82,84,86,88,96,97,99,103,105,106,108,115,117,119,121,124,125,127,128,131,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[-133,41,-127,52,95,-156,-80,97,-151,100,-79,105,-151,107,108,115,128,135,-149,128,147,128,128,160,-86,-85,-84,-83,164,-143,105,128,128,128,128,-149,128,-98,-147,-99,128,-145,-145,-145,128,-145,-145,-145,-139,128,-139,-140,-140,128,128,128,128,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,128,128,-161,128,]),'VAR':([4,92,110,],[6,-129,6,]),'CTE_INT':([48,97,103,105,108,112,115,128,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,246,249,251,252,253,264,266,287,292,302,],[54,130,-149,130,130,157,130,-143,130,130,130,130,-149,130,-98,-147,-99,130,-145,-145,-145,130,-145,-145,-145,-139,130,-139,-140,-140,130,130,130,130,-104,-107,-106,-108,-103,-105,272,-112,-113,-117,-118,130,130,272,-161,130,]),'ID':([2,14,19,21,24,25,26,28,31,32,33,36,55,57,62,70,72,73,76,78,79,80,83,85,87,89,90,95,97,98,100,102,103,105,107,108,115,128,135,139,142,147,160,164,165,173,174,175,176,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,221,224,227,228,230,235,238,239,240,242,243,244,246,249,251,252,253,257,259,261,264,265,266,278,282,284,286,287,288,292,296,297,299,301,302,304,308,309,312,313,],[3,-125,-125,-125,-15,-125,37,-22,-23,40,-21,-14,82,91,40,-47,-42,-43,-48,82,-159,-50,-49,-41,-44,-46,-45,114,131,-38,136,137,-149,131,148,131,131,-143,131,82,131,137,208,219,131,226,-149,-51,-52,131,-98,-147,-99,131,-145,-145,-145,131,-145,-145,-145,-139,131,-139,-140,-140,131,-62,131,131,-150,-57,131,-104,-107,-106,-108,-103,-105,273,-112,-113,-117,-118,-152,279,-53,131,-152,131,-64,-63,-78,-124,273,-158,-161,-154,-74,-75,-77,131,-72,-73,-69,-163,-76,]),'FUNCION':([4,5,7,8,11,16,38,43,44,45,46,98,204,],[-124,10,-2,-3,10,-7,-124,-8,-9,-10,-26,-38,-13,]),'AND':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,149,152,161,162,163,166,167,168,196,202,209,212,214,217,229,230,241,250,254,256,262,263,270,277,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,185,-124,-124,-124,-91,-88,-90,-89,-100,-102,-109,-111,-114,-116,-124,-57,-146,-110,-115,-144,-37,-35,-101,-120,-81,-36,-82,]),'LBRACE':([7,8,16,38,43,44,45,46,51,92,110,156,269,274,295,303,311,],[-2,-3,-7,-124,-8,-9,-10,-26,55,-129,-124,55,55,55,-155,55,55,]),'LEE':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[84,-47,-42,-43,-48,84,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'VARIANZA':([97,103,105,108,115,128,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[119,-149,119,119,119,-143,119,119,119,119,-149,119,-98,-147,-99,119,-145,-145,-145,119,-145,-145,-145,-139,119,-139,-140,-140,119,119,119,119,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,119,119,-161,119,]),'CTE_STR':([97,103,105,108,115,128,135,139,142,158,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[126,-149,126,126,126,-143,126,126,126,206,126,-149,126,-98,-147,-99,126,-145,-145,-145,126,-145,-145,-145,-139,126,-139,-140,-140,126,126,126,126,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,126,126,-161,126,]),'INT':([6,10,38,46,52,153,],[21,21,21,-26,21,21,]),'FLOAT':([6,10,38,46,52,153,],[14,14,14,-26,14,14,]),'CTE_FLOAT':([97,103,105,108,115,128,135,139,142,165,174,181,185,187,188,192,194,195,197,198,199,200,201,210,211,213,215,216,218,224,227,235,238,239,240,242,243,244,249,251,252,253,264,266,292,302,],[133,-149,133,133,133,-143,133,133,133,133,-149,133,-98,-147,-99,133,-145,-145,-145,133,-145,-145,-145,-139,133,-139,-140,-140,133,133,133,133,-104,-107,-106,-108,-103,-105,-112,-113,-117,-118,133,133,-161,133,]),'LBRACK':([40,64,82,94,104,131,137,229,233,],[48,-131,-138,112,142,-138,-138,264,266,]),'ENTONCES':([193,237,],[-153,269,]),'TWO_DOTS':([13,14,15,17,18,19,20,21,28,29,30,31,33,],[-12,-125,-125,-11,-125,-125,32,-125,-22,-25,-24,-23,-21,]),'SI':([55,70,72,73,76,78,80,83,85,87,89,90,98,175,176,221,228,230,257,261,265,278,282,284,286,288,296,297,299,301,304,308,309,312,313,],[88,-47,-42,-43,-48,88,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-150,-57,-152,-53,-152,-64,-63,-78,-124,-158,-154,-74,-75,-77,-72,-73,-69,-163,-76,]),'PROGRAMA':([0,],[2,]),'OR':([104,116,118,120,122,123,126,129,130,131,132,133,140,141,143,149,152,161,162,163,166,167,168,196,202,209,212,214,217,229,230,241,250,254,256,262,263,270,277,290,293,306,],[-124,-119,-141,-123,-122,-142,-137,-121,-134,-138,-136,-135,-55,-54,-56,188,-124,-124,-124,-91,-88,-90,-89,-100,-102,-109,-111,-114,-116,-124,-57,-146,-110,-115,-144,-37,-35,-101,-120,-81,-36,-82,]),'PRINCIPAL':([4,5,7,8,9,11,12,16,27,38,43,44,45,46,98,204,],[-124,-124,-2,-3,22,-124,-5,-7,-4,-124,-8,-9,-10,-26,-38,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque':([51,156,269,274,303,311,],[56,204,286,288,308,312,]),'principal':([9,],[23,]),'funciones_especiales':([97,105,108,115,135,139,142,165,181,192,198,211,218,224,227,235,264,266,302,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'pnQuadGenCiclos5':([260,],[280,]),'param':([52,153,],[58,203,]),'pnQuadGenCond3':([295,],[303,]),'pnQuadGenCond2':([296,],[304,]),'pnQuadGenCond1':([193,],[237,]),'factor':([97,105,108,115,135,139,142,165,181,192,198,211,218,224,227,235,264,266,302,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'dim_dec':([40,],[49,]),'pn_9_setCurrentFuncGl':([22,],[34,]),'func1':([5,11,],[9,27,]),'var1':([4,110,],[5,156,]),'var3':([38,],[43,]),'di':([104,],[141,]),'condicional':([55,78,],[76,76,]),'tipo_fun':([10,],[26,]),'pnQuadGenExp11':([268,],[285,]),'estatutos':([55,78,],[78,78,]),'tipo_compuesto':([6,38,],[13,13,]),'expresion':([108,115,192,],[151,159,236,]),'term':([162,],[214,]),'pnQuadGenExp7':([256,],[277,]),'pnQuadGenCteInt':([130,],[166,]),'parametros':([52,],[59,]),'lista1':([53,],[61,]),'carga_datos':([55,78,],[89,89,]),'op_a1':([162,],[218,]),'pn_1_setCurrentType':([14,15,18,19,21,25,],[28,29,30,31,33,36,]),'var_cte':([97,105,108,115,135,139,142,165,181,192,198,211,218,224,227,235,264,266,302,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'super_exp':([108,115,192,235,],[149,149,149,149,]),'dim_index':([104,],[140,]),'est':([55,78,],[69,101,]),'asig':([139,],[175,]),'decision':([55,78,],[70,70,]),'lista_ids':([32,],[38,]),'pnQuadGenCiclos4':([79,],[102,]),'llamada':([55,78,97,105,108,115,135,139,142,165,181,192,198,211,218,224,227,235,264,266,302,],[72,72,122,122,122,122,122,176,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'pnQuadGenCiclos6':([292,],[302,]),'pnQuadGenCiclos7':([307,],[310,]),'esc':([135,224,],[170,258,]),'pnQuadGenCiclos1':([66,],[96,]),'pnQuadGenCiclos2':([207,],[247,]),'pnQuadGenCiclos3':([288,],[299,]),'pnQuadGenCiclos8':([312,],[313,]),'lectura':([55,78,],[87,87,]),'pnQuadGenCteFloat':([133,],[168,]),'meg':([149,],[186,]),'sino':([286,],[296,]),'funciones_especiales_void':([55,78,],[80,80,]),'pn_2_addVariable':([47,],[53,]),'dim_index1':([229,],[263,]),'fe':([97,105,108,115,135,139,142,165,181,192,198,211,218,224,227,235,264,266,302,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'pn_3_addFunction':([37,],[42,]),'tipo_simple':([6,10,38,52,153,],[17,24,17,57,57,]),'ca':([246,287,],[271,298,]),'termino':([97,105,108,115,135,139,142,165,181,192,198,211,218,224,227,235,264,266,302,],[118,118,118,118,118,118,118,118,118,118,118,118,254,118,118,118,118,118,118,]),'exp1':([161,],[209,]),'fev':([55,78,],[86,86,]),'var':([4,110,],[7,7,]),'pn_5_updateContParams':([92,],[110,]),'type':([6,38,],[20,20,]),'empty':([4,5,11,38,40,52,53,55,78,94,104,105,109,110,146,149,150,152,161,162,171,181,229,286,],[8,12,12,45,50,60,63,74,74,113,143,145,155,8,182,189,191,202,212,217,225,145,262,297,]),'expresion1':([150,],[190,]),'dim_dec1':([94,],[111,]),'pnQuadGenSec2':([228,],[261,]),'pnQuadGenSec1':([103,174,],[139,227,]),'op_r':([152,],[198,]),'pnQuadGenSec4':([257,265,],[278,282,]),'op_l':([149,],[187,]),'lista':([32,62,],[39,93,]),'op_a':([161,],[211,]),'no_condicional':([55,78,],[83,83,]),'pnQuadGenExp1':([82,131,137,],[104,104,104,]),'pnQuadGenExp3':([215,216,],[252,253,]),'pnQuadGenExp2':([210,213,],[249,251,]),'pnQuadGenExp5':([123,],[162,]),'pnQuadGenExp4':([118,],[161,]),'asignacion':([55,78,],[85,85,]),'pnQuadGenExp6':([128,],[165,]),'pnQuadGenExp9':([241,],[270,]),'pnQuadGenExp8':([194,195,197,199,200,201,],[238,239,240,242,243,244,]),'param1':([109,],[154,]),'pnQuadGenCteChar':([132,],[167,]),'llamada2':([146,],[180,]),'pnQuadGenCteStr':([126,],[163,]),'v_exp':([184,248,255,289,],[234,275,276,300,]),'llamada1':([105,181,],[144,231,]),'pn_8_decColumnas':([205,],[245,]),'var2':([6,38,],[16,44,]),'pnQuadGenSec3':([71,84,],[99,106,]),'retorno':([55,78,],[73,73,]),'pnQuadGenExp10':([187,],[235,]),'dd':([40,],[47,]),'funcion':([5,11,],[11,11,]),'pn_6_end':([23,],[35,]),'escritura':([55,78,],[90,90,]),'esc1':([135,224,],[171,171,]),'esc2':([171,],[223,]),'mega_exp':([108,115,192,235,],[150,150,150,268,]),'variable':([55,78,97,102,105,108,115,135,139,142,147,165,181,192,198,211,218,224,227,235,264,266,302,],[81,81,129,138,129,129,129,129,129,129,183,129,129,129,129,129,129,129,129,129,129,129,129,]),'sp':([152,],[196,]),'pn_4_params':([91,],[109,]),'programa':([0,],[1,]),'exp':([97,105,108,115,135,139,142,165,181,192,198,211,224,227,235,264,266,302,],[134,146,152,152,172,177,178,220,146,152,241,250,172,260,152,281,283,307,]),'pn_7_decRenglones':([64,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end','programa',7,'p_programa','parser.py',81),
  ('var1 -> var','var1',1,'p_var1','parser.py',89),
  ('var1 -> empty','var1',1,'p_var1','parser.py',90),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',96),
  ('func1 -> empty','func1',1,'p_func1','parser.py',97),
  ('principal -> PRINCIPAL pn_9_setCurrentFuncGl LPAREN RPAREN bloque','principal',5,'p_principal','parser.py',102),
  ('var -> VAR var2','var',2,'p_var','parser.py',107),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',111),
  ('var3 -> var2','var3',1,'p_var3','parser.py',116),
  ('var3 -> empty','var3',1,'p_var3','parser.py',117),
  ('type -> tipo_simple','type',1,'p_type','parser.py',123),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',124),
  ('funcion -> FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque','funcion',10,'p_funcion','parser.py',129),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',134),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',135),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',141),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',142),
  ('param -> tipo_simple ID pn_4_params param1','param',4,'p_param','parser.py',147),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',152),
  ('param1 -> empty','param1',1,'p_param1','parser.py',153),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',159),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',160),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',161),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',166),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',167),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',172),
  ('lista -> ID dd pn_2_addVariable lista1','lista',4,'p_lista','parser.py',175),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',179),
  ('dd -> empty','dd',1,'p_dd','parser.py',180),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',185),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',186),
  ('dim_dec -> LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1','dim_dec',5,'p_dim_dec','parser.py',191),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK pn_8_decColumnas','dim_dec1',4,'p_dim_dec1','parser.py',195),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',196),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',200),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',204),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',205),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',211),
  ('est -> estatutos est','est',2,'p_est','parser.py',216),
  ('est -> empty','est',1,'p_est','parser.py',217),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',223),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',224),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',225),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',226),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',227),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',228),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',229),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',230),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',231),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',232),
  ('asignacion -> variable ASSIGN pnQuadGenSec1 asig','asignacion',4,'p_asignacion','parser.py',239),
  ('asig -> llamada','asig',1,'p_asig','parser.py',243),
  ('asig -> exp SEMICOLON pnQuadGenSec2','asig',3,'p_asig','parser.py',244),
  ('variable -> ID pnQuadGenExp1 di','variable',3,'p_variable','parser.py',247),
  ('di -> dim_index','di',1,'p_di','parser.py',251),
  ('di -> empty','di',1,'p_di','parser.py',252),
  ('llamada -> ID LPAREN llamada1 RPAREN SEMICOLON','llamada',5,'p_llamada','parser.py',256),
  ('llamada1 -> exp llamada2','llamada1',2,'p_llamada1','parser.py',260),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',261),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',266),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',267),
  ('retorno -> REGRESA LPAREN exp RPAREN SEMICOLON','retorno',5,'p_retorno','parser.py',271),
  ('lectura -> LEE pnQuadGenSec3 LPAREN variable RPAREN SEMICOLON pnQuadGenSec4','lectura',7,'p_lectura','parser.py',274),
  ('escritura -> ESCRIBE pnQuadGenSec3 LPAREN esc RPAREN SEMICOLON pnQuadGenSec4','escritura',7,'p_escritura','parser.py',277),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',280),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',284),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',288),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',289),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',293),
  ('ca -> ID','ca',1,'p_ca','parser.py',297),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',298),
  ('decision -> SI LPAREN expresion RPAREN pnQuadGenCond1 ENTONCES bloque sino pnQuadGenCond2','decision',9,'p_decision','parser.py',303),
  ('sino -> SINO pnQuadGenCond3 bloque','sino',3,'p_sino','parser.py',307),
  ('sino -> empty','sino',1,'p_sino','parser.py',308),
  ('condicional -> MIENTRAS pnQuadGenCiclos1 LPAREN expresion RPAREN pnQuadGenCiclos2 HAZ bloque pnQuadGenCiclos3','condicional',9,'p_condicional','parser.py',313),
  ('no_condicional -> DESDE pnQuadGenCiclos4 variable ASSIGN pnQuadGenSec1 exp pnQuadGenCiclos5 HASTA pnQuadGenCiclos6 exp pnQuadGenCiclos7 HACER bloque pnQuadGenCiclos8','no_condicional',14,'p_no_condicional','parser.py',316),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',321),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',322),
  ('fev -> DISTRIBUCION','fev',1,'p_fev','parser.py',326),
  ('fev -> TENDENCIA','fev',1,'p_fev','parser.py',327),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',332),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',333),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',337),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',338),
  ('fe -> MODA','fe',1,'p_fe','parser.py',339),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',340),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',343),
  ('var_cte -> CTE_INT pnQuadGenCteInt','var_cte',2,'p_var_cte','parser.py',350),
  ('var_cte -> CTE_FLOAT pnQuadGenCteFloat','var_cte',2,'p_var_cte','parser.py',351),
  ('var_cte -> CTE_CH pnQuadGenCteChar','var_cte',2,'p_var_cte','parser.py',352),
  ('var_cte -> CTE_STR pnQuadGenCteStr','var_cte',2,'p_var_cte','parser.py',353),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',359),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',363),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',364),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',368),
  ('meg -> op_l pnQuadGenExp10 mega_exp pnQuadGenExp11','meg',4,'p_meg','parser.py',372),
  ('meg -> empty','meg',1,'p_meg','parser.py',373),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',377),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',378),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',382),
  ('sp -> op_r exp pnQuadGenExp9','sp',3,'p_sp','parser.py',386),
  ('sp -> empty','sp',1,'p_sp','parser.py',387),
  ('op_r -> LT pnQuadGenExp8','op_r',2,'p_op_r','parser.py',391),
  ('op_r -> GT pnQuadGenExp8','op_r',2,'p_op_r','parser.py',392),
  ('op_r -> LE pnQuadGenExp8','op_r',2,'p_op_r','parser.py',393),
  ('op_r -> GE pnQuadGenExp8','op_r',2,'p_op_r','parser.py',394),
  ('op_r -> NOT_EQUAL pnQuadGenExp8','op_r',2,'p_op_r','parser.py',395),
  ('op_r -> EQUAL pnQuadGenExp8','op_r',2,'p_op_r','parser.py',396),
  ('exp -> termino pnQuadGenExp4 exp1','exp',3,'p_exp','parser.py',400),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',404),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',405),
  ('op_a -> ADD pnQuadGenExp2','op_a',2,'p_op_a','parser.py',409),
  ('op_a -> SUB pnQuadGenExp2','op_a',2,'p_op_a','parser.py',410),
  ('termino -> factor pnQuadGenExp5 term','termino',3,'p_termino','parser.py',414),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',418),
  ('term -> empty','term',1,'p_term','parser.py',419),
  ('op_a1 -> MUL pnQuadGenExp3','op_a1',2,'p_op_a1','parser.py',423),
  ('op_a1 -> DIV pnQuadGenExp3','op_a1',2,'p_op_a1','parser.py',424),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',429),
  ('factor -> LPAREN pnQuadGenExp6 exp RPAREN pnQuadGenExp7','factor',5,'p_factor','parser.py',430),
  ('factor -> variable','factor',1,'p_factor','parser.py',431),
  ('factor -> llamada','factor',1,'p_factor','parser.py',432),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',433),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',438),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',596),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',603),
  ('pn_3_addFunction -> <empty>','pn_3_addFunction',0,'p_pn_3_addFunction','parser.py',619),
  ('pn_4_params -> <empty>','pn_4_params',0,'p_pn_4_params','parser.py',632),
  ('pn_5_updateContParams -> <empty>','pn_5_updateContParams',0,'p_pn_5_updateContParams','parser.py',646),
  ('pn_6_end -> <empty>','pn_6_end',0,'p_pn_6_end','parser.py',655),
  ('pn_7_decRenglones -> <empty>','pn_7_decRenglones',0,'p_pn_7_decRenglones','parser.py',661),
  ('pn_8_decColumnas -> <empty>','pn_8_decColumnas',0,'p_pn_8_decColumnas','parser.py',669),
  ('pn_9_setCurrentFuncGl -> <empty>','pn_9_setCurrentFuncGl',0,'p_pn_9_setCurrentFuncGl','parser.py',676),
  ('pnQuadGenCteInt -> <empty>','pnQuadGenCteInt',0,'p_pnQuadGenCteInt','parser.py',687),
  ('pnQuadGenCteFloat -> <empty>','pnQuadGenCteFloat',0,'p_pnQuadGenCteFloat','parser.py',694),
  ('pnQuadGenCteChar -> <empty>','pnQuadGenCteChar',0,'p_pnQuadGenCteChar','parser.py',701),
  ('pnQuadGenCteStr -> <empty>','pnQuadGenCteStr',0,'p_pnQuadGenCteStr','parser.py',708),
  ('pnQuadGenExp1 -> <empty>','pnQuadGenExp1',0,'p_pnQuadGenExp1','parser.py',719),
  ('pnQuadGenExp2 -> <empty>','pnQuadGenExp2',0,'p_pnQuadGenExp2','parser.py',751),
  ('pnQuadGenExp3 -> <empty>','pnQuadGenExp3',0,'p_pnQuadGenExp3','parser.py',765),
  ('pnQuadGenExp4 -> <empty>','pnQuadGenExp4',0,'p_pnQuadGenExp4','parser.py',779),
  ('pnQuadGenExp5 -> <empty>','pnQuadGenExp5',0,'p_pnQuadGenExp5','parser.py',803),
  ('pnQuadGenExp6 -> <empty>','pnQuadGenExp6',0,'p_pnQuadGenExp6','parser.py',827),
  ('pnQuadGenExp7 -> <empty>','pnQuadGenExp7',0,'p_pnQuadGenExp7','parser.py',834),
  ('pnQuadGenExp8 -> <empty>','pnQuadGenExp8',0,'p_pnQuadGenExp8','parser.py',841),
  ('pnQuadGenExp9 -> <empty>','pnQuadGenExp9',0,'p_pnQuadGenExp9','parser.py',853),
  ('pnQuadGenExp10 -> <empty>','pnQuadGenExp10',0,'p_pnQuadGenExp10','parser.py',878),
  ('pnQuadGenExp11 -> <empty>','pnQuadGenExp11',0,'p_pnQuadGenExp11','parser.py',890),
  ('pnQuadGenSec1 -> <empty>','pnQuadGenSec1',0,'p_pnQuadGenSec1','parser.py',916),
  ('pnQuadGenSec2 -> <empty>','pnQuadGenSec2',0,'p_pnQuadGenSec2','parser.py',928),
  ('pnQuadGenSec3 -> <empty>','pnQuadGenSec3',0,'p_pnQuadGenSec3','parser.py',957),
  ('pnQuadGenSec4 -> <empty>','pnQuadGenSec4',0,'p_pnQuadGenSec4','parser.py',969),
  ('pnQuadGenCond1 -> <empty>','pnQuadGenCond1',0,'p_pnQuadGenCond1','parser.py',994),
  ('pnQuadGenCond2 -> <empty>','pnQuadGenCond2',0,'p_pnQuadGenCond2','parser.py',1012),
  ('pnQuadGenCond3 -> <empty>','pnQuadGenCond3',0,'p_pnQuadGenCond3','parser.py',1024),
  ('pnQuadGenCiclos1 -> <empty>','pnQuadGenCiclos1',0,'p_pnQuadGenCiclos1','parser.py',1038),
  ('pnQuadGenCiclos2 -> <empty>','pnQuadGenCiclos2',0,'p_pnQuadGenCiclos2','parser.py',1046),
  ('pnQuadGenCiclos3 -> <empty>','pnQuadGenCiclos3',0,'p_pnQuadGenCiclos3','parser.py',1060),
  ('pnQuadGenCiclos4 -> <empty>','pnQuadGenCiclos4',0,'p_pnQuadGenCiclos4','parser.py',1072),
  ('pnQuadGenCiclos5 -> <empty>','pnQuadGenCiclos5',0,'p_pnQuadGenCiclos5','parser.py',1080),
  ('pnQuadGenCiclos6 -> <empty>','pnQuadGenCiclos6',0,'p_pnQuadGenCiclos6','parser.py',1104),
  ('pnQuadGenCiclos7 -> <empty>','pnQuadGenCiclos7',0,'p_pnQuadGenCiclos7','parser.py',1112),
  ('pnQuadGenCiclos8 -> <empty>','pnQuadGenCiclos8',0,'p_pnQuadGenCiclos8','parser.py',1118),
]
