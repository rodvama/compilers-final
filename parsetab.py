
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PLOTHIST PLOTLINE PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL pn_9_setCurrentFuncGl LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pn_4_params param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID dd pn_2_addVariable lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK pn_8_decColumnas\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN pnQuadGenSec1 asig\n    asig : llamada\n         | exp SEMICOLON pnQuadGenSec2\n    variable : ID pnQuadGenExp1 di\n    di : dim_index\n       | empty\n    llamada :  ID LPAREN llamada1 RPAREN SEMICOLON\n    llamada1 : exp llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN SEMICOLONlectura : LEE pnQuadGenSec3 LPAREN variable RPAREN SEMICOLON pnQuadGenSec4escritura : ESCRIBE pnQuadGenSec3 LPAREN esc RPAREN SEMICOLON pnQuadGenSec4esc : esc1 esc2\n    esc1 : exp\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN pnQuadGenCond1 ENTONCES bloque sino pnQuadGenCond2\n    sino : SINO pnQuadGenCond3 bloque\n         | empty\n    condicional : MIENTRAS pnQuadGenCiclos1 LPAREN expresion RPAREN pnQuadGenCiclos2 HAZ bloque pnQuadGenCiclos3no_condicional : DESDE pnQuadGenCiclos4 variable ASSIGN pnQuadGenSec1 exp pnQuadGenCiclos5 HASTA pnQuadGenCiclos6 exp pnQuadGenCiclos7 HACER bloque pnQuadGenCiclos8\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : PLOTHIST\n        | PLOTLINE\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_CH pnQuadGenCteChar\n            | CTE_STR pnQuadGenCteStr\n            | SUB pnNeg var_num\n            | var_num\n    \n    var_num : CTE_INT pnQuadGenCteInt\n            | CTE_FLOAT pnQuadGenCteFloat\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l pnQuadGenExp10 mega_exp pnQuadGenExp11\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r  exp pnQuadGenExp9\n       | empty\n    \n    op_r : LT pnQuadGenExp8\n         | GT pnQuadGenExp8\n         | LE pnQuadGenExp8\n         | GE pnQuadGenExp8\n         | NOT_EQUAL pnQuadGenExp8\n         | EQUAL pnQuadGenExp8\n    exp : termino pnQuadGenExp4 exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD pnQuadGenExp2\n         | SUB pnQuadGenExp2\n    termino : factor pnQuadGenExp5 term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL pnQuadGenExp3\n          | DIV pnQuadGenExp3\n    \n    factor : var_cte\n           | LPAREN pnQuadGenExp6 exp RPAREN pnQuadGenExp7\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pn_3_addFunction : \n    \n    pn_4_params :\n    \n    pn_5_updateContParams :  \n    \n    pn_6_end :\n    \n    pn_7_decRenglones :\n    \n    pn_8_decColumnas : \n    \n    pn_9_setCurrentFuncGl :\n    \n    pnNeg :\n    \n    pnQuadGenCteInt :\n    \n    pnQuadGenCteFloat :\n    \n    pnQuadGenCteChar :\n    \n    pnQuadGenCteStr :\n    \n    pnQuadGenExp1 : \n    \n    pnQuadGenExp2 : \n    \n    pnQuadGenExp3 : \n    \n    pnQuadGenExp4 : \n    \n    pnQuadGenExp5 : \n    \n    pnQuadGenExp6 : \n    \n    pnQuadGenExp7 : \n    \n    pnQuadGenExp8 : \n    \n    pnQuadGenExp9 : \n    \n    pnQuadGenExp10 : \n    \n    pnQuadGenExp11 : \n    \n    pnQuadGenSec1 : \n    \n    pnQuadGenSec2 : \n    \n    pnQuadGenSec3 : \n    \n    pnQuadGenSec4 : \n    \n    pnQuadGenCond1 :\n    \n    pnQuadGenCond2 :\n    \n    pnQuadGenCond3 :\n    \n    pnQuadGenCiclos1 :  \n    \n    pnQuadGenCiclos2 : \n    \n    pnQuadGenCiclos3 : \n    \n    pnQuadGenCiclos4 : \n    \n    pnQuadGenCiclos5 : \n    \n    pnQuadGenCiclos6 :\n    \n    pnQuadGenCiclos7 :\n    \n    pnQuadGenCiclos8 :\n    '
    
_lr_action_items = {'HAZ':([210,251,],[-160,278,]),'SUB':([81,97,103,104,105,108,115,117,119,121,123,124,126,128,130,131,132,133,134,135,137,141,142,143,144,145,164,165,166,168,169,170,171,177,179,184,188,190,191,195,197,198,200,201,202,203,204,211,214,215,217,218,219,220,221,222,228,231,233,234,239,242,243,244,246,247,248,253,255,256,257,258,260,266,267,268,270,281,294,296,297,306,310,],[-141,116,-152,-126,116,116,116,-121,-144,-125,-124,-145,-91,-140,-146,-123,-137,-141,-139,-138,116,116,-55,-54,116,-56,217,-126,-89,116,-92,-88,-93,-152,-124,116,-100,-150,-101,116,-148,-148,-148,116,-148,-148,-148,-90,-142,116,-142,-116,-143,-143,-118,116,116,116,-126,-57,116,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,-117,-147,-37,-35,116,116,-122,-81,-164,-36,116,-82,]),'PLOTLINE':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[65,-47,-42,-43,-48,65,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'VOID':([10,],[25,]),'EQUAL':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,154,164,165,166,169,170,171,211,213,216,218,221,233,234,254,258,260,266,267,281,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,202,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-37,-35,-122,-81,-36,-82,]),'CARGA':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[66,-47,-42,-43,-48,66,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'CHAR':([6,10,38,46,52,155,],[19,19,19,-26,19,19,]),'SINO':([98,290,],[-38,299,]),'CORRELACIONA':([97,103,105,108,115,130,137,141,144,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[118,-152,118,118,118,-146,118,118,118,118,-152,118,-100,-150,-101,118,-148,-148,-148,118,-148,-148,-148,-142,118,-142,-143,-143,118,118,118,118,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,118,118,-164,118,]),'CTE_CH':([97,103,105,108,115,130,137,141,144,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[134,-152,134,134,134,-146,134,134,134,134,-152,134,-100,-150,-101,134,-148,-148,-148,134,-148,-148,-148,-142,134,-142,-143,-143,134,134,134,134,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,134,134,-164,134,]),'MUL':([81,104,117,121,123,124,126,128,131,132,133,134,135,142,143,145,165,166,169,170,171,179,211,233,234,260,266,267,281,294,297,310,],[-141,-126,-121,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,219,-89,-92,-88,-93,-124,-90,-126,-57,-147,-37,-35,-122,-81,-36,-82,]),'DIV':([81,104,117,121,123,124,126,128,131,132,133,134,135,142,143,145,165,166,169,170,171,179,211,233,234,260,266,267,281,294,297,310,],[-141,-126,-121,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,220,-89,-92,-88,-93,-124,-90,-126,-57,-147,-37,-35,-122,-81,-36,-82,]),'RBRACE':([55,69,70,72,73,74,76,77,79,82,84,87,89,90,98,101,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[-126,98,-47,-42,-43,-40,-48,-126,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'NOT_EQUAL':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,154,164,165,166,169,170,171,211,213,216,218,221,233,234,254,258,260,266,267,281,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,198,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-37,-35,-122,-81,-36,-82,]),'RPAREN':([41,52,58,59,60,91,104,105,109,117,119,121,123,124,126,128,131,132,133,134,135,136,139,142,143,145,146,147,148,151,152,153,154,156,157,161,164,165,166,169,170,171,173,174,175,183,184,185,186,189,192,193,194,199,205,206,211,213,216,218,221,224,227,229,233,234,235,238,240,245,254,258,260,262,266,267,272,274,276,277,280,281,283,289,294,297,298,302,304,310,],[51,-126,-16,92,-17,-130,-126,-126,-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,172,-141,-55,-54,-56,182,-59,-126,-126,-126,196,-126,-18,-20,210,-126,-126,-89,-92,-88,-93,226,-126,-66,-58,-126,-61,236,-97,-99,-94,-96,-102,-104,-19,-90,-111,-113,-116,-118,260,-65,-68,-126,-57,-60,271,-95,-149,-112,-117,-147,-67,-37,-35,-151,-103,-71,-70,294,-122,295,-98,-81,-36,-87,309,310,-82,]),'SEMICOLON':([3,39,40,47,49,50,53,61,63,64,81,93,94,104,111,113,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,164,165,166,169,170,171,172,179,180,182,208,211,213,216,218,221,226,233,234,236,249,254,258,260,266,267,271,281,294,295,297,309,310,],[4,46,-126,-128,-28,-29,-126,-27,-31,-133,-141,-30,-126,-126,-32,-34,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,-126,-126,-89,-92,-88,-93,225,-124,232,234,-134,-90,-111,-113,-116,-118,261,-126,-57,269,-33,-112,-117,-147,-37,-35,288,-122,-81,305,-36,313,-82,]),'VARIABLES':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,187,225,232,234,252,259,261,265,269,282,286,288,290,292,293,300,301,303,305,308,312,313,316,317,],[75,-47,-42,-43,-48,75,-50,-49,-41,-44,-46,-45,-38,-51,-52,237,-62,-153,-57,237,237,-155,-53,-155,-64,-63,-78,-126,-161,237,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'GE':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,154,164,165,166,169,170,171,211,213,216,218,221,233,234,254,258,260,266,267,281,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,200,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-37,-35,-122,-81,-36,-82,]),'DATAFRAME':([6,38,46,],[18,18,-26,]),'ESCRIBE':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[71,-47,-42,-43,-48,71,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'MODA':([97,103,105,108,115,130,137,141,144,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[122,-152,122,122,122,-146,122,122,122,122,-152,122,-100,-150,-101,122,-148,-148,-148,122,-148,-148,-148,-142,122,-142,-143,-143,122,122,122,122,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,122,122,-164,122,]),'LT':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,154,164,165,166,169,170,171,211,213,216,218,221,233,234,254,258,260,266,267,281,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,203,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-37,-35,-122,-81,-36,-82,]),'COMMA':([40,47,49,50,53,64,91,94,104,109,111,113,114,117,119,121,123,124,126,128,131,132,133,134,135,138,142,143,145,148,150,164,165,166,169,170,171,174,175,208,209,211,212,213,216,218,221,223,230,233,234,249,254,258,260,266,267,275,276,277,279,281,294,297,298,310,],[-126,-128,-28,-29,62,-133,-130,-126,-126,155,-32,-34,160,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,176,-55,-54,-56,184,187,-126,-126,-89,-92,-88,-93,228,-66,-134,250,-90,252,-111,-113,-116,-118,259,263,-126,-57,-33,-112,-117,-147,-37,-35,291,-71,-70,293,-122,-81,-36,-87,-82,]),'MEDIANA':([97,103,105,108,115,130,137,141,144,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[125,-152,125,125,125,-146,125,125,125,125,-152,125,-100,-150,-101,125,-148,-148,-148,125,-148,-148,-148,-142,125,-142,-143,-143,125,125,125,125,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,125,125,-164,125,]),'ASSIGN':([80,81,104,117,119,121,123,124,126,128,131,132,133,134,135,139,140,142,143,145,151,152,154,164,165,166,169,170,171,189,192,199,205,211,213,216,218,221,233,234,245,254,258,260,266,267,272,274,281,289,294,297,310,],[103,-141,-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-141,177,-55,-54,-56,-126,195,-126,-126,-126,-89,-92,-88,-93,-97,-99,-102,-104,-90,-111,-113,-116,-118,-126,-57,-149,-112,-117,-147,-37,-35,-151,-103,-122,-98,-81,-36,-82,]),'$end':([1,23,35,56,98,],[0,-132,-1,-6,-38,]),'HACER':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,164,165,166,169,170,171,211,213,216,218,221,233,234,254,258,260,266,267,281,294,297,310,311,314,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-37,-35,-122,-81,-36,-82,-165,315,]),'GT':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,154,164,165,166,169,170,171,211,213,216,218,221,233,234,254,258,260,266,267,281,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,197,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-37,-35,-122,-81,-36,-82,]),'STRING':([6,38,46,],[15,15,-26,]),'MEDIA':([97,103,105,108,115,130,137,141,144,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[127,-152,127,127,127,-146,127,127,127,127,-152,127,-100,-150,-101,127,-148,-148,-148,127,-148,-148,-148,-142,127,-142,-143,-143,127,127,127,127,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,127,127,-164,127,]),'REGRESA':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[68,-47,-42,-43,-48,68,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'RBRACK':([54,104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,159,164,165,166,169,170,171,181,211,213,216,218,221,233,234,254,258,260,266,267,281,285,287,294,297,310,],[64,-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,208,-126,-126,-89,-92,-88,-93,233,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-37,-35,-122,297,298,-81,-36,-82,]),'HASTA':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,164,165,166,169,170,171,211,213,216,218,221,233,234,254,258,260,264,266,267,281,284,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-163,-37,-35,-122,296,-81,-36,-82,]),'MIENTRAS':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[67,-47,-42,-43,-48,67,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'ADD':([81,104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,164,165,166,169,170,171,179,211,218,221,233,234,258,260,266,267,281,294,297,310,],[-141,-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,214,-126,-89,-92,-88,-93,-124,-90,-116,-118,-126,-57,-117,-147,-37,-35,-122,-81,-36,-82,]),'LE':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,154,164,165,166,169,170,171,211,213,216,218,221,233,234,254,258,260,266,267,281,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,204,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-57,-112,-117,-147,-37,-35,-122,-81,-36,-82,]),'DESDE':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[78,-47,-42,-43,-48,78,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'LPAREN':([22,34,37,42,65,66,67,68,71,75,81,83,85,86,88,96,97,99,103,105,106,108,115,118,120,122,125,127,129,130,133,137,141,144,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[-135,41,-129,52,-80,95,-159,97,-154,100,105,-154,-79,107,108,115,130,137,-152,130,149,130,130,163,-86,-85,-84,-83,167,-146,105,130,130,130,130,-152,130,-100,-150,-101,130,-148,-148,-148,130,-148,-148,-148,-142,130,-142,-143,-143,130,130,130,130,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,130,130,-164,130,]),'VAR':([4,92,110,],[6,-131,6,]),'CTE_INT':([48,97,103,105,108,112,115,116,130,137,141,144,162,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,250,253,255,256,257,268,270,291,296,306,],[54,132,-152,132,132,159,132,-136,-146,132,132,132,132,132,-152,132,-100,-150,-101,132,-148,-148,-148,132,-148,-148,-148,-142,132,-142,-143,-143,132,132,132,132,-106,-109,-108,-110,-105,-107,276,-114,-115,-119,-120,132,132,276,-164,132,]),'ID':([2,14,19,21,24,25,26,28,31,32,33,36,55,57,62,70,72,73,76,77,78,79,82,84,87,89,90,95,97,98,100,102,103,105,107,108,115,130,137,141,144,149,163,167,168,176,177,178,179,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,225,228,231,232,234,239,242,243,244,246,247,248,250,253,255,256,257,261,263,265,268,269,270,282,286,288,290,291,292,296,300,301,303,305,306,308,312,313,316,317,],[3,-127,-127,-127,-15,-127,37,-22,-23,40,-21,-14,81,91,40,-47,-42,-43,-48,81,-162,-50,-49,-41,-44,-46,-45,114,133,-38,138,139,-152,133,150,133,133,-146,133,81,133,139,212,223,133,230,-152,-51,-52,133,-100,-150,-101,133,-148,-148,-148,133,-148,-148,-148,-142,133,-142,-143,-143,133,-62,133,133,-153,-57,133,-106,-109,-108,-110,-105,-107,277,-114,-115,-119,-120,-155,283,-53,133,-155,133,-64,-63,-78,-126,277,-161,-164,-157,-74,-75,-77,133,-72,-73,-69,-166,-76,]),'FUNCION':([4,5,7,8,11,16,38,43,44,45,46,98,207,],[-126,10,-2,-3,10,-7,-126,-8,-9,-10,-26,-38,-13,]),'AND':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,151,154,164,165,166,169,170,171,199,205,211,213,216,218,221,233,234,245,254,258,260,266,267,274,281,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,188,-126,-126,-126,-89,-92,-88,-93,-102,-104,-90,-111,-113,-116,-118,-126,-57,-149,-112,-117,-147,-37,-35,-103,-122,-81,-36,-82,]),'LBRACE':([7,8,16,38,43,44,45,46,51,92,110,158,273,278,299,307,315,],[-2,-3,-7,-126,-8,-9,-10,-26,55,-131,-126,55,55,55,-158,55,55,]),'LEE':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[83,-47,-42,-43,-48,83,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'VARIANZA':([97,103,105,108,115,130,137,141,144,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[120,-152,120,120,120,-146,120,120,120,120,-152,120,-100,-150,-101,120,-148,-148,-148,120,-148,-148,-148,-142,120,-142,-143,-143,120,120,120,120,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,120,120,-164,120,]),'CTE_STR':([97,103,105,108,115,130,137,141,144,160,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[128,-152,128,128,128,-146,128,128,128,209,128,-152,128,-100,-150,-101,128,-148,-148,-148,128,-148,-148,-148,-142,128,-142,-143,-143,128,128,128,128,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,128,128,-164,128,]),'INT':([6,10,38,46,52,155,],[21,21,21,-26,21,21,]),'PLOTHIST':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[85,-47,-42,-43,-48,85,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'FLOAT':([6,10,38,46,52,155,],[14,14,14,-26,14,14,]),'CTE_FLOAT':([97,103,105,108,115,116,130,137,141,144,162,168,177,184,188,190,191,195,197,198,200,201,202,203,204,214,215,217,219,220,222,228,231,239,242,243,244,246,247,248,253,255,256,257,268,270,296,306,],[135,-152,135,135,135,-136,-146,135,135,135,135,135,-152,135,-100,-150,-101,135,-148,-148,-148,135,-148,-148,-148,-142,135,-142,-143,-143,135,135,135,135,-106,-109,-108,-110,-105,-107,-114,-115,-119,-120,135,135,-164,135,]),'LBRACK':([40,64,81,94,104,133,139,233,237,],[48,-133,-141,112,144,-141,-141,268,270,]),'ENTONCES':([196,241,],[-156,273,]),'TWO_DOTS':([13,14,15,17,18,19,20,21,28,29,30,31,33,],[-12,-127,-127,-11,-127,-127,32,-127,-22,-25,-24,-23,-21,]),'SI':([55,70,72,73,76,77,79,82,84,87,89,90,98,178,179,225,232,234,261,265,269,282,286,288,290,292,300,301,303,305,308,312,313,316,317,],[88,-47,-42,-43,-48,88,-50,-49,-41,-44,-46,-45,-38,-51,-52,-62,-153,-57,-155,-53,-155,-64,-63,-78,-126,-161,-157,-74,-75,-77,-72,-73,-69,-166,-76,]),'PROGRAMA':([0,],[2,]),'OR':([104,117,119,121,123,124,126,128,131,132,133,134,135,142,143,145,151,154,164,165,166,169,170,171,199,205,211,213,216,218,221,233,234,245,254,258,260,266,267,274,281,294,297,310,],[-126,-121,-144,-125,-124,-145,-91,-140,-123,-137,-141,-139,-138,-55,-54,-56,191,-126,-126,-126,-89,-92,-88,-93,-102,-104,-90,-111,-113,-116,-118,-126,-57,-149,-112,-117,-147,-37,-35,-103,-122,-81,-36,-82,]),'PRINCIPAL':([4,5,7,8,9,11,12,16,27,38,43,44,45,46,98,207,],[-126,-126,-2,-3,22,-126,-5,-7,-4,-126,-8,-9,-10,-26,-38,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque':([51,158,273,278,307,315,],[56,207,290,292,312,316,]),'principal':([9,],[23,]),'funciones_especiales':([97,105,108,115,137,141,144,168,184,195,201,215,222,228,231,239,268,270,306,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'pnQuadGenCiclos5':([264,],[284,]),'param':([52,155,],[58,206,]),'pnQuadGenCond3':([299,],[307,]),'pnQuadGenCond2':([300,],[308,]),'pnQuadGenCond1':([196,],[241,]),'factor':([97,105,108,115,137,141,144,168,184,195,201,215,222,228,231,239,268,270,306,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'dim_dec':([40,],[49,]),'pn_9_setCurrentFuncGl':([22,],[34,]),'func1':([5,11,],[9,27,]),'var1':([4,110,],[5,158,]),'var3':([38,],[43,]),'di':([104,],[143,]),'condicional':([55,77,],[76,76,]),'tipo_fun':([10,],[26,]),'pnQuadGenExp11':([272,],[289,]),'estatutos':([55,77,],[77,77,]),'tipo_compuesto':([6,38,],[13,13,]),'expresion':([108,115,195,],[153,161,240,]),'term':([165,],[218,]),'pnQuadGenExp7':([260,],[281,]),'pnQuadGenCteInt':([132,],[169,]),'parametros':([52,],[59,]),'lista1':([53,],[61,]),'carga_datos':([55,77,],[89,89,]),'op_a1':([165,],[222,]),'pn_1_setCurrentType':([14,15,18,19,21,25,],[28,29,30,31,33,36,]),'var_cte':([97,105,108,115,137,141,144,168,184,195,201,215,222,228,231,239,268,270,306,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'super_exp':([108,115,195,239,],[151,151,151,151,]),'dim_index':([104,],[142,]),'est':([55,77,],[69,101,]),'asig':([141,],[178,]),'decision':([55,77,],[70,70,]),'lista_ids':([32,],[38,]),'pnQuadGenCiclos4':([78,],[102,]),'llamada':([55,77,97,105,108,115,137,141,144,168,184,195,201,215,222,228,231,239,268,270,306,],[72,72,123,123,123,123,123,179,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'pnQuadGenCiclos6':([296,],[306,]),'pnQuadGenCiclos7':([311,],[314,]),'esc':([137,228,],[173,262,]),'pnQuadGenCiclos1':([67,],[96,]),'pnQuadGenCiclos2':([210,],[251,]),'pnQuadGenCiclos3':([292,],[303,]),'pnQuadGenCiclos8':([316,],[317,]),'lectura':([55,77,],[87,87,]),'pnQuadGenCteFloat':([135,],[171,]),'meg':([151,],[189,]),'sino':([290,],[300,]),'funciones_especiales_void':([55,77,],[79,79,]),'pn_2_addVariable':([47,],[53,]),'dim_index1':([233,],[267,]),'fe':([97,105,108,115,137,141,144,168,184,195,201,215,222,228,231,239,268,270,306,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'pn_3_addFunction':([37,],[42,]),'tipo_simple':([6,10,38,52,155,],[17,24,17,57,57,]),'ca':([250,291,],[275,302,]),'termino':([97,105,108,115,137,141,144,168,184,195,201,215,222,228,231,239,268,270,306,],[119,119,119,119,119,119,119,119,119,119,119,119,258,119,119,119,119,119,119,]),'var_num':([97,105,108,115,137,141,144,162,168,184,195,201,215,222,228,231,239,268,270,306,],[126,126,126,126,126,126,126,211,126,126,126,126,126,126,126,126,126,126,126,126,]),'exp1':([164,],[213,]),'fev':([55,77,],[86,86,]),'var':([4,110,],[7,7,]),'pn_5_updateContParams':([92,],[110,]),'type':([6,38,],[20,20,]),'empty':([4,5,11,38,40,52,53,55,77,94,104,105,109,110,148,151,152,154,164,165,174,184,233,290,],[8,12,12,45,50,60,63,74,74,113,145,147,157,8,185,192,194,205,216,221,229,147,266,301,]),'expresion1':([152,],[193,]),'dim_dec1':([94,],[111,]),'pnQuadGenSec2':([232,],[265,]),'pnQuadGenSec1':([103,177,],[141,231,]),'op_r':([154,],[201,]),'pnQuadGenSec4':([261,269,],[282,286,]),'op_l':([151,],[190,]),'lista':([32,62,],[39,93,]),'op_a':([164,],[215,]),'no_condicional':([55,77,],[82,82,]),'pnQuadGenExp1':([81,133,139,],[104,104,104,]),'pnQuadGenExp3':([219,220,],[256,257,]),'pnQuadGenExp2':([214,217,],[253,255,]),'pnQuadGenExp5':([124,],[165,]),'pnQuadGenExp4':([119,],[164,]),'asignacion':([55,77,],[84,84,]),'pnQuadGenExp6':([130,],[168,]),'pnQuadGenExp9':([245,],[274,]),'pnQuadGenExp8':([197,198,200,202,203,204,],[242,243,244,246,247,248,]),'param1':([109,],[156,]),'pnQuadGenCteChar':([134,],[170,]),'pnNeg':([116,],[162,]),'llamada2':([148,],[183,]),'pnQuadGenCteStr':([128,],[166,]),'v_exp':([187,252,259,293,],[238,279,280,304,]),'llamada1':([105,184,],[146,235,]),'pn_8_decColumnas':([208,],[249,]),'var2':([6,38,],[16,44,]),'pnQuadGenSec3':([71,83,],[99,106,]),'retorno':([55,77,],[73,73,]),'pnQuadGenExp10':([190,],[239,]),'dd':([40,],[47,]),'funcion':([5,11,],[11,11,]),'pn_6_end':([23,],[35,]),'escritura':([55,77,],[90,90,]),'esc1':([137,228,],[174,174,]),'esc2':([174,],[227,]),'mega_exp':([108,115,195,239,],[152,152,152,272,]),'variable':([55,77,97,102,105,108,115,137,141,144,149,168,184,195,201,215,222,228,231,239,268,270,306,],[80,80,131,140,131,131,131,131,131,131,186,131,131,131,131,131,131,131,131,131,131,131,131,]),'sp':([154,],[199,]),'pn_4_params':([91,],[109,]),'programa':([0,],[1,]),'exp':([97,105,108,115,137,141,144,168,184,195,201,215,228,231,239,268,270,306,],[136,148,154,154,175,180,181,224,148,154,245,254,175,264,154,285,287,311,]),'pn_7_decRenglones':([64,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end','programa',7,'p_programa','parser.py',165),
  ('var1 -> var','var1',1,'p_var1','parser.py',173),
  ('var1 -> empty','var1',1,'p_var1','parser.py',174),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',180),
  ('func1 -> empty','func1',1,'p_func1','parser.py',181),
  ('principal -> PRINCIPAL pn_9_setCurrentFuncGl LPAREN RPAREN bloque','principal',5,'p_principal','parser.py',186),
  ('var -> VAR var2','var',2,'p_var','parser.py',191),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',195),
  ('var3 -> var2','var3',1,'p_var3','parser.py',200),
  ('var3 -> empty','var3',1,'p_var3','parser.py',201),
  ('type -> tipo_simple','type',1,'p_type','parser.py',207),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',208),
  ('funcion -> FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque','funcion',10,'p_funcion','parser.py',213),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',218),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',219),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',225),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',226),
  ('param -> tipo_simple ID pn_4_params param1','param',4,'p_param','parser.py',231),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',236),
  ('param1 -> empty','param1',1,'p_param1','parser.py',237),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',243),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',244),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',245),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',250),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',251),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',256),
  ('lista -> ID dd pn_2_addVariable lista1','lista',4,'p_lista','parser.py',259),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',263),
  ('dd -> empty','dd',1,'p_dd','parser.py',264),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',269),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',270),
  ('dim_dec -> LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1','dim_dec',5,'p_dim_dec','parser.py',275),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK pn_8_decColumnas','dim_dec1',4,'p_dim_dec1','parser.py',279),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',280),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',284),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',288),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',289),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',295),
  ('est -> estatutos est','est',2,'p_est','parser.py',300),
  ('est -> empty','est',1,'p_est','parser.py',301),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',307),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',308),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',309),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',310),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',311),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',312),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',313),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',314),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',315),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',316),
  ('asignacion -> variable ASSIGN pnQuadGenSec1 asig','asignacion',4,'p_asignacion','parser.py',323),
  ('asig -> llamada','asig',1,'p_asig','parser.py',327),
  ('asig -> exp SEMICOLON pnQuadGenSec2','asig',3,'p_asig','parser.py',328),
  ('variable -> ID pnQuadGenExp1 di','variable',3,'p_variable','parser.py',331),
  ('di -> dim_index','di',1,'p_di','parser.py',335),
  ('di -> empty','di',1,'p_di','parser.py',336),
  ('llamada -> ID LPAREN llamada1 RPAREN SEMICOLON','llamada',5,'p_llamada','parser.py',340),
  ('llamada1 -> exp llamada2','llamada1',2,'p_llamada1','parser.py',344),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',345),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',350),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',351),
  ('retorno -> REGRESA LPAREN exp RPAREN SEMICOLON','retorno',5,'p_retorno','parser.py',355),
  ('lectura -> LEE pnQuadGenSec3 LPAREN variable RPAREN SEMICOLON pnQuadGenSec4','lectura',7,'p_lectura','parser.py',358),
  ('escritura -> ESCRIBE pnQuadGenSec3 LPAREN esc RPAREN SEMICOLON pnQuadGenSec4','escritura',7,'p_escritura','parser.py',361),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',364),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',368),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',372),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',373),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',377),
  ('ca -> ID','ca',1,'p_ca','parser.py',381),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',382),
  ('decision -> SI LPAREN expresion RPAREN pnQuadGenCond1 ENTONCES bloque sino pnQuadGenCond2','decision',9,'p_decision','parser.py',387),
  ('sino -> SINO pnQuadGenCond3 bloque','sino',3,'p_sino','parser.py',391),
  ('sino -> empty','sino',1,'p_sino','parser.py',392),
  ('condicional -> MIENTRAS pnQuadGenCiclos1 LPAREN expresion RPAREN pnQuadGenCiclos2 HAZ bloque pnQuadGenCiclos3','condicional',9,'p_condicional','parser.py',397),
  ('no_condicional -> DESDE pnQuadGenCiclos4 variable ASSIGN pnQuadGenSec1 exp pnQuadGenCiclos5 HASTA pnQuadGenCiclos6 exp pnQuadGenCiclos7 HACER bloque pnQuadGenCiclos8','no_condicional',14,'p_no_condicional','parser.py',400),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',405),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',406),
  ('fev -> PLOTHIST','fev',1,'p_fev','parser.py',410),
  ('fev -> PLOTLINE','fev',1,'p_fev','parser.py',411),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',416),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',417),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',421),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',422),
  ('fe -> MODA','fe',1,'p_fe','parser.py',423),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',424),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',427),
  ('var_cte -> CTE_CH pnQuadGenCteChar','var_cte',2,'p_var_cte','parser.py',434),
  ('var_cte -> CTE_STR pnQuadGenCteStr','var_cte',2,'p_var_cte','parser.py',435),
  ('var_cte -> SUB pnNeg var_num','var_cte',3,'p_var_cte','parser.py',436),
  ('var_cte -> var_num','var_cte',1,'p_var_cte','parser.py',437),
  ('var_num -> CTE_INT pnQuadGenCteInt','var_num',2,'p_var_num','parser.py',450),
  ('var_num -> CTE_FLOAT pnQuadGenCteFloat','var_num',2,'p_var_num','parser.py',451),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',458),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',462),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',463),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',467),
  ('meg -> op_l pnQuadGenExp10 mega_exp pnQuadGenExp11','meg',4,'p_meg','parser.py',471),
  ('meg -> empty','meg',1,'p_meg','parser.py',472),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',476),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',477),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',481),
  ('sp -> op_r exp pnQuadGenExp9','sp',3,'p_sp','parser.py',485),
  ('sp -> empty','sp',1,'p_sp','parser.py',486),
  ('op_r -> LT pnQuadGenExp8','op_r',2,'p_op_r','parser.py',490),
  ('op_r -> GT pnQuadGenExp8','op_r',2,'p_op_r','parser.py',491),
  ('op_r -> LE pnQuadGenExp8','op_r',2,'p_op_r','parser.py',492),
  ('op_r -> GE pnQuadGenExp8','op_r',2,'p_op_r','parser.py',493),
  ('op_r -> NOT_EQUAL pnQuadGenExp8','op_r',2,'p_op_r','parser.py',494),
  ('op_r -> EQUAL pnQuadGenExp8','op_r',2,'p_op_r','parser.py',495),
  ('exp -> termino pnQuadGenExp4 exp1','exp',3,'p_exp','parser.py',499),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',503),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',504),
  ('op_a -> ADD pnQuadGenExp2','op_a',2,'p_op_a','parser.py',508),
  ('op_a -> SUB pnQuadGenExp2','op_a',2,'p_op_a','parser.py',509),
  ('termino -> factor pnQuadGenExp5 term','termino',3,'p_termino','parser.py',513),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',517),
  ('term -> empty','term',1,'p_term','parser.py',518),
  ('op_a1 -> MUL pnQuadGenExp3','op_a1',2,'p_op_a1','parser.py',522),
  ('op_a1 -> DIV pnQuadGenExp3','op_a1',2,'p_op_a1','parser.py',523),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',528),
  ('factor -> LPAREN pnQuadGenExp6 exp RPAREN pnQuadGenExp7','factor',5,'p_factor','parser.py',529),
  ('factor -> variable','factor',1,'p_factor','parser.py',530),
  ('factor -> llamada','factor',1,'p_factor','parser.py',531),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',532),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',537),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',755),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',762),
  ('pn_3_addFunction -> <empty>','pn_3_addFunction',0,'p_pn_3_addFunction','parser.py',778),
  ('pn_4_params -> <empty>','pn_4_params',0,'p_pn_4_params','parser.py',791),
  ('pn_5_updateContParams -> <empty>','pn_5_updateContParams',0,'p_pn_5_updateContParams','parser.py',805),
  ('pn_6_end -> <empty>','pn_6_end',0,'p_pn_6_end','parser.py',814),
  ('pn_7_decRenglones -> <empty>','pn_7_decRenglones',0,'p_pn_7_decRenglones','parser.py',820),
  ('pn_8_decColumnas -> <empty>','pn_8_decColumnas',0,'p_pn_8_decColumnas','parser.py',828),
  ('pn_9_setCurrentFuncGl -> <empty>','pn_9_setCurrentFuncGl',0,'p_pn_9_setCurrentFuncGl','parser.py',835),
  ('pnNeg -> <empty>','pnNeg',0,'p_pnNeg','parser.py',846),
  ('pnQuadGenCteInt -> <empty>','pnQuadGenCteInt',0,'p_pnQuadGenCteInt','parser.py',853),
  ('pnQuadGenCteFloat -> <empty>','pnQuadGenCteFloat',0,'p_pnQuadGenCteFloat','parser.py',862),
  ('pnQuadGenCteChar -> <empty>','pnQuadGenCteChar',0,'p_pnQuadGenCteChar','parser.py',871),
  ('pnQuadGenCteStr -> <empty>','pnQuadGenCteStr',0,'p_pnQuadGenCteStr','parser.py',877),
  ('pnQuadGenExp1 -> <empty>','pnQuadGenExp1',0,'p_pnQuadGenExp1','parser.py',887),
  ('pnQuadGenExp2 -> <empty>','pnQuadGenExp2',0,'p_pnQuadGenExp2','parser.py',919),
  ('pnQuadGenExp3 -> <empty>','pnQuadGenExp3',0,'p_pnQuadGenExp3','parser.py',933),
  ('pnQuadGenExp4 -> <empty>','pnQuadGenExp4',0,'p_pnQuadGenExp4','parser.py',947),
  ('pnQuadGenExp5 -> <empty>','pnQuadGenExp5',0,'p_pnQuadGenExp5','parser.py',971),
  ('pnQuadGenExp6 -> <empty>','pnQuadGenExp6',0,'p_pnQuadGenExp6','parser.py',995),
  ('pnQuadGenExp7 -> <empty>','pnQuadGenExp7',0,'p_pnQuadGenExp7','parser.py',1002),
  ('pnQuadGenExp8 -> <empty>','pnQuadGenExp8',0,'p_pnQuadGenExp8','parser.py',1009),
  ('pnQuadGenExp9 -> <empty>','pnQuadGenExp9',0,'p_pnQuadGenExp9','parser.py',1021),
  ('pnQuadGenExp10 -> <empty>','pnQuadGenExp10',0,'p_pnQuadGenExp10','parser.py',1046),
  ('pnQuadGenExp11 -> <empty>','pnQuadGenExp11',0,'p_pnQuadGenExp11','parser.py',1058),
  ('pnQuadGenSec1 -> <empty>','pnQuadGenSec1',0,'p_pnQuadGenSec1','parser.py',1084),
  ('pnQuadGenSec2 -> <empty>','pnQuadGenSec2',0,'p_pnQuadGenSec2','parser.py',1096),
  ('pnQuadGenSec3 -> <empty>','pnQuadGenSec3',0,'p_pnQuadGenSec3','parser.py',1125),
  ('pnQuadGenSec4 -> <empty>','pnQuadGenSec4',0,'p_pnQuadGenSec4','parser.py',1137),
  ('pnQuadGenCond1 -> <empty>','pnQuadGenCond1',0,'p_pnQuadGenCond1','parser.py',1162),
  ('pnQuadGenCond2 -> <empty>','pnQuadGenCond2',0,'p_pnQuadGenCond2','parser.py',1180),
  ('pnQuadGenCond3 -> <empty>','pnQuadGenCond3',0,'p_pnQuadGenCond3','parser.py',1192),
  ('pnQuadGenCiclos1 -> <empty>','pnQuadGenCiclos1',0,'p_pnQuadGenCiclos1','parser.py',1206),
  ('pnQuadGenCiclos2 -> <empty>','pnQuadGenCiclos2',0,'p_pnQuadGenCiclos2','parser.py',1214),
  ('pnQuadGenCiclos3 -> <empty>','pnQuadGenCiclos3',0,'p_pnQuadGenCiclos3','parser.py',1228),
  ('pnQuadGenCiclos4 -> <empty>','pnQuadGenCiclos4',0,'p_pnQuadGenCiclos4','parser.py',1240),
  ('pnQuadGenCiclos5 -> <empty>','pnQuadGenCiclos5',0,'p_pnQuadGenCiclos5','parser.py',1248),
  ('pnQuadGenCiclos6 -> <empty>','pnQuadGenCiclos6',0,'p_pnQuadGenCiclos6','parser.py',1272),
  ('pnQuadGenCiclos7 -> <empty>','pnQuadGenCiclos7',0,'p_pnQuadGenCiclos7','parser.py',1291),
  ('pnQuadGenCiclos8 -> <empty>','pnQuadGenCiclos8',0,'p_pnQuadGenCiclos8','parser.py',1321),
]
