
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PLOTHIST PLOTLINE PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL pnPrincipal2 LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pnFunDec_2_3 param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID dd pn_2_addVariable lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK pn_8_decColumnas\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN pnSec1 asig\n    asig : llamada\n         | exp SEMICOLON pnSec2\n    variable : ID pnExp1 di\n    di : dim_index\n       | empty\n    llamada :  ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6 SEMICOLON\n    llamada1 : exp pnFunCall_3 llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN pnRetorno SEMICOLONlectura : LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4escritura : ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec4esc : esc1 esc2\n    esc1 : exp\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2\n    sino : SINO pnCond3 bloque\n         | empty\n    condicional : MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3no_condicional : DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : PLOTHIST\n        | PLOTLINE\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_CH pnCteChar\n            | CTE_STR pnCteStr\n            | SUB pnNeg var_num\n            | var_num\n    \n    var_num : CTE_INT pnCteInt\n            | CTE_FLOAT pnCteFloat\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l pnExp10 mega_exp pnExp11\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r  exp pnExp9\n       | empty\n    \n    op_r : LT pnExp8\n         | GT pnExp8\n         | LE pnExp8\n         | GE pnExp8\n         | NOT_EQUAL pnExp8\n         | EQUAL pnExp8\n    exp : termino pnExp4 exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD pnExp2\n         | SUB pnExp2\n    termino : factor pnExp5 term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL pnExp3\n          | DIV pnExp3\n    \n    factor : var_cte\n           | LPAREN pnExp6 exp RPAREN pnExp7\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pnGOTOprincipal : \n    \n    pnPrincipal2 :\n    \n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pnFunDec1 : \n    \n    pnFunDec_2_3 :\n    \n    pnFunDec4 :  \n    \n    pnFunDec7 :\n    \n    pn_7_decRenglones :\n    \n    pn_8_decColumnas : \n    \n    pnFunCall_1_2 : \n    \n    pnFunCall_3 :\n    \n    pnFunCall_5_6 : \n    \n    pnNeg :\n    \n    pnCteInt :\n    \n    pnCteFloat :\n    \n    pnCteChar :\n    \n    pnCteStr :\n    \n    pnExp1 : \n    \n    pnExp2 : \n    \n    pnExp3 : \n    \n    pnExp4 : \n    \n    pnExp5 : \n    \n    pnExp6 : \n    \n    pnExp7 : \n    \n    pnExp8 : \n    \n    pnExp9 : \n    \n    pnExp10 : \n    \n    pnExp11 : \n    \n    pnSec1 : \n    \n    pnSec2 : \n    \n    pnSec3 : \n    \n    pnSec4 : \n    \n    pnCond1 :\n    \n    pnCond2 :\n    \n    pnCond3 :\n    \n    pnCiclos1 :  \n    \n    pnCiclos2 : \n    \n    pnCiclos3 : \n    \n    pnCiclos4 : \n    \n    pnCiclos5 : \n    \n    pnCiclos6 :\n    \n    pnCiclos7 :\n    \n    pnCiclos8 :\n    \n    pnRetorno :\n    '
    
_lr_action_items = {'HAZ':([208,249,],[-164,281,]),'SUB':([82,101,105,106,111,116,119,120,122,123,125,127,129,130,131,132,133,135,136,138,141,142,143,144,145,146,163,164,165,167,168,169,170,175,177,186,188,189,193,195,196,198,199,200,201,202,209,211,213,214,216,217,218,219,220,226,228,230,237,240,241,242,244,245,246,251,252,254,255,256,258,264,265,266,268,273,284,288,299,300,301,310,315,],[-145,117,-156,-126,117,117,-148,-125,-124,-149,-91,-144,-150,-123,-121,-145,-141,-143,-142,117,117,-55,-54,117,-56,117,211,-126,-89,117,-92,-88,-93,-156,-124,-100,-154,-101,117,-152,-152,-152,117,-152,-152,-152,-90,-146,-146,117,-116,-147,-147,-118,117,117,117,-126,117,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,-117,-151,-37,-35,117,117,117,-122,-57,-81,-168,-36,117,-82,]),'PLOTLINE':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[67,-47,-42,-43,-48,67,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'VOID':([20,],[31,]),'EQUAL':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,153,163,164,165,168,169,170,209,212,215,216,219,230,253,256,258,264,265,284,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,200,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-112,-117,-151,-37,-35,-122,-57,-81,-36,-82,]),'CARGA':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[68,-47,-42,-43,-48,68,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'CHAR':([6,20,35,44,54,154,],[16,16,16,-26,16,16,]),'SINO':([100,295,],[-38,304,]),'CORRELACIONA':([101,105,111,116,129,138,141,144,146,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[118,-156,118,118,-150,118,118,118,118,118,-156,-100,-154,-101,118,-152,-152,-152,118,-152,-152,-152,-146,-146,118,-147,-147,118,118,118,118,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,118,118,118,-168,118,]),'CTE_CH':([101,105,111,116,129,138,141,144,146,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[135,-156,135,135,-150,135,135,135,135,135,-156,-100,-154,-101,135,-152,-152,-152,135,-152,-152,-152,-146,-146,135,-147,-147,135,135,135,135,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,135,135,135,-168,135,]),'MUL':([82,106,120,122,123,125,127,130,131,132,133,135,136,142,143,145,164,165,168,169,170,177,209,230,258,264,265,284,288,299,301,315,],[-145,-126,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,217,-89,-92,-88,-93,-124,-90,-126,-151,-37,-35,-122,-57,-81,-36,-82,]),'DIV':([82,106,120,122,123,125,127,130,131,132,133,135,136,142,143,145,164,165,168,169,170,177,209,230,258,264,265,284,288,299,301,315,],[-145,-126,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,218,-89,-92,-88,-93,-124,-90,-126,-151,-37,-35,-122,-57,-81,-36,-82,]),'RBRACE':([59,70,72,74,75,76,77,78,80,83,85,88,91,92,100,103,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[-126,100,-47,-42,-43,-40,-48,-126,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'NOT_EQUAL':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,153,163,164,165,168,169,170,209,212,215,216,219,230,253,256,258,264,265,284,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,196,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-112,-117,-151,-37,-35,-122,-57,-81,-36,-82,]),'RPAREN':([49,54,61,63,64,93,106,112,119,120,122,123,125,127,130,131,132,133,135,136,137,140,142,143,145,146,150,151,152,153,155,156,160,163,164,165,168,169,170,172,173,174,180,181,182,183,187,190,191,192,197,203,204,209,212,215,216,219,222,225,227,230,232,236,238,243,253,256,258,261,264,265,268,269,270,275,277,279,280,283,284,288,289,291,294,299,301,303,307,309,315,],[53,-126,-16,94,-17,-132,-126,-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,171,-145,-55,-54,-56,-126,-126,-126,194,-126,-18,-20,208,-126,-126,-89,-92,-88,-93,224,-126,-66,231,-59,-138,233,-97,-99,-94,-96,-102,-104,-19,-90,-111,-113,-116,-118,258,-65,-68,-126,-126,274,-95,-153,-112,-117,-151,-67,-37,-35,-126,-58,-61,-155,-103,-71,-70,299,-122,-57,-60,302,-98,-81,-36,-87,314,315,-82,]),'SEMICOLON':([3,36,37,45,47,48,51,55,57,58,65,66,82,95,97,106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,158,163,164,165,168,169,170,171,177,178,206,209,212,215,216,219,223,224,230,231,233,253,256,258,264,265,267,274,284,288,299,301,302,314,315,],[4,44,-126,-130,-28,-29,-126,-27,-31,-135,-30,-126,-145,-32,-34,-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,-136,-126,-126,-89,-92,-88,-93,-171,-124,229,-33,-90,-111,-113,-116,-118,259,260,-126,-139,271,-112,-117,-151,-37,-35,288,293,-122,-57,-81,-36,311,318,-82,]),'VARIABLES':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,185,229,250,257,259,260,263,271,285,288,290,293,295,297,298,305,306,308,311,313,317,318,321,322,],[86,-47,-42,-43,-48,86,-50,-49,-41,-44,-46,-45,-38,-51,-52,235,-157,235,235,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,235,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'GE':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,153,163,164,165,168,169,170,209,212,215,216,219,230,253,256,258,264,265,284,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,195,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-112,-117,-151,-37,-35,-122,-57,-81,-36,-82,]),'DATAFRAME':([6,35,44,],[15,15,-26,]),'ESCRIBE':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[73,-47,-42,-43,-48,73,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'MODA':([101,105,111,116,129,138,141,144,146,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[121,-156,121,121,-150,121,121,121,121,121,-156,-100,-154,-101,121,-152,-152,-152,121,-152,-152,-152,-146,-146,121,-147,-147,121,121,121,121,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,121,121,121,-168,121,]),'LT':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,153,163,164,165,168,169,170,209,212,215,216,219,230,253,256,258,264,265,284,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,201,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-112,-117,-151,-37,-35,-122,-57,-81,-36,-82,]),'COMMA':([37,45,47,48,51,58,66,93,95,97,106,112,115,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,148,149,158,163,164,165,168,169,170,173,174,182,206,207,209,210,212,215,216,219,221,230,232,234,253,256,258,264,265,278,279,280,282,284,288,299,301,303,315,],[-126,-130,-28,-29,56,-135,-126,-132,-32,-34,-126,154,159,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,184,185,-136,-126,-126,-89,-92,-88,-93,226,-66,-138,-33,248,-90,250,-111,-113,-116,-118,257,-126,268,272,-112,-117,-151,-37,-35,296,-71,-70,298,-122,-57,-81,-36,-87,-82,]),'MEDIANA':([101,105,111,116,129,138,141,144,146,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[124,-156,124,124,-150,124,124,124,124,124,-156,-100,-154,-101,124,-152,-152,-152,124,-152,-152,-152,-146,-146,124,-147,-147,124,124,124,124,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,124,124,124,-168,124,]),'ASSIGN':([81,82,106,119,120,122,123,125,127,130,131,132,133,135,136,139,140,142,143,145,150,151,153,163,164,165,168,169,170,187,190,197,203,209,212,215,216,219,230,243,253,256,258,264,265,275,277,284,288,294,299,301,315,],[105,-145,-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,175,-145,-55,-54,-56,-126,193,-126,-126,-126,-89,-92,-88,-93,-97,-99,-102,-104,-90,-111,-113,-116,-118,-126,-153,-112,-117,-151,-37,-35,-155,-103,-122,-57,-98,-81,-36,-82,]),'$end':([1,30,60,100,],[0,-1,-6,-38,]),'HACER':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,163,164,165,168,169,170,209,212,215,216,219,230,253,256,258,264,265,284,288,299,301,315,316,319,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-112,-117,-151,-37,-35,-122,-57,-81,-36,-82,-169,320,]),'GT':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,153,163,164,165,168,169,170,209,212,215,216,219,230,253,256,258,264,265,284,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,202,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-112,-117,-151,-37,-35,-122,-57,-81,-36,-82,]),'STRING':([6,35,44,],[12,12,-26,]),'MEDIA':([101,105,111,116,129,138,141,144,146,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[126,-156,126,126,-150,126,126,126,126,126,-156,-100,-154,-101,126,-152,-152,-152,126,-152,-152,-152,-146,-146,126,-147,-147,126,126,126,126,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,126,126,126,-168,126,]),'REGRESA':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[71,-47,-42,-43,-48,71,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'RBRACK':([52,106,114,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,163,164,165,168,169,170,179,209,212,215,216,219,230,253,256,258,264,265,284,287,288,292,299,301,315,],[58,-126,158,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,-126,-126,-89,-92,-88,-93,230,-90,-111,-113,-116,-118,-126,-112,-117,-151,-37,-35,-122,301,-57,303,-81,-36,-82,]),'HASTA':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,163,164,165,168,169,170,209,212,215,216,219,230,253,256,258,262,264,265,284,286,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-112,-117,-151,-167,-37,-35,-122,300,-57,-81,-36,-82,]),'MIENTRAS':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[69,-47,-42,-43,-48,69,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'ADD':([82,106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,163,164,165,168,169,170,177,209,216,219,230,256,258,264,265,284,288,299,301,315,],[-145,-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,213,-126,-89,-92,-88,-93,-124,-90,-116,-118,-126,-117,-151,-37,-35,-122,-57,-81,-36,-82,]),'LE':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,153,163,164,165,168,169,170,209,212,215,216,219,230,253,256,258,264,265,284,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,198,-126,-126,-89,-92,-88,-93,-90,-111,-113,-116,-118,-126,-112,-117,-151,-37,-35,-122,-57,-81,-36,-82,]),'DESDE':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[79,-47,-42,-43,-48,79,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'LPAREN':([29,38,40,50,67,68,69,71,73,82,84,86,87,89,90,99,101,102,105,107,108,111,116,118,121,124,126,128,129,132,134,138,141,144,146,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[-128,49,-131,54,-80,98,-163,101,-158,-137,-158,109,110,111,-79,116,129,138,-156,146,147,129,129,162,-85,-84,-83,166,-150,-137,-86,129,129,129,129,129,-156,-100,-154,-101,129,-152,-152,-152,129,-152,-152,-152,-146,-146,129,-147,-147,129,129,129,129,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,129,129,129,-168,129,]),'VAR':([4,94,113,],[6,-133,6,]),'CTE_INT':([46,96,101,105,111,116,117,129,138,141,144,146,161,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,248,251,252,254,255,266,268,273,296,300,310,],[52,114,133,-156,133,133,-140,-150,133,133,133,133,133,133,-156,-100,-154,-101,133,-152,-152,-152,133,-152,-152,-152,-146,-146,133,-147,-147,133,133,133,133,-108,-109,-107,-110,-105,-106,279,-115,-114,-119,-120,133,133,133,279,-168,133,]),'ID':([2,11,16,18,23,26,27,28,31,32,33,39,56,59,62,72,74,75,77,78,79,80,83,85,88,91,92,98,100,101,104,105,109,110,111,116,129,138,141,144,146,147,162,166,167,175,176,177,184,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,229,237,240,241,242,244,245,246,248,251,252,254,255,259,260,263,266,268,271,272,273,285,288,290,293,295,296,297,300,305,306,308,310,311,313,317,318,321,322,],[3,-129,-129,-129,-22,-23,37,-21,-129,40,-15,-14,37,82,93,-47,-42,-43,-48,82,-166,-50,-49,-41,-44,-46,-45,115,-38,132,140,-156,148,149,132,132,-150,132,82,132,132,140,210,221,132,-156,-51,-52,234,-100,-154,-101,132,-152,-152,-152,132,-152,-152,-152,-146,-146,132,-147,-147,132,132,132,-157,132,-108,-109,-107,-110,-105,-106,280,-115,-114,-119,-120,-62,-159,-53,132,132,-159,291,132,-64,-57,-63,-78,-126,280,-165,-168,-161,-74,-75,132,-77,-72,-73,-69,-170,-76,]),'FUNCION':([4,5,7,8,9,13,21,35,41,42,43,44,100,205,247,],[-126,-127,-2,-3,20,-7,20,-126,-8,-9,-10,-26,-38,-134,-13,]),'AND':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,150,153,163,164,165,168,169,170,197,203,209,212,215,216,219,230,243,253,256,258,264,265,277,284,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,186,-126,-126,-126,-89,-92,-88,-93,-102,-104,-90,-111,-113,-116,-118,-126,-153,-112,-117,-151,-37,-35,-103,-122,-57,-81,-36,-82,]),'LBRACE':([7,8,13,35,41,42,43,44,53,94,113,157,276,281,304,312,320,],[-2,-3,-7,-126,-8,-9,-10,-26,59,-133,-126,59,59,59,-162,59,59,]),'LEE':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[84,-47,-42,-43,-48,84,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'VARIANZA':([101,105,111,116,129,138,141,144,146,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[134,-156,134,134,-150,134,134,134,134,134,-156,-100,-154,-101,134,-152,-152,-152,134,-152,-152,-152,-146,-146,134,-147,-147,134,134,134,134,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,134,134,134,-168,134,]),'CTE_STR':([101,105,111,116,129,138,141,144,146,159,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[127,-156,127,127,-150,127,127,127,127,207,127,-156,-100,-154,-101,127,-152,-152,-152,127,-152,-152,-152,-146,-146,127,-147,-147,127,127,127,127,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,127,127,127,-168,127,]),'INT':([6,20,35,44,54,154,],[18,18,18,-26,18,18,]),'PLOTHIST':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[90,-47,-42,-43,-48,90,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'FLOAT':([6,20,35,44,54,154,],[11,11,11,-26,11,11,]),'CTE_FLOAT':([101,105,111,116,117,129,138,141,144,146,161,167,175,186,188,189,193,195,196,198,199,200,201,202,211,213,214,217,218,220,226,228,237,240,241,242,244,245,246,251,252,254,255,266,268,273,300,310,],[136,-156,136,136,-140,-150,136,136,136,136,136,136,-156,-100,-154,-101,136,-152,-152,-152,136,-152,-152,-152,-146,-146,136,-147,-147,136,136,136,136,-108,-109,-107,-110,-105,-106,-115,-114,-119,-120,136,136,136,-168,136,]),'LBRACK':([37,58,66,82,106,132,140,230,235,],[46,-135,96,-145,144,-145,-145,266,273,]),'ENTONCES':([194,239,],[-160,276,]),'TWO_DOTS':([10,11,12,14,15,16,17,18,23,24,25,26,28,],[-12,-129,-129,-11,-129,-129,27,-129,-22,-25,-24,-23,-21,]),'SI':([59,72,74,75,77,78,80,83,85,88,91,92,100,176,177,229,259,260,263,271,285,288,290,293,295,297,305,306,308,311,313,317,318,321,322,],[89,-47,-42,-43,-48,89,-50,-49,-41,-44,-46,-45,-38,-51,-52,-157,-62,-159,-53,-159,-64,-57,-63,-78,-126,-165,-161,-74,-75,-77,-72,-73,-69,-170,-76,]),'PROGRAMA':([0,],[2,]),'OR':([106,119,120,122,123,125,127,130,131,132,133,135,136,142,143,145,150,153,163,164,165,168,169,170,197,203,209,212,215,216,219,230,243,253,256,258,264,265,277,284,288,299,301,315,],[-126,-148,-125,-124,-149,-91,-144,-123,-121,-145,-141,-143,-142,-55,-54,-56,189,-126,-126,-126,-89,-92,-88,-93,-102,-104,-90,-111,-113,-116,-118,-126,-153,-112,-117,-151,-37,-35,-103,-122,-57,-81,-36,-82,]),'PRINCIPAL':([4,5,7,8,9,13,19,21,22,34,35,41,42,43,44,100,205,247,],[-126,-127,-2,-3,-126,-7,29,-126,-5,-4,-126,-8,-9,-10,-26,-38,-134,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pnExp11':([275,],[294,]),'pnExp10':([188,],[237,]),'bloque':([53,157,276,281,312,320,],[60,205,295,297,317,321,]),'principal':([19,],[30,]),'funciones_especiales':([101,111,116,138,141,144,146,167,193,199,214,220,226,228,237,266,268,273,310,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'lista':([27,56,],[36,65,]),'param':([54,154,],[61,204,]),'pnExp3':([217,218,],[254,255,]),'factor':([101,111,116,138,141,144,146,167,193,199,214,220,226,228,237,266,268,273,310,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'pnSec2':([229,],[263,]),'dim_dec':([37,],[47,]),'ca':([248,296,],[278,307,]),'tipo_compuesto':([6,35,],[10,10,]),'func1':([9,21,],[19,34,]),'var1':([4,113,],[5,157,]),'var3':([35,],[41,]),'di':([106,],[143,]),'condicional':([59,78,],[77,77,]),'tipo_fun':([20,],[32,]),'estatutos':([59,78,],[78,78,]),'expresion':([111,116,193,],[152,160,238,]),'term':([164,],[216,]),'parametros':([54,],[63,]),'lista1':([51,],[55,]),'carga_datos':([59,78,],[91,91,]),'op_a1':([164,],[220,]),'pn_1_setCurrentType':([11,12,15,16,18,31,],[23,24,25,26,28,39,]),'var_cte':([101,111,116,138,141,144,146,167,193,199,214,220,226,228,237,266,268,273,310,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'pnCteInt':([133,],[168,]),'pnCteFloat':([136,],[170,]),'super_exp':([111,116,193,237,],[150,150,150,150,]),'dim_index':([106,],[142,]),'est':([59,78,],[70,103,]),'asig':([141,],[176,]),'decision':([59,78,],[72,72,]),'lista_ids':([27,],[35,]),'pnFunCall_3':([182,],[232,]),'llamada':([59,78,101,111,116,138,141,144,146,167,193,199,214,220,226,228,237,266,268,273,310,],[74,74,122,122,122,122,177,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'esc':([138,226,],[172,261,]),'lectura':([59,78,],[88,88,]),'meg':([150,],[187,]),'pnRetorno':([171,],[223,]),'sino':([295,],[305,]),'funciones_especiales_void':([59,78,],[80,80,]),'pn_2_addVariable':([45,],[51,]),'pnCteStr':([127,],[165,]),'dim_index1':([230,],[265,]),'fe':([101,111,116,138,141,144,146,167,193,199,214,220,226,228,237,266,268,273,310,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'pnExp9':([243,],[277,]),'pnExp8':([195,196,198,200,201,202,],[240,241,242,244,245,246,]),'tipo_simple':([6,20,35,54,154,],[14,33,14,62,62,]),'pnExp2':([211,213,],[251,252,]),'pnExp1':([82,132,140,],[106,106,106,]),'pnExp7':([258,],[284,]),'pnExp6':([129,],[167,]),'pnExp5':([123,],[164,]),'pnExp4':([119,],[163,]),'termino':([101,111,116,138,141,144,146,167,193,199,214,220,226,228,237,266,268,273,310,],[119,119,119,119,119,119,119,119,119,119,119,256,119,119,119,119,119,119,119,]),'var_num':([101,111,116,138,141,144,146,161,167,193,199,214,220,226,228,237,266,268,273,310,],[125,125,125,125,125,125,125,209,125,125,125,125,125,125,125,125,125,125,125,125,]),'pnFunDec_2_3':([93,],[112,]),'exp1':([163,],[212,]),'pnCiclos8':([321,],[322,]),'fev':([59,78,],[87,87,]),'pnCond3':([304,],[312,]),'pnCond2':([305,],[313,]),'pnCteChar':([135,],[169,]),'var':([4,113,],[7,7,]),'pnCiclos3':([297,],[308,]),'pnCiclos1':([69,],[99,]),'type':([6,35,],[17,17,]),'pnCiclos7':([316,],[319,]),'pnCiclos4':([79,],[104,]),'pnCiclos5':([262,],[286,]),'expresion1':([151,],[191,]),'pnFunCall_5_6':([231,],[267,]),'dim_dec1':([66,],[95,]),'pnFunDec7':([205,],[247,]),'pnFunDec1':([40,],[50,]),'op_r':([153,],[199,]),'pn_7_decRenglones':([58,],[66,]),'op_l':([150,],[188,]),'pnCiclos2':([208,],[249,]),'pnSec4':([260,271,],[285,290,]),'pnSec1':([105,175,],[141,228,]),'op_a':([163,],[214,]),'pnSec3':([73,84,],[102,108,]),'no_condicional':([59,78,],[83,83,]),'asignacion':([59,78,],[85,85,]),'pnCiclos6':([300,],[310,]),'pnGOTOprincipal':([5,],[9,]),'empty':([4,9,21,35,37,51,54,59,66,78,106,112,113,146,150,151,153,163,164,173,230,232,268,295,],[8,22,22,43,48,57,64,76,97,76,145,156,8,181,190,192,203,215,219,227,264,270,181,306,]),'param1':([112,],[155,]),'pnNeg':([117,],[161,]),'llamada2':([232,],[269,]),'llamada1':([146,268,],[180,289,]),'v_exp':([185,250,257,298,],[236,282,283,309,]),'pnFunCall_1_2':([82,132,],[107,107,]),'pn_8_decColumnas':([158,],[206,]),'var2':([6,35,],[13,42,]),'pnFunDec4':([94,],[113,]),'pnPrincipal2':([29,],[38,]),'retorno':([59,78,],[75,75,]),'pnCond1':([194,],[239,]),'dd':([37,],[45,]),'funcion':([9,21,],[21,21,]),'esc1':([138,226,],[173,173,]),'esc2':([173,],[225,]),'mega_exp':([111,116,193,237,],[151,151,151,275,]),'variable':([59,78,101,104,111,116,138,141,144,146,147,167,193,199,214,220,226,228,237,266,268,273,310,],[81,81,130,139,130,130,130,130,130,130,183,130,130,130,130,130,130,130,130,130,130,130,130,]),'sp':([153,],[197,]),'programa':([0,],[1,]),'exp':([101,111,116,138,141,144,146,167,193,199,214,226,228,237,266,268,273,310,],[137,153,153,174,178,179,182,222,153,243,253,174,262,153,287,182,292,316,]),'escritura':([59,78,],[92,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 pnGOTOprincipal func1 principal','programa',7,'p_programa','parser.py',176),
  ('var1 -> var','var1',1,'p_var1','parser.py',182),
  ('var1 -> empty','var1',1,'p_var1','parser.py',183),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',189),
  ('func1 -> empty','func1',1,'p_func1','parser.py',190),
  ('principal -> PRINCIPAL pnPrincipal2 LPAREN RPAREN bloque','principal',5,'p_principal','parser.py',195),
  ('var -> VAR var2','var',2,'p_var','parser.py',200),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',204),
  ('var3 -> var2','var3',1,'p_var3','parser.py',209),
  ('var3 -> empty','var3',1,'p_var3','parser.py',210),
  ('type -> tipo_simple','type',1,'p_type','parser.py',216),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',217),
  ('funcion -> FUNCION tipo_fun ID pnFunDec1 LPAREN parametros RPAREN pnFunDec4 var1 bloque pnFunDec7','funcion',11,'p_funcion','parser.py',222),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',227),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',228),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',234),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',235),
  ('param -> tipo_simple ID pnFunDec_2_3 param1','param',4,'p_param','parser.py',240),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',245),
  ('param1 -> empty','param1',1,'p_param1','parser.py',246),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',252),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',253),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',254),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',259),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',260),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',265),
  ('lista -> ID dd pn_2_addVariable lista1','lista',4,'p_lista','parser.py',268),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',272),
  ('dd -> empty','dd',1,'p_dd','parser.py',273),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',278),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',279),
  ('dim_dec -> LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1','dim_dec',5,'p_dim_dec','parser.py',284),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK pn_8_decColumnas','dim_dec1',4,'p_dim_dec1','parser.py',288),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',289),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',293),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',297),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',298),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',304),
  ('est -> estatutos est','est',2,'p_est','parser.py',309),
  ('est -> empty','est',1,'p_est','parser.py',310),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',316),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',317),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',318),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',319),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',320),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',321),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',322),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',323),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',324),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',325),
  ('asignacion -> variable ASSIGN pnSec1 asig','asignacion',4,'p_asignacion','parser.py',332),
  ('asig -> llamada','asig',1,'p_asig','parser.py',336),
  ('asig -> exp SEMICOLON pnSec2','asig',3,'p_asig','parser.py',337),
  ('variable -> ID pnExp1 di','variable',3,'p_variable','parser.py',340),
  ('di -> dim_index','di',1,'p_di','parser.py',344),
  ('di -> empty','di',1,'p_di','parser.py',345),
  ('llamada -> ID pnFunCall_1_2 LPAREN llamada1 RPAREN pnFunCall_5_6 SEMICOLON','llamada',7,'p_llamada','parser.py',349),
  ('llamada1 -> exp pnFunCall_3 llamada2','llamada1',3,'p_llamada1','parser.py',353),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',354),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',359),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',360),
  ('retorno -> REGRESA LPAREN exp RPAREN pnRetorno SEMICOLON','retorno',6,'p_retorno','parser.py',364),
  ('lectura -> LEE pnSec3 LPAREN variable RPAREN SEMICOLON pnSec4','lectura',7,'p_lectura','parser.py',367),
  ('escritura -> ESCRIBE pnSec3 LPAREN esc RPAREN SEMICOLON pnSec4','escritura',7,'p_escritura','parser.py',370),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',373),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',377),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',381),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',382),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',386),
  ('ca -> ID','ca',1,'p_ca','parser.py',390),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',391),
  ('decision -> SI LPAREN expresion RPAREN pnCond1 ENTONCES bloque sino pnCond2','decision',9,'p_decision','parser.py',396),
  ('sino -> SINO pnCond3 bloque','sino',3,'p_sino','parser.py',400),
  ('sino -> empty','sino',1,'p_sino','parser.py',401),
  ('condicional -> MIENTRAS pnCiclos1 LPAREN expresion RPAREN pnCiclos2 HAZ bloque pnCiclos3','condicional',9,'p_condicional','parser.py',406),
  ('no_condicional -> DESDE pnCiclos4 variable ASSIGN pnSec1 exp pnCiclos5 HASTA pnCiclos6 exp pnCiclos7 HACER bloque pnCiclos8','no_condicional',14,'p_no_condicional','parser.py',409),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',414),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',415),
  ('fev -> PLOTHIST','fev',1,'p_fev','parser.py',419),
  ('fev -> PLOTLINE','fev',1,'p_fev','parser.py',420),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',425),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',426),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',430),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',431),
  ('fe -> MODA','fe',1,'p_fe','parser.py',432),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',433),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',436),
  ('var_cte -> CTE_CH pnCteChar','var_cte',2,'p_var_cte','parser.py',443),
  ('var_cte -> CTE_STR pnCteStr','var_cte',2,'p_var_cte','parser.py',444),
  ('var_cte -> SUB pnNeg var_num','var_cte',3,'p_var_cte','parser.py',445),
  ('var_cte -> var_num','var_cte',1,'p_var_cte','parser.py',446),
  ('var_num -> CTE_INT pnCteInt','var_num',2,'p_var_num','parser.py',459),
  ('var_num -> CTE_FLOAT pnCteFloat','var_num',2,'p_var_num','parser.py',460),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',467),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',471),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',472),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',476),
  ('meg -> op_l pnExp10 mega_exp pnExp11','meg',4,'p_meg','parser.py',480),
  ('meg -> empty','meg',1,'p_meg','parser.py',481),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',485),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',486),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',490),
  ('sp -> op_r exp pnExp9','sp',3,'p_sp','parser.py',494),
  ('sp -> empty','sp',1,'p_sp','parser.py',495),
  ('op_r -> LT pnExp8','op_r',2,'p_op_r','parser.py',499),
  ('op_r -> GT pnExp8','op_r',2,'p_op_r','parser.py',500),
  ('op_r -> LE pnExp8','op_r',2,'p_op_r','parser.py',501),
  ('op_r -> GE pnExp8','op_r',2,'p_op_r','parser.py',502),
  ('op_r -> NOT_EQUAL pnExp8','op_r',2,'p_op_r','parser.py',503),
  ('op_r -> EQUAL pnExp8','op_r',2,'p_op_r','parser.py',504),
  ('exp -> termino pnExp4 exp1','exp',3,'p_exp','parser.py',508),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',512),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',513),
  ('op_a -> ADD pnExp2','op_a',2,'p_op_a','parser.py',517),
  ('op_a -> SUB pnExp2','op_a',2,'p_op_a','parser.py',518),
  ('termino -> factor pnExp5 term','termino',3,'p_termino','parser.py',522),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',526),
  ('term -> empty','term',1,'p_term','parser.py',527),
  ('op_a1 -> MUL pnExp3','op_a1',2,'p_op_a1','parser.py',531),
  ('op_a1 -> DIV pnExp3','op_a1',2,'p_op_a1','parser.py',532),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',537),
  ('factor -> LPAREN pnExp6 exp RPAREN pnExp7','factor',5,'p_factor','parser.py',538),
  ('factor -> variable','factor',1,'p_factor','parser.py',539),
  ('factor -> llamada','factor',1,'p_factor','parser.py',540),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',541),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',546),
  ('pnGOTOprincipal -> <empty>','pnGOTOprincipal',0,'p_pnGOTOprincipal','parser.py',830),
  ('pnPrincipal2 -> <empty>','pnPrincipal2',0,'p_pnPrincipal2','parser.py',837),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',856),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',866),
  ('pnFunDec1 -> <empty>','pnFunDec1',0,'p_pnFunDec1','parser.py',887),
  ('pnFunDec_2_3 -> <empty>','pnFunDec_2_3',0,'p_pnFunDec_2_3','parser.py',913),
  ('pnFunDec4 -> <empty>','pnFunDec4',0,'p_pnFunDec4','parser.py',934),
  ('pnFunDec7 -> <empty>','pnFunDec7',0,'p_pnFunDec7','parser.py',946),
  ('pn_7_decRenglones -> <empty>','pn_7_decRenglones',0,'p_pn_7_decRenglones','parser.py',967),
  ('pn_8_decColumnas -> <empty>','pn_8_decColumnas',0,'p_pn_8_decColumnas','parser.py',978),
  ('pnFunCall_1_2 -> <empty>','pnFunCall_1_2',0,'p_pnFunCall_1_2','parser.py',1002),
  ('pnFunCall_3 -> <empty>','pnFunCall_3',0,'p_pnFunCall_3','parser.py',1025),
  ('pnFunCall_5_6 -> <empty>','pnFunCall_5_6',0,'p_pnFunCall_5_6','parser.py',1059),
  ('pnNeg -> <empty>','pnNeg',0,'p_pnNeg','parser.py',1080),
  ('pnCteInt -> <empty>','pnCteInt',0,'p_pnCteInt','parser.py',1090),
  ('pnCteFloat -> <empty>','pnCteFloat',0,'p_pnCteFloat','parser.py',1102),
  ('pnCteChar -> <empty>','pnCteChar',0,'p_pnCteChar','parser.py',1114),
  ('pnCteStr -> <empty>','pnCteStr',0,'p_pnCteStr','parser.py',1123),
  ('pnExp1 -> <empty>','pnExp1',0,'p_pnExp1','parser.py',1133),
  ('pnExp2 -> <empty>','pnExp2',0,'p_pnExp2','parser.py',1165),
  ('pnExp3 -> <empty>','pnExp3',0,'p_pnExp3','parser.py',1179),
  ('pnExp4 -> <empty>','pnExp4',0,'p_pnExp4','parser.py',1193),
  ('pnExp5 -> <empty>','pnExp5',0,'p_pnExp5','parser.py',1217),
  ('pnExp6 -> <empty>','pnExp6',0,'p_pnExp6','parser.py',1241),
  ('pnExp7 -> <empty>','pnExp7',0,'p_pnExp7','parser.py',1248),
  ('pnExp8 -> <empty>','pnExp8',0,'p_pnExp8','parser.py',1255),
  ('pnExp9 -> <empty>','pnExp9',0,'p_pnExp9','parser.py',1267),
  ('pnExp10 -> <empty>','pnExp10',0,'p_pnExp10','parser.py',1292),
  ('pnExp11 -> <empty>','pnExp11',0,'p_pnExp11','parser.py',1304),
  ('pnSec1 -> <empty>','pnSec1',0,'p_pnSec1','parser.py',1330),
  ('pnSec2 -> <empty>','pnSec2',0,'p_pnSec2','parser.py',1342),
  ('pnSec3 -> <empty>','pnSec3',0,'p_pnSec3','parser.py',1371),
  ('pnSec4 -> <empty>','pnSec4',0,'p_pnSec4','parser.py',1383),
  ('pnCond1 -> <empty>','pnCond1',0,'p_pnCond1','parser.py',1409),
  ('pnCond2 -> <empty>','pnCond2',0,'p_pnCond2','parser.py',1428),
  ('pnCond3 -> <empty>','pnCond3',0,'p_pnCond3','parser.py',1442),
  ('pnCiclos1 -> <empty>','pnCiclos1',0,'p_pnCiclos1','parser.py',1457),
  ('pnCiclos2 -> <empty>','pnCiclos2',0,'p_pnCiclos2','parser.py',1467),
  ('pnCiclos3 -> <empty>','pnCiclos3',0,'p_pnCiclos3','parser.py',1482),
  ('pnCiclos4 -> <empty>','pnCiclos4',0,'p_pnCiclos4','parser.py',1496),
  ('pnCiclos5 -> <empty>','pnCiclos5',0,'p_pnCiclos5','parser.py',1506),
  ('pnCiclos6 -> <empty>','pnCiclos6',0,'p_pnCiclos6','parser.py',1533),
  ('pnCiclos7 -> <empty>','pnCiclos7',0,'p_pnCiclos7','parser.py',1554),
  ('pnCiclos8 -> <empty>','pnCiclos8',0,'p_pnCiclos8','parser.py',1587),
  ('pnRetorno -> <empty>','pnRetorno',0,'p_pnRetorno','parser.py',1600),
]
