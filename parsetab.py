
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DISTRIBUCION DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TENDENCIA TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque\n    tipo_fun : VOID pn_1_setCurrentType\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID pn_4_params param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT pn_1_setCurrentType\n                | CHAR pn_1_setCurrentType\n    \n    tipo_compuesto : DATAFRAME pn_1_setCurrentType\n                   | STRING pn_1_setCurrentType\n    lista_ids : lista SEMICOLONlista : ID dd pn_2_addVariable lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK pn_8_decColumnas\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN asig\n    asig : llamada\n         | exp SEMICOLON\n    variable : ID di\n    di : dim_index\n       | empty\n    llamada :  ID LPAREN llamada1 RPAREN SEMICOLON\n    llamada1 : exp llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN SEMICOLONlectura : LEE LPAREN variable RPAREN SEMICOLONescritura : ESCRIBE LPAREN esc RPAREN SEMICOLONesc : esc1 esc2\n    esc1 : exp\n         | CTE_STR\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN ENTONCES bloque sino\n    sino : SINO bloque\n         | empty\n    condicional : MIENTRAS LPAREN expresion RPAREN HAZ bloqueno_condicional : DESDE variable ASSIGN exp HASTA exp HACER bloque\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : DISTRIBUCION\n        | TENDENCIA\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_INT\n            | CTE_FLOAT\n            | CTE_CH\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l mega_exp\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r exp\n       | empty\n    \n    op_r : LT\n         | GT\n         | LE\n         | GE\n         | NOT_EQUAL\n         | EQUAL\n    exp : termino exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD\n         | SUB\n    termino : factor term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL\n          | DIV\n    \n    factor : var_cte\n           | LPAREN exp RPAREN\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    \n    pn_3_addFunction : \n    \n    pn_4_params :\n    \n    pn_5_updateContParams :  \n    \n    pn_6_end :\n    \n    pn_7_decRenglones :\n    \n    pn_8_decColumnas : \n    '
    
_lr_action_items = {'HAZ':([178,],[217,]),'SUB':([73,100,101,104,113,115,117,119,120,126,127,128,131,132,142,168,171,196,213,216,224,225,227,254,262,271,],[-124,-55,-54,-56,-119,158,-123,-122,-124,-121,-89,-124,-91,-90,-122,-114,-116,-124,-115,-120,-37,-35,-57,-36,-82,-83,]),'VOID':([10,],[25,]),'EQUAL':([100,101,104,113,115,117,119,120,126,127,128,131,132,133,159,162,168,171,196,211,213,216,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,184,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'CARGA':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[56,-47,-42,-43,-48,56,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'CHAR':([6,10,38,46,53,204,],[19,19,19,-26,19,19,]),'SINO':([93,245,],[-38,257,]),'CORRELACIONA':([91,92,94,99,102,103,107,125,140,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,243,],[114,114,114,114,114,114,114,114,114,-113,-112,114,-98,114,-99,-117,-118,114,114,-104,-107,-106,114,-108,-103,-105,114,114,114,114,114,]),'CTE_CH':([91,92,94,99,102,103,107,125,140,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,243,],[131,131,131,131,131,131,131,131,131,-113,-112,131,-98,131,-99,-117,-118,131,131,-104,-107,-106,131,-108,-103,-105,131,131,131,131,131,]),'MUL':([73,100,101,104,113,117,119,120,126,127,128,131,132,142,196,216,224,225,227,254,262,271,],[-124,-55,-54,-56,-119,-123,-122,169,-121,-89,-124,-91,-90,-122,-124,-120,-37,-35,-57,-36,-82,-83,]),'TENDENCIA':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[58,-47,-42,-43,-48,58,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'DIV':([73,100,101,104,113,117,119,120,126,127,128,131,132,142,196,216,224,225,227,254,262,271,],[-124,-55,-54,-56,-119,-123,-122,170,-121,-89,-124,-91,-90,-122,-124,-120,-37,-35,-57,-36,-82,-83,]),'RBRACE':([51,60,61,63,65,66,68,69,71,74,76,78,80,81,93,96,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[-124,93,-47,-42,-43,-40,-48,-124,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'NOT_EQUAL':([100,101,104,113,115,117,119,120,126,127,128,131,132,133,159,162,168,171,196,211,213,216,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,180,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'RPAREN':([34,53,83,84,85,97,100,101,103,104,108,113,115,116,117,119,120,123,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,150,151,159,162,164,167,168,171,173,174,177,181,187,190,192,196,198,199,200,205,206,211,212,213,214,216,218,221,224,225,227,228,231,233,248,249,251,252,254,262,265,267,268,271,],[41,-124,-16,109,-17,-124,-55,-54,-124,-56,-128,-119,-124,-124,-123,-122,-124,-124,-121,-89,-124,178,-91,-90,-124,188,189,-124,-67,-66,197,-59,-124,201,203,-124,-109,-111,-95,-97,-114,-116,-92,-94,216,-100,-102,-65,-69,-124,-58,-124,-61,-18,-20,-110,-96,-115,-93,-120,-101,-68,-37,-35,-57,-60,244,-19,-72,-71,262,263,-36,-82,-88,270,271,-83,]),'SEMICOLON':([3,39,40,47,49,50,54,73,86,88,89,100,101,104,110,111,113,115,117,119,120,126,127,128,131,132,142,143,153,155,159,162,168,171,188,189,196,197,201,211,213,216,224,225,227,235,244,246,254,262,263,270,271,],[4,46,-124,-126,-28,-29,-124,-124,-27,-31,-131,-55,-54,-56,-30,-124,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-122,195,-32,-34,-109,-111,-114,-116,219,220,-124,227,229,-110,-115,-120,-37,-35,-57,-132,256,-33,-36,-82,269,272,-83,]),'VARIABLES':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,202,219,220,227,229,237,238,239,245,256,258,259,261,264,266,269,272,],[67,-47,-42,-43,-48,67,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,230,-62,-64,-57,-63,230,230,-76,-124,-79,-73,-75,230,-77,-74,-78,-70,]),'GE':([100,101,104,113,115,117,119,120,126,127,128,131,132,133,159,162,168,171,196,211,213,216,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,182,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'DATAFRAME':([6,38,46,],[18,18,-26,]),'ESCRIBE':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[62,-47,-42,-43,-48,62,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'MODA':([91,92,94,99,102,103,107,125,140,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,243,],[118,118,118,118,118,118,118,118,118,-113,-112,118,-98,118,-99,-117,-118,118,118,-104,-107,-106,118,-108,-103,-105,118,118,118,118,118,]),'LT':([100,101,104,113,115,117,119,120,126,127,128,131,132,133,159,162,168,171,196,211,213,216,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,185,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'COMMA':([40,47,49,50,54,89,100,101,104,108,111,112,113,115,117,119,120,126,127,128,131,132,136,137,138,139,147,149,151,153,155,159,162,168,171,196,209,210,211,213,215,216,222,224,225,227,235,246,247,248,249,250,254,262,265,271,],[-124,-126,-28,-29,87,-131,-55,-54,-56,-128,-124,156,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,191,-67,-66,193,199,202,204,-32,-34,-109,-111,-114,-116,-124,236,237,-110,-115,238,-120,240,-37,-35,-57,-132,-33,260,-72,-71,261,-36,-82,-88,-83,]),'DISTRIBUCION':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[64,-47,-42,-43,-48,64,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'MEDIANA':([91,92,94,99,102,103,107,125,140,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,243,],[121,121,121,121,121,121,121,121,121,-113,-112,121,-98,121,-99,-117,-118,121,121,-104,-107,-106,121,-108,-103,-105,121,121,121,121,121,]),'ASSIGN':([72,73,97,98,100,101,104,113,115,116,117,119,120,123,126,127,128,131,132,133,159,162,164,167,168,171,181,187,196,211,212,213,216,218,224,225,227,254,262,271,],[99,-124,-124,140,-55,-54,-56,-119,-124,-124,-123,-122,-124,175,-121,-89,-124,-91,-90,-124,-109,-111,-95,-97,-114,-116,-100,-102,-124,-110,-96,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'$end':([1,23,35,52,93,],[0,-130,-1,-6,-38,]),'HACER':([100,101,104,113,115,117,119,120,126,127,128,131,132,159,162,168,171,196,211,213,216,224,225,227,241,254,262,271,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,253,-36,-82,-83,]),'GT':([100,101,104,113,115,117,119,120,126,127,128,131,132,133,159,162,168,171,196,211,213,216,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,179,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'STRING':([6,38,46,],[15,15,-26,]),'MEDIA':([91,92,94,99,102,103,107,125,140,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,243,],[122,122,122,122,122,122,122,122,122,-113,-112,122,-98,122,-99,-117,-118,122,122,-104,-107,-106,122,-108,-103,-105,122,122,122,122,122,]),'REGRESA':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[59,-47,-42,-43,-48,59,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'RBRACK':([55,100,101,104,113,115,117,119,120,126,127,128,131,132,144,159,162,168,171,196,208,211,213,216,224,225,227,242,254,255,262,271,],[89,-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,196,-109,-111,-114,-116,-124,235,-110,-115,-120,-37,-35,-57,254,-36,265,-82,-83,]),'HASTA':([100,101,104,113,115,117,119,120,126,127,128,131,132,159,162,168,171,194,196,211,213,216,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-109,-111,-114,-116,223,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'MIENTRAS':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[57,-47,-42,-43,-48,57,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'ADD':([73,100,101,104,113,115,117,119,120,126,127,128,131,132,142,168,171,196,213,216,224,225,227,254,262,271,],[-124,-55,-54,-56,-119,160,-123,-122,-124,-121,-89,-124,-91,-90,-122,-114,-116,-124,-115,-120,-37,-35,-57,-36,-82,-83,]),'LE':([100,101,104,113,115,117,119,120,126,127,128,131,132,133,159,162,168,171,196,211,213,216,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,186,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'DESDE':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[70,-47,-42,-43,-48,70,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'LPAREN':([22,37,42,56,57,58,59,62,64,67,73,75,77,79,91,92,94,99,102,103,107,114,118,121,122,124,125,128,130,140,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,243,],[34,-127,53,90,91,-81,92,94,-80,95,103,105,106,107,125,125,125,125,125,125,125,157,-86,-85,-84,176,125,103,-87,125,-113,-112,125,-98,125,-99,-117,-118,125,125,-104,-107,-106,125,-108,-103,-105,125,125,125,125,125,]),'VAR':([4,109,152,],[6,-129,6,]),'CTE_INT':([48,91,92,94,99,102,103,107,125,140,154,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,236,243,260,],[55,127,127,127,127,127,127,127,127,127,208,-113,-112,127,-98,127,-99,-117,-118,127,127,-104,-107,-106,127,-108,-103,-105,127,127,127,127,248,127,248,]),'ID':([2,14,19,21,24,25,26,28,31,32,33,36,51,61,63,65,68,69,70,71,74,76,78,80,81,82,87,90,91,92,93,94,95,99,102,103,105,106,107,125,140,141,142,157,158,160,161,163,165,166,169,170,172,175,176,179,180,182,183,184,185,186,191,193,195,199,219,220,223,226,227,229,236,239,240,243,245,256,258,259,260,264,266,269,272,],[3,-125,-125,-125,-15,-125,37,-22,-23,40,-21,-14,73,-47,-42,-43,-48,73,97,-50,-49,-41,-44,-46,-45,108,40,112,128,128,-38,128,139,73,128,128,97,149,128,128,128,-51,-52,210,-113,-112,128,-98,128,-99,-117,-118,128,128,215,-104,-107,-106,128,-108,-103,-105,128,222,-53,128,-62,-64,128,128,-57,-63,249,-76,252,128,-124,-79,-73,-75,249,-77,-74,-78,-70,]),'FUNCION':([4,5,7,8,11,16,38,43,44,45,46,93,234,],[-124,10,-2,-3,10,-7,-124,-8,-9,-10,-26,-38,-13,]),'AND':([100,101,104,113,115,116,117,119,120,126,127,128,131,132,133,159,162,168,171,181,187,196,211,213,216,218,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,163,-123,-122,-124,-121,-89,-124,-91,-90,-124,-109,-111,-114,-116,-100,-102,-124,-110,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'LBRACE':([7,8,16,38,41,43,44,45,46,109,152,207,217,232,253,257,],[-2,-3,-7,-124,51,-8,-9,-10,-26,-129,-124,51,51,51,51,51,]),'LEE':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[75,-47,-42,-43,-48,75,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'VARIANZA':([91,92,94,99,102,103,107,125,140,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,243,],[130,130,130,130,130,130,130,130,130,-113,-112,130,-98,130,-99,-117,-118,130,130,-104,-107,-106,130,-108,-103,-105,130,130,130,130,130,]),'CTE_STR':([94,156,191,],[137,209,137,]),'INT':([6,10,38,46,53,204,],[21,21,21,-26,21,21,]),'FLOAT':([6,10,38,46,53,204,],[14,14,14,-26,14,14,]),'CTE_FLOAT':([91,92,94,99,102,103,107,125,140,158,160,161,163,165,166,169,170,172,175,179,180,182,183,184,185,186,191,199,223,226,243,],[132,132,132,132,132,132,132,132,132,-113,-112,132,-98,132,-99,-117,-118,132,132,-104,-107,-106,132,-108,-103,-105,132,132,132,132,132,]),'LBRACK':([40,73,89,97,111,128,196,230,],[48,102,-131,102,154,102,226,243,]),'ENTONCES':([203,],[232,]),'TWO_DOTS':([13,14,15,17,18,19,20,21,28,29,30,31,33,],[-12,-125,-125,-11,-125,-125,32,-125,-22,-25,-24,-23,-21,]),'SI':([51,61,63,65,68,69,71,74,76,78,80,81,93,141,142,195,219,220,227,229,239,245,256,258,259,264,266,269,272,],[79,-47,-42,-43,-48,79,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'PROGRAMA':([0,],[2,]),'OR':([100,101,104,113,115,116,117,119,120,126,127,128,131,132,133,159,162,168,171,181,187,196,211,213,216,218,224,225,227,254,262,271,],[-55,-54,-56,-119,-124,166,-123,-122,-124,-121,-89,-124,-91,-90,-124,-109,-111,-114,-116,-100,-102,-124,-110,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'PRINCIPAL':([4,5,7,8,9,11,12,16,27,38,43,44,45,46,93,234,],[-124,-124,-2,-3,22,-124,-5,-7,-4,-124,-8,-9,-10,-26,-38,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pn_3_addFunction':([37,],[42,]),'expresion1':([123,],[173,]),'sp':([133,],[181,]),'tipo_simple':([6,10,38,53,204,],[17,24,17,82,82,]),'ca':([236,260,],[247,267,]),'exp1':([115,],[159,]),'di':([73,97,128,],[101,101,101,]),'pn_1_setCurrentType':([14,15,18,19,21,25,],[28,29,30,31,33,36,]),'var_cte':([91,92,94,99,102,103,107,125,140,161,165,172,175,183,191,199,223,226,243,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'op_r':([133,],[183,]),'termino':([91,92,94,99,102,103,107,125,140,161,165,172,175,183,191,199,223,226,243,],[115,115,115,115,115,115,115,115,115,115,115,213,115,115,115,115,115,115,115,]),'llamada2':([147,],[198,]),'bloque':([41,207,217,232,253,257,],[52,234,239,245,264,266,]),'llamada1':([103,199,],[145,228,]),'principal':([9,],[23,]),'super_exp':([91,107,165,175,],[116,116,116,116,]),'funciones_especiales':([91,92,94,99,102,103,107,125,140,161,165,172,175,183,191,199,223,226,243,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'dim_index':([73,97,128,],[100,100,100,]),'est':([51,69,],[60,96,]),'pn_8_decColumnas':([235,],[246,]),'asig':([99,],[141,]),'decision':([51,69,],[61,61,]),'lista_ids':([32,],[38,]),'param':([53,204,],[83,233,]),'dim_index1':([196,],[225,]),'fev':([51,69,],[77,77,]),'llamada':([51,69,91,92,94,99,102,103,107,125,140,161,165,172,175,183,191,199,223,226,243,],[63,63,119,119,119,142,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'esc':([94,191,],[135,221,]),'factor':([91,92,94,99,102,103,107,125,140,161,165,172,175,183,191,199,223,226,243,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'var':([4,152,],[7,7,]),'pn_5_updateContParams':([109,],[152,]),'v_exp':([202,237,238,261,],[231,250,251,268,]),'dim_dec':([40,],[49,]),'condicional':([51,69,],[68,68,]),'empty':([4,5,11,38,40,51,53,54,69,73,97,103,111,115,116,120,123,128,133,136,147,151,152,196,199,245,],[8,12,12,45,50,66,85,88,66,104,104,146,155,162,167,171,174,104,187,192,200,206,8,224,146,259,]),'funcion':([5,11,],[11,11,]),'op_l':([116,],[165,]),'expresion':([91,107,175,],[129,150,214,]),'func1':([5,11,],[9,27,]),'pn_6_end':([23,],[35,]),'var1':([4,152,],[5,207,]),'param1':([151,],[205,]),'var3':([38,],[43,]),'var2':([6,38,],[16,44,]),'dim_dec1':([111,],[153,]),'dd':([40,],[47,]),'mega_exp':([91,107,165,175,],[123,123,212,123,]),'tipo_fun':([10,],[26,]),'retorno':([51,69,],[65,65,]),'estatutos':([51,69,],[69,69,]),'fe':([91,92,94,99,102,103,107,125,140,161,165,172,175,183,191,199,223,226,243,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'funciones_especiales_void':([51,69,],[71,71,]),'variable':([51,69,70,91,92,94,99,102,103,105,107,125,140,161,165,172,175,183,191,199,223,226,243,],[72,72,98,126,126,126,126,126,126,148,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'lista':([32,87,],[39,110,]),'op_a':([115,],[161,]),'no_condicional':([51,69,],[74,74,]),'tipo_compuesto':([6,38,],[13,13,]),'esc1':([94,191,],[136,136,]),'term':([120,],[168,]),'asignacion':([51,69,],[76,76,]),'sino':([245,],[258,]),'type':([6,38,],[20,20,]),'op_a1':([120,],[172,]),'pn_2_addVariable':([47,],[54,]),'lectura':([51,69,],[78,78,]),'pn_4_params':([108,],[151,]),'programa':([0,],[1,]),'exp':([91,92,94,99,102,103,107,125,140,161,165,175,183,191,199,223,226,243,],[133,134,138,143,144,147,133,177,194,211,133,133,218,138,147,241,242,255,]),'meg':([116,],[164,]),'parametros':([53,],[84,]),'pn_7_decRenglones':([89,],[111,]),'lista1':([54,],[86,]),'carga_datos':([51,69,],[80,80,]),'esc2':([136,],[190,]),'escritura':([51,69,],[81,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 func1 principal pn_6_end','programa',7,'p_programa','parser.py',42),
  ('var1 -> var','var1',1,'p_var1','parser.py',47),
  ('var1 -> empty','var1',1,'p_var1','parser.py',48),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',54),
  ('func1 -> empty','func1',1,'p_func1','parser.py',55),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','parser.py',60),
  ('var -> VAR var2','var',2,'p_var','parser.py',65),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',69),
  ('var3 -> var2','var3',1,'p_var3','parser.py',74),
  ('var3 -> empty','var3',1,'p_var3','parser.py',75),
  ('type -> tipo_simple','type',1,'p_type','parser.py',81),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',82),
  ('funcion -> FUNCION tipo_fun ID pn_3_addFunction LPAREN parametros RPAREN pn_5_updateContParams var1 bloque','funcion',10,'p_funcion','parser.py',87),
  ('tipo_fun -> VOID pn_1_setCurrentType','tipo_fun',2,'p_tipo_fun','parser.py',92),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',93),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',99),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',100),
  ('param -> tipo_simple ID pn_4_params param1','param',4,'p_param','parser.py',105),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',110),
  ('param1 -> empty','param1',1,'p_param1','parser.py',111),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',117),
  ('tipo_simple -> FLOAT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',118),
  ('tipo_simple -> CHAR pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',119),
  ('tipo_compuesto -> DATAFRAME pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',124),
  ('tipo_compuesto -> STRING pn_1_setCurrentType','tipo_compuesto',2,'p_tipo_compuesto','parser.py',125),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',130),
  ('lista -> ID dd pn_2_addVariable lista1','lista',4,'p_lista','parser.py',133),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',137),
  ('dd -> empty','dd',1,'p_dd','parser.py',138),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',143),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',144),
  ('dim_dec -> LBRACK CTE_INT RBRACK pn_7_decRenglones dim_dec1','dim_dec',5,'p_dim_dec','parser.py',149),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK pn_8_decColumnas','dim_dec1',4,'p_dim_dec1','parser.py',153),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',154),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',158),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',162),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',163),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',169),
  ('est -> estatutos est','est',2,'p_est','parser.py',174),
  ('est -> empty','est',1,'p_est','parser.py',175),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',181),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',182),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',183),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',184),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',185),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',186),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',187),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',188),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',189),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',190),
  ('asignacion -> variable ASSIGN asig','asignacion',3,'p_asignacion','parser.py',197),
  ('asig -> llamada','asig',1,'p_asig','parser.py',201),
  ('asig -> exp SEMICOLON','asig',2,'p_asig','parser.py',202),
  ('variable -> ID di','variable',2,'p_variable','parser.py',205),
  ('di -> dim_index','di',1,'p_di','parser.py',209),
  ('di -> empty','di',1,'p_di','parser.py',210),
  ('llamada -> ID LPAREN llamada1 RPAREN SEMICOLON','llamada',5,'p_llamada','parser.py',214),
  ('llamada1 -> exp llamada2','llamada1',2,'p_llamada1','parser.py',218),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',219),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',224),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',225),
  ('retorno -> REGRESA LPAREN exp RPAREN SEMICOLON','retorno',5,'p_retorno','parser.py',229),
  ('lectura -> LEE LPAREN variable RPAREN SEMICOLON','lectura',5,'p_lectura','parser.py',232),
  ('escritura -> ESCRIBE LPAREN esc RPAREN SEMICOLON','escritura',5,'p_escritura','parser.py',235),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',238),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',242),
  ('esc1 -> CTE_STR','esc1',1,'p_esc1','parser.py',243),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',247),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',248),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',252),
  ('ca -> ID','ca',1,'p_ca','parser.py',256),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',257),
  ('decision -> SI LPAREN expresion RPAREN ENTONCES bloque sino','decision',7,'p_decision','parser.py',262),
  ('sino -> SINO bloque','sino',2,'p_sino','parser.py',266),
  ('sino -> empty','sino',1,'p_sino','parser.py',267),
  ('condicional -> MIENTRAS LPAREN expresion RPAREN HAZ bloque','condicional',6,'p_condicional','parser.py',271),
  ('no_condicional -> DESDE variable ASSIGN exp HASTA exp HACER bloque','no_condicional',8,'p_no_condicional','parser.py',274),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',279),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',280),
  ('fev -> DISTRIBUCION','fev',1,'p_fev','parser.py',284),
  ('fev -> TENDENCIA','fev',1,'p_fev','parser.py',285),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',290),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',291),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',295),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',296),
  ('fe -> MODA','fe',1,'p_fe','parser.py',297),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',298),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',301),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','parser.py',308),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','parser.py',309),
  ('var_cte -> CTE_CH','var_cte',1,'p_var_cte','parser.py',310),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',316),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',320),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',321),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',325),
  ('meg -> op_l mega_exp','meg',2,'p_meg','parser.py',329),
  ('meg -> empty','meg',1,'p_meg','parser.py',330),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',334),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',335),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',339),
  ('sp -> op_r exp','sp',2,'p_sp','parser.py',343),
  ('sp -> empty','sp',1,'p_sp','parser.py',344),
  ('op_r -> LT','op_r',1,'p_op_r','parser.py',348),
  ('op_r -> GT','op_r',1,'p_op_r','parser.py',349),
  ('op_r -> LE','op_r',1,'p_op_r','parser.py',350),
  ('op_r -> GE','op_r',1,'p_op_r','parser.py',351),
  ('op_r -> NOT_EQUAL','op_r',1,'p_op_r','parser.py',352),
  ('op_r -> EQUAL','op_r',1,'p_op_r','parser.py',353),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',357),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',361),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',362),
  ('op_a -> ADD','op_a',1,'p_op_a','parser.py',366),
  ('op_a -> SUB','op_a',1,'p_op_a','parser.py',367),
  ('termino -> factor term','termino',2,'p_termino','parser.py',371),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',375),
  ('term -> empty','term',1,'p_term','parser.py',376),
  ('op_a1 -> MUL','op_a1',1,'p_op_a1','parser.py',380),
  ('op_a1 -> DIV','op_a1',1,'p_op_a1','parser.py',381),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',386),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','parser.py',387),
  ('factor -> variable','factor',1,'p_factor','parser.py',388),
  ('factor -> llamada','factor',1,'p_factor','parser.py',389),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',390),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',395),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',412),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',419),
  ('pn_3_addFunction -> <empty>','pn_3_addFunction',0,'p_pn_3_addFunction','parser.py',435),
  ('pn_4_params -> <empty>','pn_4_params',0,'p_pn_4_params','parser.py',448),
  ('pn_5_updateContParams -> <empty>','pn_5_updateContParams',0,'p_pn_5_updateContParams','parser.py',461),
  ('pn_6_end -> <empty>','pn_6_end',0,'p_pn_6_end','parser.py',470),
  ('pn_7_decRenglones -> <empty>','pn_7_decRenglones',0,'p_pn_7_decRenglones','parser.py',476),
  ('pn_8_decColumnas -> <empty>','pn_8_decColumnas',0,'p_pn_8_decColumnas','parser.py',484),
]
