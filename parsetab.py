
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocSEMICOLONrightASSIGNleftNOT_EQUALnonassocLTLEGTGEleftADDSUBleftMULDIVleftLPARENRPARENleftLBRACKRBRACKleftLBRACERBRACEADD AND ASSIGN CARGA CHAR COMMA COMMENT CORRELACIONA CTE_CH CTE_FLOAT CTE_INT CTE_STR DATAFRAME DESDE DISTRIBUCION DIV ENTONCES EQUAL ESCRIBE FLOAT FUNCION GE GT HACER HASTA HAZ ID INT LBRACE LBRACK LE LEE LPAREN LT MEDIA MEDIANA MIENTRAS MODA MUL NOT_EQUAL OR PRINCIPAL PROGRAMA RBRACE RBRACK REGRESA RPAREN SEMICOLON SI SINO STRING SUB TENDENCIA TWO_DOTS VAR VARIABLES VARIANZA VOIDprograma : PROGRAMA ID SEMICOLON var1 func1 principal\n    var1 : var\n         | empty\n    \n    func1 : funcion func1\n          | empty\n    principal : PRINCIPAL LPAREN RPAREN bloquevar : VAR var2var2 : type TWO_DOTS lista_ids var3\n    var3 : var2\n         | empty\n    \n    type : tipo_simple\n         | tipo_compuesto\n    funcion : FUNCION tipo_fun ID LPAREN parametros RPAREN var1 bloque\n    tipo_fun : VOID\n             | tipo_simple\n    \n    parametros : param\n               | empty\n    param : tipo_simple ID param1\n    param1 : COMMA param\n           | empty\n    \n    tipo_simple : INT pn_1_setCurrentType\n                | FLOAT\n                | CHAR\n    \n    tipo_compuesto : DATAFRAME\n                   | STRING\n    lista_ids : lista SEMICOLONlista : ID pn_2_addVariable dd lista1\n    dd : dim_dec\n       | empty\n    \n    lista1 : COMMA lista\n           | empty\n    dim_dec : LBRACK CTE_INT RBRACK dim_dec1\n    dim_dec1 : LBRACK CTE_INT RBRACK\n             | empty\n    dim_index : LBRACK exp RBRACK dim_index1\n    dim_index1 : LBRACK exp RBRACK\n               | empty\n    bloque : LBRACE est RBRACE\n    est : estatutos est\n        | empty\n    \n    estatutos : asignacion\n              | llamada\n              | retorno\n              | lectura\n              | escritura\n              | carga_datos\n              | decision\n              | condicional\n              | no_condicional\n              | funciones_especiales_void\n    asignacion : variable ASSIGN asig\n    asig : llamada\n         | exp SEMICOLON\n    variable : ID di\n    di : dim_index\n       | empty\n    llamada :  ID LPAREN llamada1 RPAREN SEMICOLON\n    llamada1 : exp llamada2\n             | empty\n    \n    llamada2 : COMMA llamada1\n             | empty\n    retorno : REGRESA LPAREN exp RPAREN SEMICOLONlectura : LEE LPAREN variable RPAREN SEMICOLONescritura : ESCRIBE LPAREN esc RPAREN SEMICOLONesc : esc1 esc2\n    esc1 : exp\n         | CTE_STR\n    \n    esc2 : COMMA esc\n         | empty\n    carga_datos : CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON\n    ca : ID\n       | CTE_INT\n    decision : SI LPAREN expresion RPAREN ENTONCES bloque sino\n    sino : SINO bloque\n         | empty\n    condicional : MIENTRAS LPAREN expresion RPAREN HAZ bloqueno_condicional : DESDE variable ASSIGN exp HASTA exp HACER bloque\n    funciones_especiales_void : VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON\n                              | fev LPAREN ID COMMA v_exp RPAREN SEMICOLON\n    \n    fev : DISTRIBUCION\n        | TENDENCIA\n    \n    funciones_especiales : fe LPAREN ID COMMA v_exp RPAREN\n                         | CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN\n    \n    fe : MEDIA\n       | MEDIANA\n       | MODA\n       | VARIANZA\n    v_exp : VARIABLES LBRACK exp RBRACK\n    var_cte : CTE_INT\n            | CTE_FLOAT\n            | CTE_CH\n    expresion : mega_exp expresion1\n    expresion1 : ASSIGN expresion\n               | empty\n    mega_exp : super_exp meg\n    meg : op_l mega_exp\n        | empty\n    \n    op_l : AND\n         | OR\n    super_exp : exp sp\n    sp : op_r exp\n       | empty\n    \n    op_r : LT\n         | GT\n         | LE\n         | GE\n         | NOT_EQUAL\n         | EQUAL\n    exp : termino exp1\n    exp1 : op_a exp\n         | empty\n    \n    op_a : ADD\n         | SUB\n    termino : factor term\n    term : op_a1 termino\n         | empty\n    \n    op_a1 : MUL\n          | DIV\n    \n    factor : var_cte\n           | LPAREN exp RPAREN\n           | variable\n           | llamada\n           | funciones_especiales\n    empty :\n    pn_1_setCurrentType :\n    \n    pn_2_addVariable : \n    '
    
_lr_action_items = {'HAZ':([174,],[209,]),'SUB':([69,94,95,98,109,111,113,115,116,122,123,124,127,128,138,164,167,192,205,208,216,217,219,243,251,260,],[-124,-55,-54,-56,-119,154,-123,-122,-124,-121,-89,-124,-91,-90,-122,-114,-116,-124,-115,-120,-37,-35,-57,-36,-82,-83,]),'VOID':([10,],[25,]),'EQUAL':([94,95,98,109,111,113,115,116,122,123,124,127,128,129,155,158,164,167,192,203,205,208,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,180,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'CARGA':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[52,-47,-42,-43,-48,52,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'CHAR':([6,10,32,36,40,102,],[19,19,19,19,-26,19,]),'SINO':([87,235,],[-38,246,]),'CORRELACIONA':([85,86,88,93,96,97,101,121,136,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,233,],[110,110,110,110,110,110,110,110,110,-113,-112,110,-98,110,-99,-117,-118,110,110,-104,-107,-106,110,-108,-103,-105,110,110,110,110,110,]),'CTE_CH':([85,86,88,93,96,97,101,121,136,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,233,],[127,127,127,127,127,127,127,127,127,-113,-112,127,-98,127,-99,-117,-118,127,127,-104,-107,-106,127,-108,-103,-105,127,127,127,127,127,]),'MUL':([69,94,95,98,109,113,115,116,122,123,124,127,128,138,192,208,216,217,219,243,251,260,],[-124,-55,-54,-56,-119,-123,-122,165,-121,-89,-124,-91,-90,-122,-124,-120,-37,-35,-57,-36,-82,-83,]),'TENDENCIA':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[54,-47,-42,-43,-48,54,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'DIV':([69,94,95,98,109,113,115,116,122,123,124,127,128,138,192,208,216,217,219,243,251,260,],[-124,-55,-54,-56,-119,-123,-122,166,-121,-89,-124,-91,-90,-122,-124,-120,-37,-35,-57,-36,-82,-83,]),'RBRACE':([42,56,57,59,61,62,64,65,67,70,72,74,76,77,87,90,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[-124,87,-47,-42,-43,-40,-48,-124,-50,-49,-41,-44,-46,-45,-38,-39,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'NOT_EQUAL':([94,95,98,109,111,113,115,116,122,123,124,127,128,129,155,158,164,167,192,203,205,208,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,176,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'RPAREN':([30,36,45,46,47,78,91,94,95,97,98,103,104,109,111,112,113,115,116,119,122,123,124,125,127,128,129,130,131,132,133,134,141,142,143,144,146,147,155,158,160,163,164,167,169,170,173,177,183,186,188,192,194,195,196,203,204,205,206,208,210,213,216,217,219,220,223,237,238,240,241,243,251,254,256,257,260,],[35,-124,-16,79,-17,-124,-124,-55,-54,-124,-56,-18,-20,-119,-124,-124,-123,-122,-124,-124,-121,-89,-124,174,-91,-90,-124,184,185,-124,-67,-66,193,-59,-124,197,199,-19,-109,-111,-95,-97,-114,-116,-92,-94,208,-100,-102,-65,-69,-124,-58,-124,-61,-110,-96,-115,-93,-120,-101,-68,-37,-35,-57,-60,234,-72,-71,251,252,-36,-82,-88,259,260,-83,]),'SEMICOLON':([3,33,34,41,48,50,51,69,80,82,94,95,98,106,107,109,111,113,115,116,122,123,124,127,128,138,139,149,151,155,158,164,167,184,185,192,193,197,203,205,208,216,217,219,225,234,243,251,252,259,260,],[4,40,-126,-124,-124,-28,-29,-124,-27,-31,-55,-54,-56,-30,-124,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-122,191,-32,-34,-109,-111,-114,-116,211,212,-124,219,221,-110,-115,-120,-37,-35,-57,-33,245,-36,-82,258,261,-83,]),'VARIABLES':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,198,211,212,219,221,227,228,229,235,245,247,248,250,253,255,258,261,],[63,-47,-42,-43,-48,63,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,222,-62,-64,-57,-63,222,222,-76,-124,-79,-73,-75,222,-77,-74,-78,-70,]),'GE':([94,95,98,109,111,113,115,116,122,123,124,127,128,129,155,158,164,167,192,203,205,208,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,178,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'DATAFRAME':([6,32,40,],[18,18,-26,]),'ESCRIBE':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[58,-47,-42,-43,-48,58,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'MODA':([85,86,88,93,96,97,101,121,136,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,233,],[114,114,114,114,114,114,114,114,114,-113,-112,114,-98,114,-99,-117,-118,114,114,-104,-107,-106,114,-108,-103,-105,114,114,114,114,114,]),'LT':([94,95,98,109,111,113,115,116,122,123,124,127,128,129,155,158,164,167,192,203,205,208,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,181,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'COMMA':([34,41,48,50,51,78,94,95,98,107,108,109,111,113,115,116,122,123,124,127,128,132,133,134,135,143,145,149,151,155,158,164,167,192,201,202,203,205,207,208,214,216,217,219,225,236,237,238,239,243,251,254,260,],[-126,-124,81,-28,-29,102,-55,-54,-56,-124,152,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,187,-67,-66,189,195,198,-32,-34,-109,-111,-114,-116,-124,226,227,-110,-115,228,-120,230,-37,-35,-57,-33,249,-72,-71,250,-36,-82,-88,-83,]),'DISTRIBUCION':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[60,-47,-42,-43,-48,60,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'MEDIANA':([85,86,88,93,96,97,101,121,136,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,233,],[117,117,117,117,117,117,117,117,117,-113,-112,117,-98,117,-99,-117,-118,117,117,-104,-107,-106,117,-108,-103,-105,117,117,117,117,117,]),'ASSIGN':([68,69,91,92,94,95,98,109,111,112,113,115,116,119,122,123,124,127,128,129,155,158,160,163,164,167,177,183,192,203,204,205,208,210,216,217,219,243,251,260,],[93,-124,-124,136,-55,-54,-56,-119,-124,-124,-123,-122,-124,171,-121,-89,-124,-91,-90,-124,-109,-111,-95,-97,-114,-116,-100,-102,-124,-110,-96,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'$end':([1,23,43,87,],[0,-1,-6,-38,]),'HACER':([94,95,98,109,111,113,115,116,122,123,124,127,128,155,158,164,167,192,203,205,208,216,217,219,231,243,251,260,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,242,-36,-82,-83,]),'GT':([94,95,98,109,111,113,115,116,122,123,124,127,128,129,155,158,164,167,192,203,205,208,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,175,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'STRING':([6,32,40,],[15,15,-26,]),'MEDIA':([85,86,88,93,96,97,101,121,136,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,233,],[118,118,118,118,118,118,118,118,118,-113,-112,118,-98,118,-99,-117,-118,118,118,-104,-107,-106,118,-108,-103,-105,118,118,118,118,118,]),'REGRESA':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[55,-47,-42,-43,-48,55,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'RBRACK':([83,94,95,98,109,111,113,115,116,122,123,124,127,128,140,155,158,164,167,192,200,203,205,208,216,217,219,232,243,244,251,260,],[107,-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,192,-109,-111,-114,-116,-124,225,-110,-115,-120,-37,-35,-57,243,-36,254,-82,-83,]),'HASTA':([94,95,98,109,111,113,115,116,122,123,124,127,128,155,158,164,167,190,192,203,205,208,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,-109,-111,-114,-116,215,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'MIENTRAS':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[53,-47,-42,-43,-48,53,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'ADD':([69,94,95,98,109,111,113,115,116,122,123,124,127,128,138,164,167,192,205,208,216,217,219,243,251,260,],[-124,-55,-54,-56,-119,156,-123,-122,-124,-121,-89,-124,-91,-90,-122,-114,-116,-124,-115,-120,-37,-35,-57,-36,-82,-83,]),'LE':([94,95,98,109,111,113,115,116,122,123,124,127,128,129,155,158,164,167,192,203,205,208,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,-123,-122,-124,-121,-89,-124,-91,-90,182,-109,-111,-114,-116,-124,-110,-115,-120,-37,-35,-57,-36,-82,-83,]),'DESDE':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[66,-47,-42,-43,-48,66,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'LPAREN':([22,31,52,53,54,55,58,60,63,69,71,73,75,85,86,88,93,96,97,101,110,114,117,118,120,121,124,126,136,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,233,],[30,36,84,85,-81,86,88,-80,89,97,99,100,101,121,121,121,121,121,121,121,153,-86,-85,-84,172,121,97,-87,121,-113,-112,121,-98,121,-99,-117,-118,121,121,-104,-107,-106,121,-108,-103,-105,121,121,121,121,121,]),'VAR':([4,79,],[6,6,]),'CTE_INT':([49,85,86,88,93,96,97,101,121,136,150,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,226,233,249,],[83,123,123,123,123,123,123,123,123,123,200,-113,-112,123,-98,123,-99,-117,-118,123,123,-104,-107,-106,123,-108,-103,-105,123,123,123,123,237,123,237,]),'ID':([2,14,19,21,24,25,26,28,29,42,44,57,59,61,64,65,66,67,70,72,74,76,77,81,84,85,86,87,88,89,93,96,97,99,100,101,121,136,137,138,153,154,156,157,159,161,162,165,166,168,171,172,175,176,178,179,180,181,182,187,189,191,195,211,212,215,218,219,221,226,229,230,233,235,245,247,248,249,253,255,258,261,],[3,-22,-23,-125,-15,-14,31,34,-21,69,78,-47,-42,-43,-48,69,91,-50,-49,-41,-44,-46,-45,34,108,124,124,-38,124,135,69,124,124,91,145,124,124,124,-51,-52,202,-113,-112,124,-98,124,-99,-117,-118,124,124,207,-104,-107,-106,124,-108,-103,-105,124,214,-53,124,-62,-64,124,124,-57,-63,238,-76,241,124,-124,-79,-73,-75,238,-77,-74,-78,-70,]),'FUNCION':([4,5,7,8,11,16,32,37,38,39,40,87,148,],[-124,10,-2,-3,10,-7,-124,-8,-9,-10,-26,-38,-13,]),'AND':([94,95,98,109,111,112,113,115,116,122,123,124,127,128,129,155,158,164,167,177,183,192,203,205,208,210,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,159,-123,-122,-124,-121,-89,-124,-91,-90,-124,-109,-111,-114,-116,-100,-102,-124,-110,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'LBRACE':([7,8,16,32,35,37,38,39,40,79,105,209,224,242,246,],[-2,-3,-7,-124,42,-8,-9,-10,-26,-124,42,42,42,42,42,]),'LEE':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[71,-47,-42,-43,-48,71,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'VARIANZA':([85,86,88,93,96,97,101,121,136,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,233,],[126,126,126,126,126,126,126,126,126,-113,-112,126,-98,126,-99,-117,-118,126,126,-104,-107,-106,126,-108,-103,-105,126,126,126,126,126,]),'CTE_STR':([88,152,187,],[133,201,133,]),'INT':([6,10,32,36,40,102,],[21,21,21,21,-26,21,]),'FLOAT':([6,10,32,36,40,102,],[14,14,14,14,-26,14,]),'CTE_FLOAT':([85,86,88,93,96,97,101,121,136,154,156,157,159,161,162,165,166,168,171,175,176,178,179,180,181,182,187,195,215,218,233,],[128,128,128,128,128,128,128,128,128,-113,-112,128,-98,128,-99,-117,-118,128,128,-104,-107,-106,128,-108,-103,-105,128,128,128,128,128,]),'LBRACK':([34,41,69,91,107,124,192,222,],[-126,49,96,96,150,96,218,233,]),'ENTONCES':([199,],[224,]),'TWO_DOTS':([13,14,15,17,18,19,20,21,29,],[-12,-22,-25,-11,-24,-23,28,-125,-21,]),'SI':([42,57,59,61,64,65,67,70,72,74,76,77,87,137,138,191,211,212,219,221,229,235,245,247,248,253,255,258,261,],[75,-47,-42,-43,-48,75,-50,-49,-41,-44,-46,-45,-38,-51,-52,-53,-62,-64,-57,-63,-76,-124,-79,-73,-75,-77,-74,-78,-70,]),'PROGRAMA':([0,],[2,]),'OR':([94,95,98,109,111,112,113,115,116,122,123,124,127,128,129,155,158,164,167,177,183,192,203,205,208,210,216,217,219,243,251,260,],[-55,-54,-56,-119,-124,162,-123,-122,-124,-121,-89,-124,-91,-90,-124,-109,-111,-114,-116,-100,-102,-124,-110,-115,-120,-101,-37,-35,-57,-36,-82,-83,]),'PRINCIPAL':([4,5,7,8,9,11,12,16,27,32,37,38,39,40,87,148,],[-124,-124,-2,-3,22,-124,-5,-7,-4,-124,-8,-9,-10,-26,-38,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion1':([119,],[169,]),'tipo_simple':([6,10,32,36,102,],[17,24,17,44,44,]),'ca':([226,249,],[236,256,]),'exp1':([111,],[155,]),'di':([69,91,124,],[95,95,95,]),'pn_1_setCurrentType':([21,],[29,]),'var_cte':([85,86,88,93,96,97,101,121,136,157,161,168,171,179,187,195,215,218,233,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'op_r':([129,],[179,]),'termino':([85,86,88,93,96,97,101,121,136,157,161,168,171,179,187,195,215,218,233,],[111,111,111,111,111,111,111,111,111,111,111,205,111,111,111,111,111,111,111,]),'llamada2':([143,],[194,]),'bloque':([35,105,209,224,242,246,],[43,148,229,235,253,255,]),'llamada1':([97,195,],[141,220,]),'principal':([9,],[23,]),'super_exp':([85,101,161,171,],[112,112,112,112,]),'funciones_especiales':([85,86,88,93,96,97,101,121,136,157,161,168,171,179,187,195,215,218,233,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'dim_index':([69,91,124,],[94,94,94,]),'est':([42,65,],[56,90,]),'asig':([93,],[137,]),'decision':([42,65,],[57,57,]),'lista_ids':([28,],[32,]),'param':([36,102,],[45,147,]),'fev':([42,65,],[73,73,]),'llamada':([42,65,85,86,88,93,96,97,101,121,136,157,161,168,171,179,187,195,215,218,233,],[59,59,115,115,115,138,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'esc':([88,187,],[131,213,]),'factor':([85,86,88,93,96,97,101,121,136,157,161,168,171,179,187,195,215,218,233,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'var':([4,79,],[7,7,]),'dim_index1':([192,],[217,]),'v_exp':([198,227,228,250,],[223,239,240,257,]),'dim_dec':([41,],[50,]),'condicional':([42,65,],[64,64,]),'empty':([4,5,11,32,36,41,42,48,65,69,78,79,91,97,107,111,112,116,119,124,129,132,143,192,195,235,],[8,12,12,39,47,51,62,82,62,98,104,8,98,142,151,158,163,167,170,98,183,188,196,216,142,248,]),'funcion':([5,11,],[11,11,]),'op_l':([112,],[161,]),'expresion':([85,101,171,],[125,146,206,]),'func1':([5,11,],[9,27,]),'var1':([4,79,],[5,105,]),'exp':([85,86,88,93,96,97,101,121,136,157,161,171,179,187,195,215,218,233,],[129,130,134,139,140,143,129,173,190,203,129,129,210,134,143,231,232,244,]),'var3':([32,],[37,]),'var2':([6,32,],[16,38,]),'dim_dec1':([107,],[149,]),'dd':([41,],[48,]),'mega_exp':([85,101,161,171,],[119,119,204,119,]),'tipo_fun':([10,],[26,]),'retorno':([42,65,],[61,61,]),'estatutos':([42,65,],[65,65,]),'fe':([85,86,88,93,96,97,101,121,136,157,161,168,171,179,187,195,215,218,233,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'funciones_especiales_void':([42,65,],[67,67,]),'variable':([42,65,66,85,86,88,93,96,97,99,101,121,136,157,161,168,171,179,187,195,215,218,233,],[68,68,92,122,122,122,122,122,122,144,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'lista':([28,81,],[33,106,]),'op_a':([111,],[157,]),'no_condicional':([42,65,],[70,70,]),'tipo_compuesto':([6,32,],[13,13,]),'esc1':([88,187,],[132,132,]),'term':([116,],[164,]),'asignacion':([42,65,],[72,72,]),'sino':([235,],[247,]),'type':([6,32,],[20,20,]),'sp':([129,],[177,]),'pn_2_addVariable':([34,],[41,]),'lectura':([42,65,],[74,74,]),'esc2':([132,],[186,]),'programa':([0,],[1,]),'param1':([78,],[103,]),'meg':([112,],[160,]),'parametros':([36,],[46,]),'op_a1':([116,],[168,]),'lista1':([48,],[80,]),'carga_datos':([42,65,],[76,76,]),'escritura':([42,65,],[77,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON var1 func1 principal','programa',6,'p_programa','parser.py',34),
  ('var1 -> var','var1',1,'p_var1','parser.py',39),
  ('var1 -> empty','var1',1,'p_var1','parser.py',40),
  ('func1 -> funcion func1','func1',2,'p_func1','parser.py',46),
  ('func1 -> empty','func1',1,'p_func1','parser.py',47),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','parser.py',52),
  ('var -> VAR var2','var',2,'p_var','parser.py',57),
  ('var2 -> type TWO_DOTS lista_ids var3','var2',4,'p_var2','parser.py',61),
  ('var3 -> var2','var3',1,'p_var3','parser.py',66),
  ('var3 -> empty','var3',1,'p_var3','parser.py',67),
  ('type -> tipo_simple','type',1,'p_type','parser.py',73),
  ('type -> tipo_compuesto','type',1,'p_type','parser.py',74),
  ('funcion -> FUNCION tipo_fun ID LPAREN parametros RPAREN var1 bloque','funcion',8,'p_funcion','parser.py',79),
  ('tipo_fun -> VOID','tipo_fun',1,'p_tipo_fun','parser.py',84),
  ('tipo_fun -> tipo_simple','tipo_fun',1,'p_tipo_fun','parser.py',85),
  ('parametros -> param','parametros',1,'p_parametros','parser.py',91),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',92),
  ('param -> tipo_simple ID param1','param',3,'p_param','parser.py',97),
  ('param1 -> COMMA param','param1',2,'p_param1','parser.py',102),
  ('param1 -> empty','param1',1,'p_param1','parser.py',103),
  ('tipo_simple -> INT pn_1_setCurrentType','tipo_simple',2,'p_tipo_simple','parser.py',109),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','parser.py',110),
  ('tipo_simple -> CHAR','tipo_simple',1,'p_tipo_simple','parser.py',111),
  ('tipo_compuesto -> DATAFRAME','tipo_compuesto',1,'p_tipo_compuesto','parser.py',116),
  ('tipo_compuesto -> STRING','tipo_compuesto',1,'p_tipo_compuesto','parser.py',117),
  ('lista_ids -> lista SEMICOLON','lista_ids',2,'p_lista_ids','parser.py',122),
  ('lista -> ID pn_2_addVariable dd lista1','lista',4,'p_lista','parser.py',125),
  ('dd -> dim_dec','dd',1,'p_dd','parser.py',129),
  ('dd -> empty','dd',1,'p_dd','parser.py',130),
  ('lista1 -> COMMA lista','lista1',2,'p_lista1','parser.py',135),
  ('lista1 -> empty','lista1',1,'p_lista1','parser.py',136),
  ('dim_dec -> LBRACK CTE_INT RBRACK dim_dec1','dim_dec',4,'p_dim_dec','parser.py',141),
  ('dim_dec1 -> LBRACK CTE_INT RBRACK','dim_dec1',3,'p_dim_dec1','parser.py',145),
  ('dim_dec1 -> empty','dim_dec1',1,'p_dim_dec1','parser.py',146),
  ('dim_index -> LBRACK exp RBRACK dim_index1','dim_index',4,'p_dim_index','parser.py',150),
  ('dim_index1 -> LBRACK exp RBRACK','dim_index1',3,'p_dim_index1','parser.py',154),
  ('dim_index1 -> empty','dim_index1',1,'p_dim_index1','parser.py',155),
  ('bloque -> LBRACE est RBRACE','bloque',3,'p_bloque','parser.py',161),
  ('est -> estatutos est','est',2,'p_est','parser.py',166),
  ('est -> empty','est',1,'p_est','parser.py',167),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',173),
  ('estatutos -> llamada','estatutos',1,'p_estatutos','parser.py',174),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',175),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',176),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',177),
  ('estatutos -> carga_datos','estatutos',1,'p_estatutos','parser.py',178),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',179),
  ('estatutos -> condicional','estatutos',1,'p_estatutos','parser.py',180),
  ('estatutos -> no_condicional','estatutos',1,'p_estatutos','parser.py',181),
  ('estatutos -> funciones_especiales_void','estatutos',1,'p_estatutos','parser.py',182),
  ('asignacion -> variable ASSIGN asig','asignacion',3,'p_asignacion','parser.py',189),
  ('asig -> llamada','asig',1,'p_asig','parser.py',193),
  ('asig -> exp SEMICOLON','asig',2,'p_asig','parser.py',194),
  ('variable -> ID di','variable',2,'p_variable','parser.py',197),
  ('di -> dim_index','di',1,'p_di','parser.py',201),
  ('di -> empty','di',1,'p_di','parser.py',202),
  ('llamada -> ID LPAREN llamada1 RPAREN SEMICOLON','llamada',5,'p_llamada','parser.py',206),
  ('llamada1 -> exp llamada2','llamada1',2,'p_llamada1','parser.py',210),
  ('llamada1 -> empty','llamada1',1,'p_llamada1','parser.py',211),
  ('llamada2 -> COMMA llamada1','llamada2',2,'p_llamada2','parser.py',216),
  ('llamada2 -> empty','llamada2',1,'p_llamada2','parser.py',217),
  ('retorno -> REGRESA LPAREN exp RPAREN SEMICOLON','retorno',5,'p_retorno','parser.py',221),
  ('lectura -> LEE LPAREN variable RPAREN SEMICOLON','lectura',5,'p_lectura','parser.py',224),
  ('escritura -> ESCRIBE LPAREN esc RPAREN SEMICOLON','escritura',5,'p_escritura','parser.py',227),
  ('esc -> esc1 esc2','esc',2,'p_esc','parser.py',230),
  ('esc1 -> exp','esc1',1,'p_esc1','parser.py',234),
  ('esc1 -> CTE_STR','esc1',1,'p_esc1','parser.py',235),
  ('esc2 -> COMMA esc','esc2',2,'p_esc2','parser.py',239),
  ('esc2 -> empty','esc2',1,'p_esc2','parser.py',240),
  ('carga_datos -> CARGA LPAREN ID COMMA CTE_STR COMMA ca COMMA ca RPAREN SEMICOLON','carga_datos',11,'p_carga_datos','parser.py',244),
  ('ca -> ID','ca',1,'p_ca','parser.py',248),
  ('ca -> CTE_INT','ca',1,'p_ca','parser.py',249),
  ('decision -> SI LPAREN expresion RPAREN ENTONCES bloque sino','decision',7,'p_decision','parser.py',254),
  ('sino -> SINO bloque','sino',2,'p_sino','parser.py',258),
  ('sino -> empty','sino',1,'p_sino','parser.py',259),
  ('condicional -> MIENTRAS LPAREN expresion RPAREN HAZ bloque','condicional',6,'p_condicional','parser.py',263),
  ('no_condicional -> DESDE variable ASSIGN exp HASTA exp HACER bloque','no_condicional',8,'p_no_condicional','parser.py',266),
  ('funciones_especiales_void -> VARIABLES LPAREN ID COMMA ID COMMA ID RPAREN SEMICOLON','funciones_especiales_void',9,'p_funciones_especiales_void','parser.py',271),
  ('funciones_especiales_void -> fev LPAREN ID COMMA v_exp RPAREN SEMICOLON','funciones_especiales_void',7,'p_funciones_especiales_void','parser.py',272),
  ('fev -> DISTRIBUCION','fev',1,'p_fev','parser.py',276),
  ('fev -> TENDENCIA','fev',1,'p_fev','parser.py',277),
  ('funciones_especiales -> fe LPAREN ID COMMA v_exp RPAREN','funciones_especiales',6,'p_funciones_especiales','parser.py',282),
  ('funciones_especiales -> CORRELACIONA LPAREN ID COMMA v_exp COMMA v_exp RPAREN','funciones_especiales',8,'p_funciones_especiales','parser.py',283),
  ('fe -> MEDIA','fe',1,'p_fe','parser.py',287),
  ('fe -> MEDIANA','fe',1,'p_fe','parser.py',288),
  ('fe -> MODA','fe',1,'p_fe','parser.py',289),
  ('fe -> VARIANZA','fe',1,'p_fe','parser.py',290),
  ('v_exp -> VARIABLES LBRACK exp RBRACK','v_exp',4,'p_v_exp','parser.py',293),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','parser.py',300),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','parser.py',301),
  ('var_cte -> CTE_CH','var_cte',1,'p_var_cte','parser.py',302),
  ('expresion -> mega_exp expresion1','expresion',2,'p_expresion','parser.py',308),
  ('expresion1 -> ASSIGN expresion','expresion1',2,'p_expresion1','parser.py',312),
  ('expresion1 -> empty','expresion1',1,'p_expresion1','parser.py',313),
  ('mega_exp -> super_exp meg','mega_exp',2,'p_mega_exp','parser.py',317),
  ('meg -> op_l mega_exp','meg',2,'p_meg','parser.py',321),
  ('meg -> empty','meg',1,'p_meg','parser.py',322),
  ('op_l -> AND','op_l',1,'p_op_l','parser.py',326),
  ('op_l -> OR','op_l',1,'p_op_l','parser.py',327),
  ('super_exp -> exp sp','super_exp',2,'p_super_exp','parser.py',331),
  ('sp -> op_r exp','sp',2,'p_sp','parser.py',335),
  ('sp -> empty','sp',1,'p_sp','parser.py',336),
  ('op_r -> LT','op_r',1,'p_op_r','parser.py',340),
  ('op_r -> GT','op_r',1,'p_op_r','parser.py',341),
  ('op_r -> LE','op_r',1,'p_op_r','parser.py',342),
  ('op_r -> GE','op_r',1,'p_op_r','parser.py',343),
  ('op_r -> NOT_EQUAL','op_r',1,'p_op_r','parser.py',344),
  ('op_r -> EQUAL','op_r',1,'p_op_r','parser.py',345),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',349),
  ('exp1 -> op_a exp','exp1',2,'p_exp1','parser.py',353),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',354),
  ('op_a -> ADD','op_a',1,'p_op_a','parser.py',358),
  ('op_a -> SUB','op_a',1,'p_op_a','parser.py',359),
  ('termino -> factor term','termino',2,'p_termino','parser.py',363),
  ('term -> op_a1 termino','term',2,'p_term','parser.py',367),
  ('term -> empty','term',1,'p_term','parser.py',368),
  ('op_a1 -> MUL','op_a1',1,'p_op_a1','parser.py',372),
  ('op_a1 -> DIV','op_a1',1,'p_op_a1','parser.py',373),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',378),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','parser.py',379),
  ('factor -> variable','factor',1,'p_factor','parser.py',380),
  ('factor -> llamada','factor',1,'p_factor','parser.py',381),
  ('factor -> funciones_especiales','factor',1,'p_factor','parser.py',382),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',387),
  ('pn_1_setCurrentType -> <empty>','pn_1_setCurrentType',0,'p_pn_1_setCurrentType','parser.py',404),
  ('pn_2_addVariable -> <empty>','pn_2_addVariable',0,'p_pn_2_addVariable','parser.py',411),
]
